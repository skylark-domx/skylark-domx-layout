{"version":3,"sources":["skylark-domx-layout-all.js"],"names":["define","obj1","path","obj2","split","length","ns","i","name","_attach","skylark","attach","obj","class2type","toString","type","forEach","toLowerCase","String","call","isEmptyObject","isFunction","value","isHtmlNode","nodeType","isNumber","isObject","isString","isWindow","window","isArray","object","constructor","Array","isArrayLike","isBoolean","isDefined","isDocument","DOCUMENT_NODE","isEmpty","isNull","isNumeric","isPlainObject","Object","getPrototypeOf","prototype","isSameOrigin","href","origin","location","protocol","hostname","port","startsWith","isSymbol","isObjectLike","objectToString","symbolTag","isUndefined","undefined","types","objects","filter","baseFindIndex","array","predicate","fromIndex","fromRight","index","baseIsNaN","flatten","result","item","j","push","baseIndexOf","compact","first","items","n","slice","func","inArray","indexOf","makeArray","offset","startWith","concat","merge","second","l","arr","fn","map","elements","callback","key","values","reduce","initialValue","uniq","idx","INFINITY","MAX_INTEGER","NAN","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","toFinite","toNumber","sign","other","valueOf","replace","isBinary","test","toInteger","remainder","numbers","eq","deepEq","hasOwnProperty","keysFunc","defaults","SymbolProto","Symbol","allKeys","keys","has","_mixin","target","source","deep","safe","_parseMixinArgs","args","params","arguments","shift","pop","sources","mixin","apply","this","a","b","aStack","bStack","className","areArrays","aCtor","bCtor","clone","src","checkCloneMethod","copy","each","undef","extend","arg","isEqual","includes","collection","guard","nativeMax","isMatch","attrs","omit","prop1","prop2","pn","pick","removeItem","splice","fallback","prop","safeMixin","arrays","createClass","_constructor","_construct","init","props","parent","mixins","options","innerParent","ctor","Error","clss","unshift","superclass","cls","clsMixines","serialMixins","newCtor","xtor","Function","create","__proto__","__mixin__","mergeMixins","klassName","__mixins__","partial","proto","_super","noOverrided","overrides","superFn","tmp","overrided","ret","defineProperty","extendClass","inherit","f1","klass","QueryResults","results","isPromise","then","addIterativeMethod","method","Deferred","when","delegate","total","ArrayStore","queryEngine","query","queryObject","required","execute","thisObject","out","cache","buildFn","sortSet","sort","aValue","attribute","bValue","descending","start","count","Infinity","matches","idProperty","get","id","data","getIdentity","put","Math","random","overwrite","add","remove","setData","identifier","nextId","aspect","methodName","advice","receiveArguments","dispatcher","existing","executionId","before","next","around","after","newResults","signal","previous","advised","advise","TMP","templateSettings","evaluate","interpolate","escape","debounce","wait","timeout","context","clearTimeout","setTimeout","defer","requestAnimationFrame","setTimeoutout","noop","proxy","TypeError","returnTrue","returnFalse","template","text","settings","oldSettings","render","matcher","RegExp","noMatch","join","match","escapeRegExp","escapeChar","variable","e","_","argument","funcs","PGLISTENERS","PGNOTIFIES","Promise","always","handler","done","fail","catch","self","p","promise","resolve","reject","_resolve","_reject","wrapPromise","d","added","state","isResolved","isRejected","onResolved","onRejected","onProgress","progress","__ctx__","pipe","resolveWith","_resolved","notify","listener","error","reason","rejectWith","_rejected","errback","progback","all","bind","race","valueOrPromise","receivedPromise","nativePromise","deferred","cancel","err","immediate","async","parallel","ctx","rets","series","waterful","parseMilliSeconds","str","strs","number","isNaN","trim","parse","event","segs","Evented","on","events","selector","one","_hub","parsed","trigger","CustomEvent","eventName","listeners","len","reCompact","listened","evtArr","_events","listenTo","listening","listeningTo","_listeningTo","listeningEvents","listeningEvent","listenToOnce","off","evts","liveEvents","unlistenTo","hoster","isBrowser","isNode","global","browser","node","process","versions","v8","_document","w","require","document","matched","ua","exec","version","uaMatch","navigator","userAgent","chrome","webkit","safari","idCounter","camelCase","toUpperCase","dasherize","deserializeValue","JSON","lowerFirst","charAt","serializeValue","stringify","substitute","transform","getObject","retVal","getValue","_k","reverse","v","format","uniqueId","prefix","upperFirst","getAbsoluteUrl","url","createElement","Xhr","jsonpID","rscript","scriptTypeRE","xmlTypeRE","jsonType","htmlType","blankRE","XhrDefaultOptions","beforeSend","success","complete","accepts","script","json","xml","html","crossDomain","processData","xhrFields","withCredentials","mimeToDataType","mime","appendQuery","serializeData","param","traditional","serialize","scope","t","hash","_request","xhr","XMLHttpRequest","dataType","handleAs","mimeType","headers","isFormData","FormData","basicAuthorizationToken","user","password","contentType","overrideMimeType","finish","onloadend","onabort","onprogress","ontimeout","status","getResponseHeader","responseText","eval","responseXML","Blob","xhrObj","response","reponse","statusText","evt","open","hdr","setRequestHeader","send","abort","request","post","patch","del","defaultOptions","strings","Restful","idAttribute","getBaseUrl","baseEndpoint","baseUrl","server","basePath","_head","_get","_post","verb","_put","_delete","_patch","retrieve","update","delete","Stateful","attributes","cid","cidPrefix","set","changed","validationError","toJSON","attr","val","_validate","unset","silent","changes","changing","_changing","_previousAttributes","current","prev","_pending","clear","hasChanged","changedAttributes","diff","old","previousAttributes","isNew","isValid","validate","hub","publish","arg1","argn","subscribe","datetimes","topic","_uid","langx","createEvent","funcArg","payload","getQueryParams","queryParam","nv","toPixel","parseFloat","uid","URL","webkitURL","layouts","dom","vendorPrefix","vendorPrefixRE","transEndEventNames","WebkitTransition","MozTransition","OTransition","transition","transEndEventName","css3PropPrefix","css3EventPrefix","cssStyles","cssProps","vendorPrefixesRE","testEl","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","requestFullScreen","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","testStyle","exitFullscreen","webkitCancelFullScreen","mozCancelFullScreen","msExitFullscreen","style","cssPropName","isIE","normalizeStyleProperty","normalizeCssProperty","normalizeCssEvent","support","end","every","maybeAddPx","cssNumber","column-count","columns","font-weight","line-height","opacity","z-index","zoom","classReCache","classRE","svg","baseVal","elementDisplay","getStyles","elem","view","ownerDocument","defaultView","opener","getComputedStyle","styler","autocssfix","cssHooks","addClass","elm","names","re","css","property","computedStyle","getPropertyValue","removeProperty","cssText","disabled","hasClass","hide","isInvisible","removeClass","show","nodeName","element","display","body","appendChild","parentNode","removeChild","defaultDisplay","toggleClass","fragmentRE","singleTagRE","div","table","tableBody","tableRow","containers","tr","tbody","thead","tfoot","td","th","*","rootNodeRE","ensureNodes","nodes","copyByClone","cloneNode","append","placing","tag","setAttribute","rxhtmlTag","isChildOf","directly","documentElement","contains","ownerDoc","noder","active","doc","el","activeElement","blur","getAttribs","setAttrib","getAttrib","contents","chkName","contentDocument","childNodes","createFragment","$1","container","innerHTML","child","createTextNode","empty","hasChildNodes","firstChild","fullScreen","exitFullScreen","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","focusable","hasTabindex","mapName","img","focusableIfVisible","fieldset","$","is","closest","visible","isInDocument","offsetParent","ownerWindow","parentWindow","refNode","nextSibling","insertBefore","prepend","console","warn","children","oldNode","replaceChild","throb","timer","time","throbber","class","overlayDiv","position","top","left","width","height","zIndex","overlay","textNode","nodeValue","traverse","wrapper","wrapperNode","wrapperInner","unwrap","isDoc","velm","local","nativeMatchesSelector","separatorIndex","combinatorIndex","reversed","from","reverseCache","reUnescape","expression","isReversed","Slick","currentCache","expressions","raw","regexp","parser","reverseCombinator","combinator","exp","last","parts","cexp","string","rawMatch","separator","combinatorChildren","tagName","attributeKey","attributeOperator","attributeQuote","attributeValue","pseudoMarker","pseudoClass","pseudoQuote","pseudoClassQuotedValue","pseudoClassValue","currentSeparator","currentParsed","classList","classes","pseudos","operator","rinputs","rheader","parseSelector","button","checked","enabled","even","focus","tabindex","gt","sel","find","header","hidden","input","lt","not","odd","selected","tabbable","tabIndex","offsetWidth","createInputPseudo","createButtonPseudo","isArrayFilter","radio","checkbox","file","image","submit","reset","ancestors","root","rootIsSelector","descendants","querySelectorAll","matchError","descendant","querySelector","lastChild","previousSibling","check","adjacent","nextSiblings","previousSiblings","siblings","divide","cond","nativeSelector","customPseudos","part","arrayFilte","pseudo","getAttribute","hasAttribute","currentExpression","simpleExpCounter","filterSingle","matchs","combine","bit","node1","op","divided","single","currentBit","founds","found","currentItems","finder","ancestor","byId","getElementById","findAll","capitalRE","propMap","readonly","for","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","attrName","_store","confirm","store","_attributeData","_setData","dataAttrName","camelName","_getData","cleanData","pluck","datax","dataName","aria","removeAttr","removeAttribute","removeData","removeProp","txt","textContent","multiple","selectedOptions","option","ignoreProperties","eventMethods","preventDefault","stopImmediatePropagation","stopPropagation","readyRE","compatible","isDefaultPrevented","sourceMethod","EventCtors","NativeEvents","compositionstart","compositionend","compositionupdate","beforecopy","beforecut","beforepaste","cut","paste","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","change","selectionchange","focusin","focusout","keydown","keypress","keyup","message","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","mouseenter","mouseleave","textInput","touchstart","touchmove","touchend","load","resize","select","scroll","unload","wheel","bubbles","cancelable","namespace","getEventCtor","createProxy","originalEvent","specialEvents","focusinSupported","hover","realEvent","handlers","EventBindings","_target","_event","_bindings","bindings","binding","_listener","domEvt","_args","isImmediatePropagationStopped","currentTarget","liveFired","related","relatedTarget","addEventListener","removing","removeEventListener","EventsHandler","_handler","register","specialEvent","bindingEvent","bindType","bindEventName","unregister","findHandler","ready","readyState","keyCodeLookup","backspace","comma","down","enter","home","page_down","page_up","period","right","space","tab","up","eventer","transitionEnd","delegateType","shortcuts","registry","run","shortcut","metaKey","ctrlKey","ctrl","alt","altKey","shiftKey","keyCode","charCode","pattern","shortcutKey","setting","charCodeAt","regKey","special","stop","evented","Event","dispatchEvent","cachedScrollbarWidth","px","scrollbarWidth","w1","w2","innerDiv","clientWidth","borderExtents","bottom","s","borderLeftWidth","borderTopWidth","borderRightWidth","borderBottomWidth","boundingPosition","coords","getBoundingClientRect","parentOffset","mex","marginExtents","pbex","relativePosition","boundingRect","size","clientSize","dimension","clientHeight","isBorderBox","bex","pex","paddingExtents","getDocumentSize","max","scrollWidth","scrollHeight","offsetHeight","marginLeft","marginTop","marginRight","marginBottom","marginSize","me","paddingLeft","paddingTop","paddingRight","paddingBottom","pagePosition","pageXOffset","pageYOffset","relativeRect","scrollLeft","hasScrollLeft","scrollTo","scrollY","scrollTop","hasScrollTop","scrollX","innerWidth","innerHeight","geom","contentRect","cs","marginRect","pageRect","round","scrollIntoView","align","x","y","parentWidth","parentHeight","parentElm","pos","rootElm","offsetLeft","offsetTop","getOffset","abs","rhorizontal","rvertical","roffset","rposition","rpercent","getOffsets","offsets","parseCss","positions","fit","newOverRight","within","withinOffset","outerWidth","collisionPosLeft","collisionPosition","overLeft","overRight","collisionWidth","newOverBottom","outerHeight","collisionPosTop","overTop","overBottom","collisionHeight","flip","newOverLeft","myOffset","my","elemWidth","atOffset","at","targetWidth","newOverTop","elemHeight","targetHeight","flipfit","posit","targetOffset","basePosition","dimensions","of","withinElement","hasOffset","msize","scrollInfo","overflowX","overflowY","hasOverflowX","getScrollInfo","collision","pageY","pageX","horizontalOffset","verticalOffset","using","dir","feedback","horizontal","vertical","important","animationName","animationDuration","animationTiming","transitionProperty","transitionDuration","transitionTiming","transitionDelay","animationEnd","supportedTransforms","cssReset","animate","properties","duration","ease","delay","endEvent","wrappedCallback","cssValues","cssProperties","transforms","that","fired","easing","fx","speeds","normal","eace","clientLeft","scrollToTop","speed","scale","scrollFrom","freq","interval","setInterval","clearInterval","fadeTo","fadeIn","fadeOut","slideDown","visibility","overflow","slideUp","queue","fast","slow","emulateTransitionEnd","called","fadeToggle","ceasing","allback","slideToggle","toggle","isQ","some","rquickExpr","wrapper_map","wrapper_selector","wrapper_every_act","wrapper_every_act_firstArgFunc","oldValueFunc","wrapper_name_value","wrapper_value","newValue","NodeList","toArray","excludes","parents","parentsUntil","util","pushStack","elms","prevObject","replaceWith","newContent","wrap","structure","wrapAll","wrappingElement","wrapInner","prevAll","nextAll","wrapper_some_chk","detach","fnOver","fnOut","Dimension","m","margin","cb","mb","wrapper_node_operation","argType","appendTo","prependTo","insertAfter","replaceAll","original","elems","insert","toogle","scrollParent","includeHidden","excludeStaticParent","overflowRegex","andSelf","addBack","eventType","place","addContent","content","replaceClass","newClass","oldClass","disableSelection","enableSelection","plugin","returnValue","plugins","instantiate","Orientation","layout","horz","vert","box","wspacing","hspacing","orientation","$items","bsgrid","DockStyle","none","client","dock","dim","h","region","childSize","bounds","flow","grid","MasonryLayouter","_measureColumns","calculated","columnWidth","firstItem","extraWidth","gutter","containerWidth","cols","excess","mathMethod","_positionItem","isInstant","relativePositionitem","animation","moveto","_getColGroup","colSpan","colYs","colGroup","groupCount","groupColYs","_getItemLayoutPosition","itemSize","min","minimumY","shortColIndex","setHeight","setSpan","_filterItems","_resetLayout","maxY","_calcLayout","calcInfos","_postLayout","autoFit","domNode","calcInfo","masonry","layouter","rows","main"],"mappings":";;;;;;;o8BAAAA,OAAA,2BAAA,WACA,OAAA,SAAAC,EAAAC,EAAAC,GACA,iBAAAD,IACAA,EAAAA,EAAAE,MAAA,MAOA,IALA,IAAAC,EAAAH,EAAAG,OACAC,EAAAL,EACAM,EAAA,EACAC,EAAAN,EAAAK,KAEAA,EAAAF,GACAC,EAAAA,EAAAE,GAAAF,EAAAE,OACAA,EAAAN,EAAAK,KAGA,OAAAD,EAAAE,GAAAL,KAGAH,OAAA,yBACA,aACA,SAAAS,GACA,IAAAC,GACAC,OAAA,SAAAT,EAAAU,GACA,OAAAH,EAAAC,EAAAR,EAAAU,KAGA,OAAAF,IAGAV,OAAA,6BAAA,yBAAA,SAAAU,GACA,OAAAA,IAGAV,OAAA,yBACA,WACA,IAGAa,EAHAC,KAAAA,SAEAC,GACAF,KAGA,uEAAAT,MAAA,KAAAY,QAAA,SAAAR,GACAK,EAAA,WAAAL,EAAA,KAAAA,EAAAS,gBAGA,SAAAL,GACA,OAAA,MAAAA,EAAAM,OAAAN,GACAC,EAAAC,EAAAK,KAAAP,KAAA,WArBA,SAAAQ,EAAAR,GACA,IAAAJ,EACA,IAAAA,KAAAI,EACA,GAAA,OAAAA,EAAAJ,GACA,OAAA,EAGA,OAAA,EAiBA,SAAAa,EAAAC,GACA,MAAA,YAAAP,EAAAO,GAGA,SAAAC,EAAAX,GACA,OAAAA,GAAAA,EAAAY,SA0BA,SAAAC,EAAAb,GACA,MAAA,iBAAAA,EAGA,SAAAc,EAAAd,GACA,MAAA,UAAAG,EAAAH,GAOA,SAAAe,EAAAf,GACA,MAAA,iBAAAA,EAGA,SAAAgB,EAAAhB,GACA,OAAAA,GAAAA,GAAAA,EAAAiB,OAmCA,OAEAC,QApFA,SAAAC,GACA,OAAAA,GAAAA,EAAAC,cAAAC,OAqFAC,YA3DA,SAAAtB,GACA,OAAAe,EAAAf,KAAAW,EAAAX,IAAA,iBAAAA,EAAAP,SAAAgB,EAAAT,IA4DAuB,UA7HA,SAAAvB,GACA,MAAA,kBAAA,GA8HAwB,UA3HA,SAAAxB,GACA,YAAA,IAAAA,GA4HAyB,WAzHA,SAAAzB,GACA,OAAA,MAAAA,GAAAA,EAAAY,UAAAZ,EAAA0B,eA0HAC,QAAAnB,EAEAA,cAAAA,EAEAC,WAAAA,EAEAE,WAAAA,EAEAiB,OA5EA,SAAAlB,GACA,MAAA,SAAAP,EAAAO,IA6EAG,SAAAA,EAEAgB,UAAAhB,EAEAC,SAAAA,EAEAgB,cAxEA,SAAA9B,GACA,OAAAc,EAAAd,KAAAgB,EAAAhB,IAAA+B,OAAAC,eAAAhC,IAAA+B,OAAAE,WAyEAlB,SAAAA,EAEAmB,aAhEA,SAAAC,GACA,GAAAA,EAAA,CACA,IAAAC,EAAAC,SAAAC,SAAA,KAAAD,SAAAE,SAIA,OAHAF,SAAAG,OACAJ,GAAA,IAAAC,SAAAG,MAEAL,EAAAM,WAAAL,KA4DAM,SA3CA,SAAAhC,GACA,MAAA,iBAAAA,GACAiC,aAAAjC,IAAAkC,eAAArC,KAAAG,IAAAmC,WA2CAC,YAxCA,SAAApC,GACA,YAAAqC,IAAArC,GAyCAM,SAAAA,EAEAb,KAAAA,KAIAf,OAAA,wBACA,WACA,SAAA4D,EAAAC,GACA,IAAAC,EAAA7B,MAAAY,UAAAiB,OACA5B,EAAA0B,EAAA1B,YAYA,SAAA6B,EAAAC,EAAAC,EAAAC,EAAAC,GAIA,IAHA,IAAA9D,EAAA2D,EAAA3D,OACA+D,EAAAF,GAAAC,EAAA,GAAA,GAEAA,EAAAC,MAAAA,EAAA/D,GACA,GAAA4D,EAAAD,EAAAI,GAAAA,EAAAJ,GACA,OAAAI,EAGA,OAAA,EAiCA,SAAAC,EAAA/C,GACA,OAAAA,GAAAA,EAcA,SAAAgD,EAAAN,GACA,GAAA9B,EAAA8B,GAAA,CAEA,IADA,IAAAO,KACAhE,EAAA,EAAAA,EAAAyD,EAAA3D,OAAAE,IAAA,CACA,IAAAiE,EAAAR,EAAAzD,GACA,GAAA2B,EAAAsC,GACA,IAAA,IAAAC,EAAA,EAAAA,EAAAD,EAAAnE,OAAAoE,IACAF,EAAAG,KAAAF,EAAAC,SAGAF,EAAAG,KAAAF,GAGA,OAAAD,EAEA,OAAAP,EAmGA,OACAD,cAAAA,EAEAY,YA1JA,SAAAX,EAAA1C,EAAA4C,GACA,GAAA5C,GAAAA,EACA,OAAAyC,EAAAC,EAAAK,EAAAH,GAEA,IAAAE,EAAAF,EAAA,EACA7D,EAAA2D,EAAA3D,OAEA,OAAA+D,EAAA/D,GACA,GAAA2D,EAAAI,KAAA9C,EACA,OAAA8C,EAGA,OAAA,GAgJAQ,QAjIA,SAAAZ,GACA,OAAAF,EAAA3C,KAAA6C,EAAA,SAAAQ,GACA,OAAA,MAAAA,KAiIAK,MAAA,SAAAC,EAAAC,GACA,OAAAA,EACAD,EAAAE,MAAA,EAAAD,GAEAD,EAAA,IAIAhB,OArIA,SAAAE,EAAAiB,GACA,OAAAnB,EAAA3C,KAAA6C,EAAAiB,IAsIAX,QAAAA,EAEAY,QArGA,SAAAV,EAAAR,GACA,IAAAA,EACA,OAAA,EAEA,IAAAzD,EAEA,GAAAyD,EAAAmB,QACA,OAAAnB,EAAAmB,QAAAX,GAGAjE,EAAAyD,EAAA3D,OACA,KAAAE,KACA,GAAAyD,EAAAzD,KAAAiE,EACA,OAAAjE,EAIA,OAAA,GAsFA6E,UAnFA,SAAAxE,EAAAyE,EAAAC,GACA,GAAApD,EAAAtB,GACA,OAAA0E,OAAAC,OAAAtD,MAAAY,UAAAmC,MAAA7D,KAAAP,EAAAyE,GAAA,IAIA,OAAAzE,IA+EA4E,MArDA,SAAAX,EAAAY,GACA,IAAAC,EAAAD,EAAApF,OACAE,EAAAsE,EAAAxE,OACAoE,EAAA,EAEA,GAAA,iBAAAiB,EACA,KAAAjB,EAAAiB,EAAAjB,IACAI,EAAAtE,KAAAkF,EAAAhB,QAGA,UAAAd,IAAA8B,EAAAhB,IACAI,EAAAtE,KAAAkF,EAAAhB,KAMA,OAFAI,EAAAxE,OAAAE,EAEAsE,GAsCA7D,QA7EA,SAAA2E,EAAAC,GACA,GAAAD,EAAA3E,QAAA,OAAA2E,EAAA3E,QAAA4E,GACA,IAAA,IAAArF,EAAA,EAAAA,EAAAoF,EAAAtF,OAAAE,IAAAqF,EAAAD,EAAApF,GAAAA,IA6EAsF,IA1EA,SAAAC,EAAAC,GACA,IAAAzE,EACAf,EAAAyF,EADAC,KAEA,GAAA/D,EAAA4D,GACA,IAAAvF,EAAA,EAAAA,EAAAuF,EAAAzF,OAAAE,IAEA,OADAe,EAAAyE,EAAA5E,KAAA2E,EAAAvF,GAAAuF,EAAAvF,GAAAA,KACA0F,EAAAvB,KAAApD,QAGA,IAAA0E,KAAAF,EAEA,OADAxE,EAAAyE,EAAA5E,KAAA2E,EAAAE,GAAAF,EAAAE,GAAAA,KACAC,EAAAvB,KAAApD,GAEA,OAAAgD,EAAA2B,IA+DAC,OAvCA,SAAAlC,EAAA+B,EAAAI,GACA,OAAAlE,MAAAY,UAAAqD,OAAA/E,KAAA6C,EAAA+B,EAAAI,IAwCAC,KArCA,SAAApC,GACA,OAAAF,EAAA3C,KAAA6C,EAAA,SAAAQ,EAAA6B,GACA,OAAArC,EAAAmB,QAAAX,IAAA6B,QAuCArG,OAAA,yBACA,WACA,SAAA4D,GACA,IAAAlC,EAAAkC,EAAAlC,SACA4B,EAAAM,EAAAN,SAEAgD,EAAA,EAAA,EAEAC,EAAA,uBACAC,EAAA,IAGAC,EAAA,aAGAC,EAAA,qBAGAC,EAAA,aAGAC,EAAA,cAMAC,EAAAC,SAyBA,SAAAC,EAAAzF,GACA,IAAAA,EACA,OAAA,IAAAA,EAAAA,EAAA,EAGA,IADAA,EAAA0F,EAAA1F,MACAgF,GAAAhF,KAAAgF,EAAA,CACA,IAAAW,EAAA3F,EAAA,GAAA,EAAA,EACA,OAAA2F,EAAAV,EAEA,OAAAjF,GAAAA,EAAAA,EAAA,EAyDA,SAAA0F,EAAA1F,GACA,GAAA,iBAAAA,EACA,OAAAA,EAEA,GAAAgC,EAAAhC,GACA,OAAAkF,EAEA,GAAA9E,EAAAJ,GAAA,CACA,IAAA4F,EAAA,mBAAA5F,EAAA6F,QAAA7F,EAAA6F,UAAA7F,EACAA,EAAAI,EAAAwF,GAAAA,EAAA,GAAAA,EAEA,GAAA,iBAAA5F,EACA,OAAA,IAAAA,EAAAA,GAAAA,EAEAA,EAAAA,EAAA8F,QAAAX,EAAA,IACA,IAAAY,EAAAV,EAAAW,KAAAhG,GACA,OAAA+F,GAAAT,EAAAU,KAAAhG,GACAuF,EAAAvF,EAAA0D,MAAA,GAAAqC,EAAA,EAAA,GACAX,EAAAY,KAAAhG,GAAAkF,GAAAlF,EAGA,OACAyF,SAAAA,EACAC,SAAAA,EACAO,UAtDA,SAAAjG,GACA,IAAAiD,EAAAwC,EAAAzF,GACAkG,EAAAjD,EAAA,EAEA,OAAAA,GAAAA,EAAAiD,EAAAjD,EAAAiD,EAAAjD,EAAA,MAqDAvE,OAAA,yBACA,YACA,UACA,aACA,SAAAS,EAAAmD,EAAA6D,GACA,IA+BAC,EAAAC,EA/BAC,EAAAjF,OAAAE,UAAA+E,eACA5C,EAAA/C,MAAAY,UAAAmC,MACA7C,EAAAyB,EAAAzB,UACAd,EAAAuC,EAAAvC,WACAK,EAAAkC,EAAAlC,SACAgB,EAAAkB,EAAAlB,cACAZ,EAAA8B,EAAA9B,QACAI,EAAA0B,EAAA1B,YACAP,EAAAiC,EAAAjC,SACA4F,EAAAE,EAAAF,UAuBA,IApBAM,EAAAC,EAoBAC,EAAA,oBAAAC,OAAAA,OAAAnF,UAAA,KA0GA,SAAAoF,EAAArH,GACA,IAAAc,EAAAd,GAAA,SACA,IAAAsH,KACA,IAAA,IAAAlC,KAAApF,EAAAsH,EAAAxD,KAAAsB,GACA,OAAAkC,EA0DA,SAAAC,EAAAvH,EAAAV,GACA,IAAA4B,EAAA5B,GACA,OAAA,MAAAU,GAAAgH,EAAAzG,KAAAP,EAAAV,GAGA,IADA,IAAAG,EAAAH,EAAAG,OACAE,EAAA,EAAAA,EAAAF,EAAAE,IAAA,CACA,IAAAyF,EAAA9F,EAAAK,GACA,GAAA,MAAAK,IAAAgH,EAAAzG,KAAAP,EAAAoF,GACA,OAAA,EAEApF,EAAAA,EAAAoF,GAEA,QAAA3F,EAgEA,SAAA+H,EAAAC,EAAAC,EAAAC,EAAAC,GACA,IAAA,IAAAxC,KAAAsC,EAIAE,QAAA7E,IAAA0E,EAAArC,KAGAuC,IAAA7F,EAAA4F,EAAAtC,KAAAlE,EAAAwG,EAAAtC,MACAtD,EAAA4F,EAAAtC,MAAAtD,EAAA2F,EAAArC,MACAqC,EAAArC,OAEAlE,EAAAwG,EAAAtC,MAAAlE,EAAAuG,EAAArC,MACAqC,EAAArC,OAEAoC,EAAAC,EAAArC,GAAAsC,EAAAtC,GAAAuC,EAAAC,SACA7E,IAAA2E,EAAAtC,KACAqC,EAAArC,GAAAsC,EAAAtC,KAGA,OAAAqC,EAGA,SAAAI,EAAAC,GACA,IAAAC,EAAA3D,EAAA7D,KAAAyH,UAAA,GACAP,EAAAM,EAAAE,QACAN,GAAA,EAKA,OAJApG,EAAAwG,EAAAA,EAAAtI,OAAA,MACAkI,EAAAI,EAAAG,QAIAT,OAAAA,EACAU,QAAAJ,EACAJ,KAAAA,GAIA,SAAAS,IACA,IAAAN,EAAAD,EAAAQ,MAAAC,KAAAN,WAKA,OAHAF,EAAAK,QAAA/H,QAAA,SAAAsH,GACAF,EAAAM,EAAAL,OAAAC,EAAAI,EAAAH,MAAA,KAEAG,EAAAL,OAkFA,SAAApC,EAAArF,GAIA,IAHA,IAAAsH,EAAAD,EAAArH,GACAP,EAAA6H,EAAA7H,OACA4F,EAAAhE,MAAA5B,GACAE,EAAA,EAAAA,EAAAF,EAAAE,IACA0F,EAAA1F,GAAAK,EAAAsH,EAAA3H,IAEA,OAAA0F,EA2BA,OAlZAyB,EAAA,SAAAyB,EAAAC,EAAAC,EAAAC,GAGA,GAAAH,IAAAC,EAAA,OAAA,IAAAD,GAAA,EAAAA,GAAA,EAAAC,EAEA,GAAA,MAAAD,GAAA,MAAAC,EAAA,OAAA,EAEA,GAAAD,GAAAA,EAAA,OAAAC,GAAAA,EAEA,IAAArI,SAAAoI,EACA,OAAA,aAAApI,GAAA,WAAAA,GAAA,iBAAAqI,IACAzB,EAAAwB,EAAAC,EAAAC,EAAAC,IAIA3B,EAAA,SAAAwB,EAAAC,EAAAC,EAAAC,GAKA,IAAAC,EAAAzI,SAAAK,KAAAgI,GACA,GAAAI,IAAAzI,SAAAK,KAAAiI,GAAA,OAAA,EACA,OAAAG,GAEA,IAAA,kBAEA,IAAA,kBAGA,MAAA,GAAAJ,GAAA,GAAAC,EACA,IAAA,kBAGA,OAAAD,IAAAA,GAAAC,IAAAA,EAEA,IAAAD,EAAA,GAAAA,GAAA,EAAAC,GAAAD,IAAAC,EACA,IAAA,gBACA,IAAA,mBAIA,OAAAD,IAAAC,EACA,IAAA,kBACA,OAAArB,EAAAZ,QAAAhG,KAAAgI,KAAApB,EAAAZ,QAAAhG,KAAAiI,GAGA,IAAAI,EAAA,mBAAAD,EACA,IAAAC,EAAA,CACA,GAAA,iBAAAL,GAAA,iBAAAC,EAAA,OAAA,EAGA,IAAAK,EAAAN,EAAAnH,YAAA0H,EAAAN,EAAApH,YACA,GAAAyH,IAAAC,KAAArI,EAAAoI,IAAAA,aAAAA,GACApI,EAAAqI,IAAAA,aAAAA,IACA,gBAAAP,GAAA,gBAAAC,EACA,OAAA,EAQAC,EAAAA,MACAC,EAAAA,MAEA,IADA,IAAAjJ,EAAAgJ,EAAAhJ,OACAA,KAGA,GAAAgJ,EAAAhJ,KAAA8I,EAAA,OAAAG,EAAAjJ,KAAA+I,EAQA,GAJAC,EAAA3E,KAAAyE,GACAG,EAAA5E,KAAA0E,GAGAI,EAAA,CAGA,IADAnJ,EAAA8I,EAAA9I,UACA+I,EAAA/I,OAAA,OAAA,EAEA,KAAAA,KACA,IAAAqH,EAAAyB,EAAA9I,GAAA+I,EAAA/I,GAAAgJ,EAAAC,GAAA,OAAA,MAEA,CAEA,IAAAtD,EAAAkC,EAAAvF,OAAAuF,KAAAiB,GAGA,GAFA9I,EAAA6H,EAAA7H,OAEAsC,OAAAuF,KAAAkB,GAAA/I,SAAAA,EAAA,OAAA,EACA,KAAAA,KAGA,GADA2F,EAAAkC,EAAA7H,QACAsD,IAAAyF,EAAApD,KAAA0B,EAAAyB,EAAAnD,GAAAoD,EAAApD,GAAAqD,EAAAC,GAAA,OAAA,EAMA,OAFAD,EAAAP,MACAQ,EAAAR,OACA,IA+SAb,QAAAA,EAEAtH,OAAAF,EAEAkJ,MA7BA,SAAAA,EAAAC,EAAAC,GACA,IAAAC,EACA,QAAAnG,IAAAiG,GAAA,OAAAA,EACAE,EAAAF,OACA,GAAAC,GAAAD,EAAAD,MACAG,EAAAF,EAAAD,aACA,GAAA7H,EAAA8H,GAAA,CACAE,KACA,IAAA,IAAAvJ,EAAA,EAAAA,EAAAqJ,EAAAvJ,OAAAE,IACAuJ,EAAApF,KAAAiF,EAAAC,EAAArJ,UAEA,GAAAmC,EAAAkH,GAEA,IAAA,IAAA5D,KADA8D,KACAF,EACAE,EAAA9D,GAAA2D,EAAAC,EAAA5D,SAGA8D,EAAAF,EAGA,OAAAE,GAWAhC,UA/aAD,EA+aAI,EA/aAH,GA+aA,EA9aA,SAAAlH,GACA,IAAAP,EAAAuI,UAAAvI,OAEA,GADAyH,IAAAlH,EAAA+B,OAAA/B,IACAP,EAAA,GAAA,MAAAO,EAAA,OAAAA,EACA,IAAA,IAAAwD,EAAA,EAAAA,EAAA/D,EAAA+D,IAIA,IAHA,IAAAkE,EAAAM,UAAAxE,GACA8D,EAAAL,EAAAS,GACA5C,EAAAwC,EAAA7H,OACAE,EAAA,EAAAA,EAAAmF,EAAAnF,IAAA,CACA,IAAAyF,EAAAkC,EAAA3H,GACAuH,QAAA,IAAAlH,EAAAoF,KAAApF,EAAAoF,GAAAsC,EAAAtC,IAGA,OAAApF,IAmaAmJ,KA5SA,SAAAnJ,EAAAmF,GACA,IAAA1F,EAAA2F,EAAAzF,EAAAe,EAEA,GAAAV,EAGA,QALAoJ,KAGA3J,EAAAO,EAAAP,SAIA,IAAA2F,KAAApF,EACA,GAAAA,EAAAgH,eAAA5B,KACA1E,EAAAV,EAAAoF,IACA,IAAAD,EAAA5E,KAAAG,EAAA0E,EAAA1E,IACA,WAMA,IAAAf,EAAA,EAAAA,EAAAF,IACAiB,EAAAV,EAAAL,IACA,IAAAwF,EAAA5E,KAAAG,EAAAf,EAAAe,IAFAf,KASA,OAAA2I,MAmRAe,OAhRA,SAAA5B,GACA,IAAAE,EAAAG,EAAA1D,EAAA7D,KAAAyH,UAAA,GACA,kBAAAP,IACAE,EAAAF,EACAA,EAAAK,EAAAG,SAEA,GAAAH,EAAArI,SACAqI,GAAAL,GACAA,EAAAa,MAKA,OAHAR,EAAA1H,QAAA,SAAAkJ,GACAlB,EAAAX,EAAA6B,EAAA3B,KAEAF,GAqQAF,IAAAA,EAEAgC,QA/LA,SAAAhB,EAAAC,GACA,OAAA1B,EAAAyB,EAAAC,IAgMAgB,SAhNA,SAAAC,EAAA/I,EAAA4C,EAAAoG,GACAD,EAAAnI,EAAAmI,GAAAA,EAAApE,EAAAoE,GACAnG,EAAAA,IAAAoG,EAAA/C,EAAArD,GAAA,EAEA,IAAA7D,EAAAgK,EAAAhK,OACA6D,EAAA,IACAA,EAAAqG,UAAAlK,EAAA6D,EAAA,IAEA,OAAAvC,EAAA0I,GACAnG,GAAA7D,GAAAgK,EAAAlF,QAAA7D,EAAA4C,IAAA,IACA7D,GAAAsE,YAAA0F,EAAA/I,EAAA4C,IAAA,GAwMAsG,QA9LA,SAAAzI,EAAA0I,GACA,IAAAvC,EAAAA,EAAAuC,GAAApK,EAAA6H,EAAA7H,OACA,GAAA,MAAA0B,EAAA,OAAA1B,EAEA,IADA,IAAAO,EAAA+B,OAAAZ,GACAxB,EAAA,EAAAA,EAAAF,EAAAE,IAAA,CACA,IAAAyF,EAAAkC,EAAA3H,GACA,GAAAkK,EAAAzE,KAAApF,EAAAoF,MAAAA,KAAApF,GAAA,OAAA,EAEA,OAAA,GAwLAsH,KAxQA,SAAAtH,GACA,GAAAc,EAAAd,GAAA,SACA,IAAAsH,KACA,IAAA,IAAAlC,KAAApF,EAAAuH,EAAAvH,EAAAoF,IAAAkC,EAAAxD,KAAAsB,GACA,OAAAkC,GAsQAc,MAAAA,EAEA0B,KAzIA,SAAA9J,EAAA+J,EAAAC,GACA,IAAAhK,EACA,OAAA,KAGA,IADA,IAAA2D,EAAAyE,KAAApI,GACAL,EAAA,EAAAA,EAAAqI,UAAAvI,OAAAE,IAAA,CACA,IAAAsK,EAAAjC,UAAArI,GACAsK,KAAAjK,UACA2D,EAAAsG,GAGA,OAAAtG,GAgIAuG,KA3HA,SAAAlK,EAAA+J,EAAAC,GACA,IAAAhK,EACA,OAAA,KAGA,IADA,IAAA2D,KACAhE,EAAA,EAAAA,EAAAqI,UAAAvI,OAAAE,IAAA,CACA,IAAAsK,EAAAjC,UAAArI,GACAsK,KAAAjK,IACA2D,EAAAsG,GAAAjK,EAAAiK,IAGA,OAAAtG,GAkHAwG,WA/GA,SAAAjG,EAAAN,GACA,GAAA1C,EAAAgD,GAAA,CACA,IAAAuB,EAAAvB,EAAAK,QAAAX,IACA,GAAA6B,GACAvB,EAAAkG,OAAA3E,EAAA,QAEA,GAAA3D,EAAAoC,GACA,IAAA,IAAAkB,KAAAlB,EACA,GAAAA,EAAAkB,IAAAxB,EAAA,QACAM,EAAAkB,GACA,MAKA,OAAAkD,MAkGA3E,OA/FA,SAAA3D,EAAAV,EAAA+K,GACAnJ,EAAA5B,KACAA,EAAAA,EAAAE,MAAA,MAEA,IAAAC,EAAAH,EAAAG,OACA,IAAAA,EACA,OAAAgB,EAAA4J,GAAAA,EAAA9J,KAAAP,GAAAqK,EAEA,IAAA,IAAA1K,EAAA,EAAAA,EAAAF,EAAAE,IAAA,CACA,IAAA2K,EAAA,MAAAtK,OAAA,EAAAA,EAAAV,EAAAK,SACA,IAAA2K,IACAA,EAAAD,EACA1K,EAAAF,GAEAO,EAAAS,EAAA6J,GAAAA,EAAA/J,KAAAP,GAAAsK,EAGA,OAAAtK,GAgFAuK,UA7EA,WACA,IAAAzC,EAAAD,EAAAQ,MAAAC,KAAAN,WAKA,OAHAF,EAAAK,QAAA/H,QAAA,SAAAsH,GACAF,EAAAM,EAAAL,OAAAC,EAAAI,EAAAH,MAAA,KAEAG,EAAAL,QAyEApC,OAAAA,KAMAjG,OAAA,uBACA,WACA,YACA,WACA,SAAAoL,EAAAvH,EAAAD,GACA,IAAAwC,EAAAgF,EAAAhF,KACA+B,EAAAtE,EAAAsE,IACAa,EAAAnF,EAAAmF,MACAlH,EAAA8B,EAAA9B,QACAM,EAAAwB,EAAAxB,UAuDA,IAsLAiJ,EAtLA,WAsGA,SAAAC,IACA,OAAApC,KAAAqC,WACArC,KAAAqC,WAAAtC,MAAAC,KAAAN,WACAM,KAAAsC,KACAtC,KAAAsC,KAAAvC,MAAAC,KAAAN,gBADA,EAKA,OAAA,SAAAyC,EAAAI,EAAAC,EAAAC,EAAAC,GACA9J,EAAA4J,KACAE,EAAAD,EACAA,EAAAD,EACAA,EAAA,MAEAA,EAAAA,GAAA/I,OAEAP,EAAAuJ,KAAA7J,EAAA6J,KACAC,EAAAD,EACAA,GAAA,GAGA,IAAAE,EAAAH,EAEAC,IACAA,EAlFA,SAAAG,EAAAH,GACA,IAAApH,KAmCA,OAjCAoH,EAAA3K,QAAA,SAAAgI,GACA,GAAAb,EAAAa,EAAA,cACA,MAAA,IAAA+C,MAAA,iBAGA,IADA,IAAAC,KACAhD,GACAgD,EAAAC,QAAAjD,GACAA,EAAAA,EAAAkD,WAEA3H,EAAAA,EAAAgB,OAAAyG,MAKAzH,GAFAA,EAAA6B,EAAA7B,IAEAT,OAAA,SAAAkF,GAEA,IADA,IAAAmD,EAAAL,EACAK,GAAA,CACA,GAAAnD,IAAAmD,EACA,OAAA,EAEA,GAAAhE,EAAAgE,EAAA,cAEA,IADA,IAAAC,EAAAD,EAAA,WACA5L,EAAA,EAAAA,EAAA6L,EAAA/L,OAAAE,IACA,GAAA6L,EAAA7L,KAAAyI,EACA,OAAA,EAIAmD,EAAAA,EAAAD,WAEA,OAAA,KAGA7L,OAAA,GACAkE,EA6CA8H,CAAAR,EAAAF,IAGAA,IACAE,EA3CA,SAAAC,EAAAH,GAEA,IADA,IAAAW,EAAAR,EACAvL,EAAA,EAAAA,EAAAoL,EAAAtL,OAAAE,IAAA,CACA,IAAAgM,EAAA,IAAAC,SACAD,EAAA1J,UAAAF,OAAA8J,OAAAH,EAAAzJ,WACA0J,EAAAG,UAAAJ,EACAC,EAAAL,WAAA,KACAlD,EAAAuD,EAAA1J,UAAA8I,EAAApL,GAAAsC,WACA0J,EAAA1J,UAAA8J,UAAAhB,EAAApL,GACA+L,EAAAC,EAGA,OAAAD,EA+BAM,CAAAf,EAAAF,IAGA,IAAAkB,EAAApB,EAAAoB,WAAA,GACAf,EAAA,IAAAU,SACA,mBAAAK,EAAA,6KADA,GA4CA,OA/BAf,EAAAjJ,UAAAF,OAAA8J,OAAAZ,EAAAhJ,WAGAiJ,EAAAjJ,UAAAb,YAAA8J,EACAA,EAAAI,WAAAR,EAGAI,EAAAY,UAAAb,EAGAC,EAAAR,eACAQ,EAAAR,aAAAA,GAGAK,IACAG,EAAAgB,WAAAnB,GAGAG,EAAAiB,UACAjB,EAAAiB,QAAA,SAAAtB,EAAAG,GACA,OAtKA,SAAAE,EAAAL,EAAAG,GAEA,IAAAoB,EAAAlB,EAAAjJ,UACAoK,EAAAnB,EAAAI,WAAArJ,UACAqK,EAAAtB,GAAAA,EAAAsB,YACAtB,GAAAA,EAAAuB,UAEA,IAAA,IAAA3M,KAAAiL,EACA,GAAA,gBAAAjL,EAAA,CAKA,IAAA0K,EAAAO,EAAAjL,GACA,mBAAAiL,EAAAjL,GACAwM,EAAAxM,GAAA0K,EAAAI,cAAA4B,GAAA,mBAAAD,EAAAzM,GAkBA0K,EAjBA,SAAA1K,EAAAoF,EAAAwH,GACA,OAAA,WACA,IAAAC,EAAAnE,KAAAoE,UAIApE,KAAAoE,UAAAF,EAIA,IAAAG,EAAA3H,EAAAqD,MAAAC,KAAAN,WAIA,OAFAM,KAAAoE,UAAAD,EAEAE,GAdA,CAgBA/M,EAAA0K,EAAA+B,EAAAzM,IAEAoD,EAAAlB,cAAAwI,IAAA,OAAAA,GAAAA,EAAA,IACAvI,OAAA6K,eAAAR,EAAAxM,EAAA0K,GAEA8B,EAAAxM,GAAA0K,EAGA,OAAAY,EA8HA2B,CAAAvE,KAAAuC,EAAAG,KAGAE,EAAA4B,UACA5B,EAAA4B,QAAA,SAAAjC,EAAAE,EAAAC,GACA,OAAAP,EAAAI,EAAAvC,KAAAyC,EAAAC,KAIAE,EAAAiB,QAAAtB,EAAAG,GAEAE,GAIA6B,GAEA,OAAAtC,IAEArL,OAAA,4BACA,WACA,SAAA4N,GACA,IA4JAC,EAAA,SAAAC,GAuBA,IAAAA,EACA,OAAAA,EAGA,IAAAC,IAAAD,EAAAE,KAKA,SAAAC,EAAAC,GAGAJ,EAAAI,GAAA,WACA,IAAAxF,EAAAE,UACArE,EAAA4J,SAAAC,KAAAN,EAAA,SAAAA,GAEA,OAAAD,EAAA5L,MAAAY,UAAAqL,GAAAjF,MAAA6E,EAAApF,MAIA,GAAA,YAAAwF,GAAAH,EACA,OAAAxJ,GAaA,OA5BAwJ,IACAD,EAAAnL,OAAA0L,SAAAP,IAmBAG,EAAA,WACAA,EAAA,UACAA,EAAA,OACA,MAAAH,EAAAQ,QACAR,EAAAQ,MAAAH,SAAAC,KAAAN,EAAA,SAAAA,GACA,OAAAA,EAAAzN,UAGAyN,GAGAS,EAAAX,GACAf,UAAA,aAEA2B,YA3NA,SAAAC,EAAA7C,GA6CA,cAAA6C,GACA,QACA,MAAA,IAAA1C,MAAA,+BAAA0C,GACA,IAAA,SAAA,IAAA,YACA,IAAAC,EAAAD,EACAA,EAAA,SAAA1M,GACA,IAAA,IAAAiE,KAAA0I,EAAA,CACA,IAAAC,EAAAD,EAAA1I,GACA,GAAA2I,GAAAA,EAAArH,MAEA,IAAAqH,EAAArH,KAAAvF,EAAAiE,GAAAjE,GACA,OAAA,OAEA,GAAA4M,GAAA5M,EAAAiE,GACA,OAAA,EAGA,OAAA,GAEA,MACA,IAAA,SAEA,IAAAkD,KAAAuF,GACA,MAAA,IAAA1C,MAAA,sBAAA0C,EAAA,uBAEAA,EAAAvF,KAAAuF,GAEA,IAAA,YAkDA,SAAAG,EAAA5K,GAEA,IAAA8J,EAhDA,SAAAnI,EAAAI,EAAA8I,GAyBA,IAAAvN,EAAAf,EAAA,EAAAmF,EAAAC,GAAAA,EAAAtF,QAAA,EAAAyO,KACApJ,GAAA,iBAAAC,IAAAA,EAAAA,EAAAvF,MAAA,KACA,iBAAA2F,IAAAA,EAAAgJ,MAAAhJ,IAAAiJ,QAAAjJ,IACA,GAAA8I,EACA,KAAAtO,EAAAmF,IAAAnF,EACAe,EAAAqE,EAAApF,GACAwF,EAAA5E,KAAA0N,EAAAvN,EAAAf,EAAAoF,IACAmJ,EAAApK,KAAApD,QAIA,KAAAf,EAAAmF,IAAAnF,EACAe,EAAAqE,EAAApF,GACAwF,EAAAzE,EAAAf,EAAAoF,IACAmJ,EAAApK,KAAApD,GAIA,OAAAwN,EAKAhL,CAAAE,EAAAyK,GAEAQ,EAAArD,GAAAA,EAAAsD,KAmBA,GAlBAD,GACAnB,EAAAoB,KAAA,mBAAAD,EAAAA,EAAA,SAAA9F,EAAAC,GACA,IAAA,IAAA8F,EAAA3O,EAAA,EAAA2O,EAAAD,EAAA1O,GAAAA,IAAA,CACA,IAAA4O,EAAAhG,EAAA+F,EAAAE,WACAC,EAAAjG,EAAA8F,EAAAE,WAIA,GAFAD,EAAA,MAAAA,EAAAA,EAAAhI,UAAAgI,EACAE,EAAA,MAAAA,EAAAA,EAAAlI,UAAAkI,EACAF,GAAAE,EAGA,QAAAH,EAAAI,aAAA,MAAAH,GAAAA,EAAAE,IAAA,EAAA,EAGA,OAAA,IAIAzD,IAAAA,EAAA2D,OAAA3D,EAAA4D,OAAA,CACA,IAAAlB,EAAAR,EAAAzN,QACAyN,EAAAA,EAAA9I,MAAA4G,EAAA2D,OAAA,GAAA3D,EAAA2D,OAAA,IAAA3D,EAAA4D,OAAAC,EAAAA,KACAnB,MAAAA,EAEA,OAAAR,EAGA,OADAc,EAAAc,QAAAjB,EACAG,GAoEAe,WAAA,KAGAC,IAAA,SAAAC,GAOA,OAAA3G,KAAA4G,KAAA5G,KAAA9E,MAAAyL,KAGAE,YAAA,SAAAhO,GACA,OAAAA,EAAAmH,KAAAyG,aAGAK,IAAA,SAAAjO,EAAA6J,GACA,IAAAkE,EAAA5G,KAAA4G,KACA1L,EAAA8E,KAAA9E,MACAuL,EAAAzG,KAAAyG,WACAE,EAAA9N,EAAA4N,GAAA/D,GAAA,OAAAA,EAAAA,EAAAiE,GAAAF,KAAA5N,EAAAA,EAAA4N,GAAAM,KAAAC,SACA,GAAAL,KAAAzL,EAAA,CAEA,GAAAwH,IAAA,IAAAA,EAAAuE,UACA,MAAA,IAAApE,MAAA,yBAGA+D,EAAA1L,EAAAyL,IAAA9N,OAGAqC,EAAAyL,GAAAC,EAAApL,KAAA3C,GAAA,EAEA,OAAA8N,GAGAO,IAAA,SAAArO,EAAA6J,GAGA,OAFAA,EAAAA,OAAAuE,WAAA,EAEAjH,KAAA8G,IAAAjO,EAAA6J,IAGAyE,OAAA,SAAAR,GAOA,IAAAzL,EAAA8E,KAAA9E,MACA0L,EAAA5G,KAAA4G,KACA,GAAAD,KAAAzL,EAIA,OAHA0L,EAAA9E,OAAA5G,EAAAyL,GAAA,GAEA3G,KAAAoH,QAAAR,IACA,GAGArB,MAAA,SAAAA,EAAA7C,GA8BA,OAAAiC,EAAA3E,KAAAsF,YAAAC,EAAA7C,EAAA1C,CAAAA,KAAA4G,QAGAQ,QAAA,SAAAR,GAKAA,EAAAhL,OAEAoE,KAAAyG,WAAAG,EAAAS,YAAArH,KAAAyG,WACAG,EAAA5G,KAAA4G,KAAAA,EAAAhL,OAEAoE,KAAA4G,KAAAA,EAEA5G,KAAA9E,SACA,IAAA,IAAA7D,EAAA,EAAAmF,EAAAoK,EAAAzP,OAAAE,EAAAmF,EAAAnF,IACA2I,KAAA9E,MAAA0L,EAAAvP,GAAA2I,KAAAyG,aAAApP,GAIAiL,KAAA,SAAAI,GACA,IAAA,IAAArL,KAAAqL,EACA1C,KAAA3I,GAAAqL,EAAArL,GAEA2I,KAAAoH,QAAApH,KAAA4G,aAKA,OAAAvB,IAEAvO,OAAA,0BACA,WAEA,IAAA2D,EAAA6M,EAAA,EAqEA,SAAAC,EAAA1P,GACA,OAAA,SAAAsH,EAAAqI,EAAAC,EAAAC,GACA,IAAAC,EAAAC,EAAAzI,EAAAqI,GACAI,GAAAA,EAAAzI,QAAAA,IAEAA,EAAAqI,GAAAG,EAAA,WAKA,IAJA,IAAAE,EAAAP,EAEA9H,EAAAE,UACAoI,EAAAH,EAAAG,OACAA,GACAtI,EAAAsI,EAAAL,OAAA1H,MAAAC,KAAAR,IAAAA,EACAsI,EAAAA,EAAAC,KAGA,GAAAJ,EAAAK,OACA,IAAApD,EAAA+C,EAAAK,OAAAP,OAAAzH,KAAAR,GAIA,IADA,IAAAyI,EAAAN,EAAAM,MACAA,GAAAA,EAAAtB,GAAAkB,GAAA,CACA,GAAAI,EAAAP,iBAAA,CACA,IAAAQ,EAAAD,EAAAR,OAAA1H,MAAAC,KAAAR,GAEAoF,EAAAsD,IAAAzN,EAAAmK,EAAAsD,OAEAtD,EAAAqD,EAAAR,OAAAxP,KAAA+H,KAAA4E,EAAApF,GAEAyI,EAAAA,EAAAF,KAEA,OAAAnD,GAEAgD,IACAD,EAAAK,QAAAP,OAAA,SAAAtI,EAAAK,GACA,OAAAoI,EAAA7H,MAAAZ,EAAAK,MAGAmI,EAAAxI,OAAAA,GAEA,IAAAyF,EA3GA,SAAA+C,EAAA9P,EAAA4P,EAAAC,GACA,IAEAS,EAFAC,EAAAT,EAAA9P,GACAmQ,EAAA,UAAAnQ,EAEA,GAAAmQ,EAAA,CACA,IAAAK,EAAAZ,EAAA,WACA,OAAAW,EAAAX,OAAAzH,KAAAN,aAEAyI,GACAhB,OAAA,WACAkB,IACAA,EAAAV,EAAAF,EAAA,OAGAA,OAAA,SAAAtI,EAAAK,GACA,OAAA6I,EACAA,EAAAtI,MAAAZ,EAAAK,GACA4I,EAAAX,OAAAtI,EAAAK,UAKA2I,GACAhB,OAAA,WACA,GAAAgB,EAAAV,OAAA,CACA,IAAAW,EAAAD,EAAAC,SACAL,EAAAI,EAAAJ,KACAA,GAAAK,GAGAA,EACAA,EAAAL,KAAAA,EAEAJ,EAAA9P,GAAAkQ,EAEAA,IACAA,EAAAK,SAAAA,WARAT,EAAA9P,GAaA8P,EAAAF,EAAAU,EAAAV,OAAA,OAGAd,GAAAW,IACAG,OAAAA,EACAC,iBAAAA,GAGA,GAAAU,IAAAJ,EACA,GAAA,SAAAnQ,EAAA,CAGA,KAAAuQ,EAAAL,OAAAK,EAAAA,EAAAL,QACAK,EAAAL,KAAAI,EACAA,EAAAC,SAAAA,MACA,UAAAvQ,IAEA8P,EAAA9P,GAAAsQ,EACAA,EAAAJ,KAAAK,EACAA,EAAAA,SAAAD,QAIAR,EAAA9P,GAAAsQ,EAEA,OAAAA,EAyCAG,CAAAX,GAAAC,EAAA/P,EAAA4P,EAAAC,GAEA,OADAD,EAAA,KACA7C,GAIA,OACAqD,MAAAV,EAAA,SAEAS,OAAAT,EAAA,UAEAO,OAAAP,EAAA,aAGAzQ,OAAA,uBACA,YACA,WACA,SAAA6D,EAAAD,GACA,IAAAoF,EAAAnF,EAAAmF,MACAhE,EAAA/C,MAAAY,UAAAmC,MACA3D,EAAAuC,EAAAvC,WACAM,EAAAiC,EAAAjC,SA8CA,IAAA0M,EAAA,WAEA,SAAAoD,KACA,OAAA,SAAA7Q,EAAA6K,GACAgG,EAAA5O,UAAAjC,EACA,IAAAyM,EAAA,IAAAoE,EAKA,OAJAA,EAAA5O,UAAA,KACA4I,GACAzC,EAAAqE,EAAA5B,GAEA4B,GAVA,GAcAqE,GACAC,SAAA,kBACAC,YAAA,mBACAC,OAAA,oBA6DA,OACAC,SA5FA,SAAAlM,EAAAmM,GACA,IAAAC,EACA,OAAA,WACA,IAAAC,EAAA/I,KAAAR,EAAAE,UAKAoJ,GAAAE,aAAAF,GACAA,EAAAG,WALA,WACAH,EAAA,KACApM,EAAAqD,MAAAgJ,EAAAvJ,IAGAqJ,KAqFA1D,SAAAA,EAEA+D,MA/HA,SAAAxM,GACAyM,sBACAA,sBAAAzM,GAEA0M,cAAA1M,GAEA,OAAAsD,MA2HAqJ,KAxHA,aA0HAC,MAvHA,SAAAA,EAAA5M,EAAAqM,GACA,IAAAvJ,EAAA,KAAAE,WAAA5D,EAAA7D,KAAAyH,UAAA,GACA,GAAAvH,EAAAuE,GAAA,CAIA,OAHA,WACA,OAAAA,EAAAqD,MAAAgJ,EAAAvJ,EAAAA,EAAAnD,OAAAP,EAAA7D,KAAAyH,YAAAA,YAGA,GAAAjH,EAAAsQ,GACA,OAAAvJ,GACAA,EAAAuD,QAAArG,EAAAqM,GAAArM,GACA4M,EAAAvJ,MAAA,KAAAP,IAEA8J,EAAA5M,EAAAqM,GAAArM,GAGA,MAAA,IAAA6M,UAAA,sBA0GAC,WAAA,WACA,OAAA,GAGAC,YAAA,WACA,OAAA,GAGAjB,iBAAAA,EACAkB,SA7EA,SAAAC,EAAAC,EAAAC,IACAD,GAAAC,IAAAD,EAAAC,GACAD,EAAAjP,EAAAiE,YAAAgL,EAAApB,GAGA,IAiCAsB,EAjCAC,EAAAC,SACAJ,EAAAjB,QAAAsB,SAAA7K,QACAwK,EAAAlB,aAAAuB,SAAA7K,QACAwK,EAAAnB,UAAAwB,SAAA7K,QACA8K,KAAA,KAAA,KAAA,KAGAhP,EAAA,EACAkE,EAAA,SACAuK,EAAAzL,QAAA6L,EAAA,SAAAI,EAAAxB,EAAAD,EAAAD,EAAAtM,GAaA,OAZAiD,GAAAuK,EAAA7N,MAAAZ,EAAAiB,GAAA+B,QAAAkM,aAAAC,YACAnP,EAAAiB,EAAAgO,EAAAhT,OAEAwR,EACAvJ,GAAA,cAAAuJ,EAAA,iCACAD,EACAtJ,GAAA,cAAAsJ,EAAA,uBACAD,IACArJ,GAAA,OAAAqJ,EAAA,YAIA0B,IAEA/K,GAAA,OAGAwK,EAAAU,WAAAlL,EAAA,mBAAAA,EAAA,OAEAA,EAAA,4FAEAA,EAAA,gBAGA,IACA0K,EAAA,IAAAxG,SAAAsG,EAAAU,UAAA,MAAA,IAAAlL,GACA,MAAAmL,GAEA,MADAA,EAAAnL,OAAAA,EACAmL,EAGA,IAAAb,EAAA,SAAA9C,GACA,OAAAkD,EAAA7R,KAAA+H,KAAA4G,EAAA4D,IAIAC,EAAAb,EAAAU,UAAA,MAGA,OAFAZ,EAAAtK,OAAA,YAAAqL,EAAA,OAAArL,EAAA,IAEAsK,MA0BA5S,OAAA,0BACA,WACA,UACA,aACA,SAAAoL,EAAAwI,EAAA/P,GACA,aAEA,IAAAgQ,EAAA7L,OAAAA,SAAA,gBACA8L,EAAA9L,OAAAA,SAAA,eAEAhD,EAAA/C,MAAAY,UAAAmC,MACAwN,EAAAoB,EAAApB,MACApN,EAAAgG,EAAAhG,UACAb,EAAAV,EAAAU,OACAyE,EAAAnF,EAAAmF,MAEAA,EAAA+K,QAAAlR,WACAmR,OAAA,SAAAC,GAIA,OADA/K,KAAA8E,KAAAiG,EAAAA,GACA/K,MAEAgL,KAAA,WACA,IAAA,IAAA3T,EAAA,EAAAA,EAAAqI,UAAAvI,OAAAE,IACA2I,KAAA8E,KAAApF,UAAArI,IAEA,OAAA2I,MAEAiL,KAAA,SAAAF,GAIA,OADA/K,KAAAkL,MAAAH,GACA/K,QAKA,IAAAiF,EAAA,WACA,IAAAkG,EAAAnL,KACAoL,EAAApL,KAAAqL,QAAA,IAAAR,QAAA,SAAAS,EAAAC,GACAJ,EAAAK,SAAAF,EACAH,EAAAM,QAAAF,IAGAG,EAAAN,EAAAD,GAEAnL,KAAA2K,MACA3K,KAAA4K,OAQA,SAAAc,EAAAN,EAAAO,GACA,IAAAC,GACAC,MAAA,WACA,OAAAF,EAAAG,aACA,WAEAH,EAAAI,aACA,WAEA,WAEAjH,KAAA,SAAAkH,EAAAC,EAAAC,GAIA,OAHAA,GACAlM,KAAAmM,SAAAD,GAEAR,EAAAb,QAAAlR,UAAAmL,KAAA7M,KAAA+H,KACAgM,GAAA,SAAAxM,GACA,OAAAA,QAAA/E,IAAA+E,EAAA4M,QACAJ,EAAAjM,MAAAP,EAAA4M,QAAA5M,GAEAwM,EAAAxM,IAGAyM,GAAA,SAAAzM,GACA,OAAAA,QAAA/E,IAAA+E,EAAA4M,QACAH,EAAAlM,MAAAP,EAAA4M,QAAA5M,GAEAyM,EAAAzM,OAIA2M,SAAA,SAAApB,GAKA,OAJAY,EAAAf,GAAA9S,QAAA,SAAAM,GACA2S,EAAA3S,KAEAuT,EAAAhB,GAAAnP,KAAAuP,GACA/K,OAMA,OADA4L,EAAAS,KAAAT,EAAA9G,KACAhF,EAAAsL,EAAAQ,GA8HA,OA1HA3G,EAAAtL,UAAA2R,QAAA,SAAAlT,GACA,IAAAoH,EAAA1D,EAAA7D,KAAAyH,WACA,OAAAM,KAAAsM,YAAA,KAAA9M,IAGAyF,EAAAtL,UAAA2S,YAAA,SAAAvD,EAAAvJ,GAKA,OAJAA,EAAAA,EAAAtD,EAAAsD,OACA4M,QAAArD,EACA/I,KAAAwL,SAAAhM,GACAQ,KAAAuM,WAAA,EACAvM,MAGAiF,EAAAtL,UAAA6S,OAAA,SAAApU,GACA,IAGA,OAFA4H,KAAA4K,GAAApP,KAAApD,GAEA4H,KAAA2K,GAAA7S,QAAA,SAAA2U,GACA,OAAAA,EAAArU,KAEA,MAAAsU,GACA1M,KAAAuL,OAAAmB,GAEA,OAAA1M,MAGAiF,EAAAtL,UAAA4R,OAAA,SAAAoB,GACA,IAAAnN,EAAA1D,EAAA7D,KAAAyH,WACA,OAAAM,KAAA4M,WAAA,KAAApN,IAGAyF,EAAAtL,UAAAiT,WAAA,SAAA7D,EAAAvJ,GAKA,OAJAA,EAAAA,EAAAtD,EAAAsD,OACA4M,QAAArD,EACA/I,KAAAyL,QAAAjM,GACAQ,KAAA6M,WAAA,EACA7M,MAGAiF,EAAAtL,UAAAmS,WAAA,WACA,QAAA9L,KAAAuM,WAGAtH,EAAAtL,UAAAoS,WAAA,WACA,QAAA/L,KAAA6M,WAGA5H,EAAAtL,UAAAmL,KAAA,SAAAjI,EAAAiQ,EAAAC,GACA,IAAA3B,EAAA/P,EAAA2E,KAAA,WACA,OAAAoL,EAAAtG,KAAAjI,EAAAiQ,EAAAC,IAGA9H,EAAAtL,UAAAwS,SAAA,SAAAY,GACA,IAAA3B,EAAA/P,EAAA2E,KAAA,WACA,OAAAoL,EAAAe,SAAAY,IAGA9H,EAAAtL,UAAAuR,MAAA,SAAA4B,GACA,IAAA1B,EAAA/P,EAAA2E,KAAA,WACA,OAAAoL,EAAAF,MAAA4B,IAIA7H,EAAAtL,UAAAqR,KAAA,WACA,IAAAI,EAAA/P,EAAA2E,KAAA,WACA,OAAAoL,EAAAJ,KAAAjL,MAAAqL,EAAA1L,YAGAuF,EAAAtL,UAAAsR,KAAA,SAAA6B,GACA,IAAA1B,EAAA/P,EAAA2E,KAAA,WACA,OAAAoL,EAAAH,KAAA6B,IAIA7H,EAAA+H,IAAA,SAAAlS,GAEA,IAAA6Q,EAAA,IAAA1G,EAEA,OADA4F,QAAAmC,IAAAlS,GAAAgK,KAAA6G,EAAAL,QAAA2B,KAAAtB,GAAAA,EAAAJ,OAAA0B,KAAAtB,IACAtQ,EAAAsQ,EAAA,YAGA1G,EAAAtJ,MAAA,SAAAb,GACA,OAAA4Q,EAAAb,QAAAqC,KAAApS,KAIAmK,EAAAC,KAAA,SAAAiI,EAAAtQ,EAAAiQ,EAAAC,GACA,IAAAK,EAAAD,GAAA,mBAAAA,EAAArI,KACAuI,EAAAD,GAAAD,aAAAtC,QAEA,IAAAuC,EACA,OAAA1N,UAAAvI,OAAA,EACA0F,EAAAA,EAAAsQ,GAAAA,GAEA,IAAAlI,GAAAqG,QAAA6B,GAEA,IAAAE,EAAA,CACA,IAAAC,EAAA,IAAArI,EAAAkI,EAAAI,QACAJ,EAAArI,KAAAwE,EAAAgE,EAAAhC,QAAAgC,GAAAhE,EAAAgE,EAAA/B,OAAA+B,GAAAA,EAAAd,QACAW,EAAAG,EAAAjC,QAGA,OAAAxO,GAAAiQ,GAAAC,EACAI,EAAArI,KAAAjI,EAAAiQ,EAAAC,GAEAI,GAGAlI,EAAAsG,OAAA,SAAAiC,GACA,IAAA7B,EAAA,IAAA1G,EAEA,OADA0G,EAAAJ,OAAAiC,GACA7B,EAAAN,SASApG,EAAAwI,UANAxI,EAAAqG,QAAA,SAAA1E,GACA,IAAA+E,EAAA,IAAA1G,EAEA,OADA0G,EAAAL,QAAAvL,MAAA4L,EAAAjM,WACAiM,EAAAN,SAKApG,IAEAnO,OAAA,uBACA,aACA,aACA,SAAAmO,EAAAtK,GACA,IAAAkG,EAAAlG,EAAAkG,KAEA6M,GACAC,SAAA,SAAAlR,EAAA+C,EAAAoO,GACA,IAAAC,KAQA,OAPAD,EAAAA,GAAA,KACApO,EAAAA,MAEAqB,EAAApE,EAAA,SAAApF,EAAA0E,GACA8R,EAAArS,KAAAO,EAAAgE,MAAA6N,EAAApO,MAGAyF,EAAA+H,IAAAa,IAGAC,OAAA,SAAArR,EAAA+C,EAAAoO,GACA,IAAAC,KACAlC,EAAA,IAAA1G,EACAmG,EAAAO,EAAAN,QAaA,OAXAuC,EAAAA,GAAA,KACApO,EAAAA,MAEAmM,EAAAL,UACAzK,EAAApE,EAAA,SAAApF,EAAA0E,GACAqP,EAAAA,EAAAtG,KAAA,WACA,OAAA/I,EAAAgE,MAAA6N,EAAApO,KAEAqO,EAAArS,KAAA4P,KAGAnG,EAAA+H,IAAAa,IAGAE,SAAA,SAAAtR,EAAA+C,EAAAoO,GACA,IAAAjC,EAAA,IAAA1G,EACAmG,EAAAO,EAAAN,QAUA,OARAuC,EAAAA,GAAA,KACApO,EAAAA,MAEAmM,EAAAW,YAAAsB,EAAApO,GAEAqB,EAAApE,EAAA,SAAApF,EAAA0E,GACAqP,EAAAA,EAAAtG,KAAA/I,KAEAqP,IAIA,OAAAsC,IAEA5W,OAAA,6BAAA,WA2DA,OACAkX,kBA3DA,SAAAC,GAEA,IAAAC,EAAAD,EAAA/W,MAAA,KACAiX,EAAAvQ,SAAAsQ,EAAA,IAEA,GAAAE,MAAAD,GACA,OAAA,EAKA,OAAAD,EAAA,GAAAG,OAAAnQ,QAAA,MAAA,KACA,IAAA,UACA,IAAA,SACA,IAAA,MACA,IAAA,KACA,IAAA,IACA,OAAA,IAAAiQ,EACA,IAAA,QACA,IAAA,OACA,IAAA,KACA,IAAA,KACA,IAAA,IACA,IAAA,IACA,OAfA,KAeAA,EACA,IAAA,UACA,IAAA,SACA,IAAA,MACA,IAAA,KACA,IAAA,IACA,OAAA,IAAAA,EACA,IAAA,OACA,IAAA,MACA,IAAA,KACA,IAAA,KACA,IAAA,IACA,OAAA,MAAAA,EACA,IAAA,SACA,IAAA,QACA,IAAA,KACA,IAAA,IACA,OAAA,QAAAA,EACA,IAAA,QACA,IAAA,OACA,IAAA,IACA,IAAA,IACA,OAAA,OAAAA,EACA,IAAA,QACA,IAAA,OACA,IAAA,OACA,IAAA,KACA,IAAA,IACA,OAAA,QAAAA,EACA,QACA,OAAA,OAQArX,OAAA,yBACA,UACA,WACA,YACA,WACA,SAAA4N,EAAAxC,EAAAvH,EAAAD,GACA,IAAAoB,EAAA/C,MAAAY,UAAAmC,MACAJ,EAAAwG,EAAAxG,QACAxC,EAAAwB,EAAAxB,UACAM,EAAAkB,EAAAlB,cACArB,EAAAuC,EAAAvC,WACAM,EAAAiC,EAAAjC,SACAP,EAAAwC,EAAAxC,cACA4H,EAAAnF,EAAAmF,MAEA,SAAAwO,EAAAC,GACA,IAAAC,GAAA,GAAAD,GAAArX,MAAA,KACA,OACAI,KAAAkX,EAAA,GACApX,GAAAoX,EAAA1S,MAAA,GAAAoO,KAAA,MAIA,IAAAuE,EAAA/J,GACAgK,GAAA,SAAAC,EAAAC,EAAAhI,EAAA/J,EAAA+Q,EAAAiB,GACA,IAAA1D,EAAAnL,KACA8O,EAAA9O,KAAA8O,OAAA9O,KAAA8O,SAEA,OAAAtV,EAAAmV,IACAf,EAAA/Q,EACAgE,KAAA8N,EAAA,SAAA9W,EAAA6E,GACAyO,EAAAuD,GAAA7W,EAAA+W,EAAAhI,EAAAlK,EAAAkR,EAAAiB,KAEA7O,OAGAvH,EAAAmW,IAAAzW,EAAA0E,KACA+Q,EAAA/Q,EACAA,EAAA+J,EACAA,EAAAgI,EACAA,OAAAnU,GAGAtC,EAAAyO,KACAgH,EAAA/Q,EACAA,EAAA+J,EACAA,EAAA,MAGAnO,EAAAkW,KACAA,EAAAA,EAAAzX,MAAA,OAGAyX,EAAA7W,QAAA,SAAAyW,GACA,IAAAQ,EAAAT,EAAAC,GACAjX,EAAAyX,EAAAzX,KACAF,EAAA2X,EAAA3X,IAEA0X,EAAAxX,KAAAwX,EAAAxX,QAAAkE,MACAkB,GAAAG,EACA+R,SAAAA,EACAhI,KAAAA,EACAgH,IAAAA,EACAxW,GAAAA,EACAyX,IAAAA,MAIA7O,OAGA6O,IAAA,SAAAF,EAAAC,EAAAhI,EAAA/J,EAAA+Q,GACA,OAAA5N,KAAA0O,GAAAC,EAAAC,EAAAhI,EAAA/J,EAAA+Q,EAAA,IAGAoB,QAAA,SAAAzE,GACA,IAAAvK,KAAA8O,KACA,OAAA9O,KAGA,IAAAmL,EAAAnL,KAEAvH,EAAA8R,KACAA,EAAA,IAAA0E,YAAA1E,IAGA9Q,OAAA6K,eAAAiG,EAAA,UACAnS,MAAA4H,OAGA,IAAAR,EAAA1D,EAAA7D,KAAAyH,UAAA,GA2CA,OAzCAF,EADAtG,EAAAsG,IACA+K,GAAAlO,OAAAmD,IAEA+K,IAEAA,EAAA1S,MAAA0S,EAAAjT,KAAA,OAAAQ,QAAA,SAAAoX,GACA,IAAAH,EAAAT,EAAAY,GACA5X,EAAAyX,EAAAzX,KACAF,EAAA2X,EAAA3X,GAEA+X,EAAAhE,EAAA2D,KAAAxX,GACA,GAAA6X,EAAA,CAOA,IAHA,IAAAC,EAAAD,EAAAhY,OACAkY,GAAA,EAEAhY,EAAA,EAAAA,EAAA+X,EAAA/X,IAAA,CACA,IAAAoV,EAAA0C,EAAA9X,KACAD,GAAAqV,EAAArV,IAAAqV,EAAArV,GAAA+C,WAAA/C,MAGAmT,EAAA3D,KACA6F,EAAA7F,OACA2D,EAAA3D,KAAA9G,KAAA2M,EAAA7F,KAAA2D,EAAA3D,OAGA2D,EAAA3D,KAAA6F,EAAA7F,MAAA,KAEA6F,EAAA/P,GAAAqD,MAAA0M,EAAAmB,IAAApO,GACAiN,EAAAoC,MACAM,EAAA9X,GAAA,KACAgY,GAAA,IAIAA,IACAlE,EAAA2D,KAAAI,GAAAxT,EAAAyT,OAIAnP,MAGAsP,SAAA,SAAAf,GACA,IAAAgB,GAAAvP,KAAA8O,OAAA9O,KAAAwP,aAAAjB,OACA,OAAAgB,EAAApY,OAAA,GAGAsY,SAAA,SAAA/X,EAAA6W,EAAA1R,EAAAgS,GACA,IAAAnX,EACA,OAAAsI,KAIAvH,EAAAoE,KACAA,EAAAmD,KAAAnD,IAGAgS,EACAnX,EAAAmX,IAAAN,EAAA1R,EAAAmD,MAEAtI,EAAAgX,GAAAH,EAAA1R,EAAAmD,MAOA,IAHA,IACA0P,EADAC,EAAA3P,KAAA4P,eAAA5P,KAAA4P,iBAGAvY,EAAA,EAAAA,EAAAsY,EAAAxY,OAAAE,IACA,GAAAsY,EAAAtY,GAAAK,KAAAA,EAAA,CACAgY,EAAAC,EAAAtY,GACA,MAGAqY,GACAC,EAAAnU,KACAkU,GACAhY,IAAAA,EACAiX,YAIA,IAAAkB,EAAAH,EAAAf,OACAmB,EAAAD,EAAAtB,GAAAsB,EAAAtB,OAKA,OAJA,GAAAuB,EAAA7T,QAAAY,IACAiT,EAAAtU,KAAAqB,GAGAmD,MAGA+P,aAAA,SAAArY,EAAA6W,EAAA1R,GACA,OAAAmD,KAAAyP,SAAA/X,EAAA6W,EAAA1R,EAAA,IAGAmT,IAAA,SAAArB,EAAA9R,GACA,IAAAiS,EAAA9O,KAAA8O,OAAA9O,KAAA8O,SAuCA,OAtCArW,EAAAkW,KACAA,EAAAA,EAAAzX,MAAA,OAGAyX,EAAA7W,QAAA,SAAAyW,GACA,IAAAQ,EAAAT,EAAAC,GACAjX,EAAAyX,EAAAzX,KACAF,EAAA2X,EAAA3X,GAEA6Y,EAAAnB,EAAAxX,GAEA,GAAA2Y,EAAA,CACA,IAAAC,KAEA,GAAArT,GAAAzF,EACA,IAAA,IAAAC,EAAA,EAAA+X,EAAAa,EAAA9Y,OAAAE,EAAA+X,EAAA/X,IAEAwF,GAAAoT,EAAA5Y,GAAAqF,KAAAG,GAAAoT,EAAA5Y,GAAAqF,GAAA8N,IAAA3N,EACAqT,EAAA1U,KAAAyU,EAAA5Y,KAIAD,GAAA6Y,EAAA5Y,GAAAD,IAAA,GAAA6Y,EAAA5Y,GAAAD,GAAA6E,QAAA7E,IACA8Y,EAAA1U,KAAAyU,EAAA5Y,IAMA6Y,EAAA/Y,OACA2X,EAAAxX,GAAA4Y,SAEApB,EAAAxX,MAMA0I,MAEAmQ,WAAA,SAAAzY,EAAA6W,EAAA1R,GACA,IAAA8S,EAAA3P,KAAA4P,aACA,IAAAD,EACA,OAAA3P,KAEA,IAAA,IAAA3I,EAAA,EAAAA,EAAAsY,EAAAxY,OAAAE,IAAA,CACA,IAAAqY,EAAAC,EAAAtY,GAEA,IAAAK,GAAAA,GAAAgY,EAAAhY,IAAA,CAIA,IAAAmY,EAAAH,EAAAf,OACA,IAAA,IAAAO,KAAAW,EACA,IAAAtB,GAAAA,GAAAW,EAAA,CAMA,IAFA,IAAAY,EAAAD,EAAAX,GAEA3T,EAAA,EAAAA,EAAAuU,EAAA3Y,OAAAoE,IACAsB,GAAAA,GAAAiT,EAAAzY,KACAqY,EAAAhY,IAAAsY,IAAAd,EAAAY,EAAAzY,GAAA2I,MACA8P,EAAAzY,GAAA,MAIAyY,EAAAD,EAAAX,GAAAxT,EAAAoU,GAEA5X,EAAA4X,KACAD,EAAAX,GAAA,MAKAhX,EAAA2X,KACAF,EAAAtY,GAAA,OASA,OALAsY,EAAA3P,KAAA4P,aAAAlU,EAAAiU,GACAzX,EAAAyX,KACA3P,KAAA4P,aAAA,MAGA5P,QAIA,OAAAyO,IAGA3X,OAAA,0BACA,WAEA,IAAAsZ,GACAC,WAAA,EACAC,OAAA,KACAC,OAAAvQ,KACAwQ,QAAA,KACAC,KAAA,MAGA,iBAAAC,SAAAA,QAAAC,UAAAD,QAAAC,SAAAF,MAAAC,QAAAC,SAAAC,KACAR,EAAAE,QAAA,EACAF,EAAAC,WAAA,GAGAD,EAAAG,OAAA,WACA,MAAA,oBAAAA,QAAA,mBAAAA,OAIAA,OACA,oBAAA5X,OAEAA,OAEA,oBAAAwS,KAEAA,KAEAnL,KAdA,GAiBA,IAAA6Q,EAAA,KAWA,GATApX,OAAA6K,eAAA8L,EAAA,WAAA,WACA,IAAAS,EAAA,CACA,IAAAC,EAAA,oBAAAnY,OAAAoY,QAAA,gBAAApY,OACAkY,EAAAC,EAAAE,SAGA,OAAAH,IAGAT,EAAAC,UAAA,CAiBA,IAAAY,EAhBA,SAAAC,GACAA,EAAAA,EAAAnZ,cAEA,IAAAoS,EAAA,wBAAAgH,KAAAD,IACA,wBAAAC,KAAAD,IACA,qCAAAC,KAAAD,IACA,kBAAAC,KAAAD,IACAA,EAAAjV,QAAA,cAAA,GAAA,gCAAAkV,KAAAD,OAGA,OACAV,QAAArG,EAAA,IAAA,GACAiH,QAAAjH,EAAA,IAAA,KAIAkH,CAAAC,UAAAC,WAEAf,EAAAJ,EAAAI,WAEAS,EAAAT,UACAA,EAAAS,EAAAT,UAAA,EACAA,EAAAY,QAAAH,EAAAG,SAIAZ,EAAAgB,OACAhB,EAAAiB,QAAA,EACAjB,EAAAiB,SACAjB,EAAAkB,QAAA,GAIA,OAAAtB,IAEAtZ,OAAA,2BACA,WAuFA,IAAA6a,EAAA,EAMA,OACAC,UAAA,SAAA3D,GACA,OAAAA,EAAA/P,QAAA,cAAA,SAAA+B,GACA,OAAAA,EAAA4R,cAAA3T,QAAA,IAAA,OAIA4T,UA5FA,SAAA7D,GACA,OAAAA,EAAA/P,QAAA,MAAA,KACAA,QAAA,wBAAA,SACAA,QAAA,oBAAA,SACAA,QAAA,KAAA,KACAnG,eAyFAga,iBAtFA,SAAA3Z,GACA,IACA,OAAAA,EACA,QAAAA,GACA,SAAAA,IACA,QAAAA,EAAA,MACAA,EAAA,IAAAA,GAAAA,EACA,UAAAgG,KAAAhG,GAAA4Z,KAAA1D,MAAAlW,GACAA,GAAAA,EACA,MAAAmS,GACA,OAAAnS,IA8EA6Z,WAAA,SAAAhE,GACA,OAAAA,EAAAiE,OAAA,GAAAna,cAAAkW,EAAAnS,MAAA,IAGAqW,eAAA,SAAA/Z,GACA,OAAA4Z,KAAAI,UAAAha,IAIAia,WA/EA,SAAA3I,EAEA/M,EAEA2V,EAEA3M,GAmBA,SAAA4M,EAAAzV,EAAAH,GACA,GAAAG,EAAAqN,MAAA,MAAA,CACA,IAAAqI,EACAC,EAAA,SAAAzT,EAAAtH,GACA,IAAAgb,EAAA1T,EAAAY,MACA,OAAA8S,EACAhb,EAAAgb,GACAD,EAAAzT,EAAAwT,EAAA9a,EAAAgb,IADA,KAGAF,GAGA,OAAAC,EAAA3V,EAAA5F,MAAA,KAAAyb,UAAAhW,GAEA,OAAAA,EAAAG,GAIA,OAxBA6I,EAAAA,GAAAhN,OACA2Z,EAAAA,EACAhJ,MAAA3D,EAAA2M,GAAA,SAAAM,GACA,OAAAA,GAqBAlJ,EAAAxL,QAAA,yCACA,SAAAiM,EAAArN,EAAA+V,GACA,IAAAza,EAAAma,EAAAzV,EAAAH,GAIA,OAHAkW,IACAza,EAAAma,EAAAM,EAAAlN,GAAA1N,KAAA0N,EAAAvN,EAAA0E,IAEAwV,EAAAla,EAAA0E,GAAAlF,cAgCAyW,KApFA,SAAAJ,GACA,OAAA,MAAAA,EAAA,GAAAjW,OAAA2B,UAAA0U,KAAApW,KAAAgW,IAqFA6E,SA7BA,SAAAC,GACA,IAAApM,IAAAgL,EAAA,GACA,OAAAoB,EAAAA,EAAApM,EAAAA,GA6BAqM,WAAA,SAAA/E,GACA,OAAAA,EAAAiE,OAAA,GAAAL,cAAA5D,EAAAnS,MAAA,OAKAhF,OAAA,qBACA,WACA,aACA,YACA,YACA,UACA,WACA,SAAAoL,OAAA+C,SAAAwJ,QAAA9T,QAAA+P,MAAAhQ,OACA,IAAAmG,KAAAlG,QAAAkG,KACAf,MAAAnF,QAAAmF,MACAuJ,KAAAqB,MAAArB,KACAzQ,QAAA8B,MAAA9B,QACAT,WAAAuC,MAAAvC,WACAqB,cAAAkB,MAAAlB,cACA3B,KAAA6C,MAAA7C,KAEAob,eAGA,SAAAC,GAIA,OAHAjT,IAAAA,EAAA+Q,SAAAmC,cAAA,MACAlT,EAAApG,KAAAqZ,EAEAjT,EAAApG,MANAoG,EAUAmT,IAAA,WACA,IAAAC,QAAA,EACAvW,IACAxF,KACAgc,QAAA,sDACAC,aAAA,qCACAC,UAAA,8BACAC,SAAA,mBACAC,SAAA,YACAC,QAAA,QAEAC,mBACAlG,OAAA,EAGA7V,KAAA,MAEAgc,WAAAxK,KAEAyK,QAAAzK,KAEAqD,MAAArD,KAEA0K,SAAA1K,KAEAN,QAAA,KAEAwH,QAAA,EAIAyD,SACAC,OAAA,oEACAC,KAAA,mBACAC,IAAA,4BACAC,KAAA,YACAzK,KAAA,cAGA0K,aAAA,EAEAvL,QAAA,EAEAwL,aAAA,EAEAzO,OAAA,EAEA0O,WACAC,iBAAA,IAIA,SAAAC,eAAAC,GAIA,GAHAA,IACAA,EAAAA,EAAAxd,MAAA,IAAA,GAAA,IAEAwd,EAAA,CACA,GAAAA,GAAAhB,SACA,MAAA,OACA,GAAAgB,GAAAjB,SACA,MAAA,OACA,GAAAF,aAAAnV,KAAAsW,GACA,MAAA,SACA,GAAAlB,UAAApV,KAAAsW,GACA,MAAA,MAGA,MAAA,OAGA,SAAAC,YAAAzB,EAAA3N,GACA,MAAA,IAAAA,EAAA2N,GACAA,EAAA,IAAA3N,GAAArH,QAAA,YAAA,KAIA,SAAA0W,cAAAlS,GACAA,EAAAkE,KAAAlE,EAAAkE,MAAAlE,EAAA6C,MACA7C,EAAA4R,aAAA5R,EAAAkE,MAAA,UAAA/O,KAAA6K,EAAAkE,QACAlE,EAAAkE,KAAAiO,MAAAnS,EAAAkE,KAAAlE,EAAAoS,eAEApS,EAAAkE,MAAAlE,EAAA7K,MAAA,OAAA6K,EAAA7K,KAAAga,gBACAnP,EAAAwQ,IAAAyB,YAAAjS,EAAAwQ,IAAAxQ,EAAAkE,MACAlE,EAAAkE,UAAAnM,GAIA,SAAAsa,UAAAtV,EAAA/H,EAAAod,EAAAE,GACA,IAAAC,EAAAna,EAAAlC,QAAAlB,GACAwd,EAAA1b,cAAA9B,GACAmJ,KAAAnJ,EAAA,SAAAoF,EAAA1E,GACA6c,EAAApd,KAAAO,GACA4c,IAAAlY,EAAAgY,EAAAE,EACAA,EAAA,KAAAE,GAAA,UAAAD,GAAA,SAAAA,EAAAnY,EAAA,IAAA,MAEAkY,GAAAla,EAAA2E,EAAAyH,IAAA9O,EAAAd,KAAAc,EAAAA,OAEA,SAAA6c,IAAAH,GAAA,UAAAG,EACAF,UAAAtV,EAAArH,EAAA0c,EAAAhY,GACA2C,EAAAyH,IAAApK,EAAA1E,KAIA,IAAAyc,MAAA,SAAAnd,EAAAod,GACA,IAAArV,KAOA,OANAA,EAAAyH,IAAA,SAAApK,EAAA1E,GACAD,WAAAC,KAAAA,EAAAA,KACA,MAAAA,IAAAA,EAAA,IACA4H,KAAAxE,KAAAmN,OAAA7L,GAAA,IAAA6L,OAAAvQ,KAEA2c,UAAAtV,EAAA/H,EAAAod,GACArV,EAAAyK,KAAA,KAAAhM,QAAA,OAAA,MAGAkV,IAAA3E,QAAAjK,SACAb,UAAA,MAEAwR,SAAA,SAAA3V,MACA,IAAAgL,EAAAxK,KAAAwK,EACAW,KAAAnL,KACA0C,QAAA5C,SAAA8T,kBAAApJ,EAAA9H,QAAAlD,MACA4V,IAAA5K,EAAA4K,IAAA,IAAAC,eAEAT,cAAAlS,SAEA,IAAA4S,SAAA5S,QAAA4S,UAAA5S,QAAA6S,SACAb,KAAAhS,QAAA8S,UAAA9S,QAAAsR,QAAAsB,UACAG,QAAA/S,QAAA+S,QACAlB,UAAA7R,QAAA6R,UACAmB,WAAAhT,QAAAkE,MAAAlE,QAAAkE,gBAAA+O,SACAC,wBAAAlT,QAAAkT,wBACA/d,KAAA6K,QAAA7K,KACAqb,IAAAxQ,QAAAwQ,IACAxF,MAAAhL,QAAAgL,MACAmI,KAAAnT,QAAAmT,KACAC,SAAApT,QAAAoT,SACAxI,SAAA,IAAArI,SACA8Q,aAAAL,YAAA,oCAEA,GAAAnB,UACA,IAAAjd,QAAAid,UACAa,IAAA9d,MAAAid,UAAAjd,MAIAod,MAAAA,KAAAzY,QAAA,MAAA,IACAyY,KAAAA,KAAAxd,MAAA,IAAA,GAAA,IAEAwd,MAAAU,IAAAY,kBACAZ,IAAAY,iBAAAtB,MAOA,IAAAuB,OAAA,WACAb,IAAAc,UAAA7M,KACA+L,IAAAe,QAAA9M,KACA+L,IAAAgB,WAAA/M,KACA+L,IAAAiB,UAAAhN,KACA+L,IAAA,MAEAc,UAAA,WACA,IAAA7a,OAAAqR,OAAA,EACA,GAAA0I,IAAAkB,QAAA,KAAAlB,IAAAkB,OAAA,KAAA,KAAAlB,IAAAkB,QAAA,GAAAlB,IAAAkB,QAAArD,eAAAC,KAAA/Y,WAAA,SAAA,CACAmb,SAAAA,UAAAb,eAAA/R,QAAA8S,UAAAJ,IAAAmB,kBAAA,iBAEAlb,OAAA+Z,IAAAoB,aACA,IACA,UAAAlB,SACAmB,KAAApb,QACA,OAAAia,SACAja,OAAA+Z,IAAAsB,YACA,QAAApB,SACAja,OAAAsY,QAAAvV,KAAA/C,QAAA,KAAA2W,KAAA1D,MAAAjT,QACA,QAAAia,SACAja,OAAAsb,MAAAC,OAAAC,WACA,eAAAvB,WACAja,OAAA+Z,IAAA0B,SAEA,MAAAvM,GACAmC,MAAAnC,EAGAmC,MACAY,SAAA/B,OAAAmB,MAAA0I,IAAAkB,OAAAlB,KAEA9H,SAAAhC,QAAAjQ,OAAA+Z,IAAAkB,OAAAlB,UAGA9H,SAAA/B,OAAA,IAAA1I,MAAAuS,IAAA2B,YAAA3B,IAAAkB,OAAAlB,KAEAa,UAGAE,QAAA,WACA7I,UACAA,SAAA/B,OAAA,IAAA1I,MAAA,SAAAuS,IAAAkB,OAAAlB,KAEAa,UAGAI,UAAA,WACA/I,UACAA,SAAA/B,OAAA,IAAA1I,MAAA,WAAAuS,IAAAkB,OAAAlB,KAEAa,UAGAG,WAAA,SAAAY,GACA1J,UACAA,SAAAd,OAAAwK,EAAA5B,IAAAkB,OAAAlB,MAWA,GAPAA,IAAAc,UAAAA,UACAd,IAAAe,QAAAA,QACAf,IAAAiB,UAAAA,UACAjB,IAAAgB,WAAAA,WAEAhB,IAAA6B,KAAApf,KAAAqb,IAAAxF,MAAAmI,KAAAC,UAEAL,QACA,IAAA,IAAA3Y,OAAA2Y,QAAA,CACA,IAAArd,MAAAqd,QAAA3Y,KAEA,iBAAAA,IAAA/E,cACAge,YAAAN,QAAAyB,KAEA9B,IAAA+B,iBAAAra,IAAA1E,OAqBA,OAhBA2d,cAAA,IAAAA,aACAX,IAAA+B,iBAAA,eAAApB,aAGAN,SAAA,qBAAAA,SACAL,IAAA+B,iBAAA,mBAAA,kBAKAvB,yBACAR,IAAA+B,iBAAA,gBAAAvB,yBAGAR,IAAAgC,KAAA1U,QAAAkE,KAAAlE,QAAAkE,KAAA,MAEA0G,SAAAjC,SAIAgM,MAAA,WACA,IAAA7M,EAAAxK,KAAAwK,EACA4K,EAAA5K,EAAA4K,IAEAA,GACAA,EAAAiC,SAKAC,QAAA,SAAA9X,GACA,OAAAQ,KAAAmV,SAAA3V,IAGAkH,IAAA,SAAAlH,GAGA,OAFAA,EAAAA,OACA3H,KAAA,MACAmI,KAAAmV,SAAA3V,IAGA+X,KAAA,SAAA/X,GAGA,OAFAA,EAAAA,OACA3H,KAAA,OACAmI,KAAAmV,SAAA3V,IAGAgY,MAAA,SAAAhY,GAGA,OAFAA,EAAAA,OACA3H,KAAA,QACAmI,KAAAmV,SAAA3V,IAGAsH,IAAA,SAAAtH,GAGA,OAFAA,EAAAA,OACA3H,KAAA,MACAmI,KAAAmV,SAAA3V,IAGAiY,IAAA,SAAAjY,GAGA,OAFAA,EAAAA,OACA3H,KAAA,SACAmI,KAAAmV,SAAA3V,IAGA8C,KAAA,SAAAI,GACA1C,KAAAwK,GACA9H,QAAAA,UAeA,OAVA,UAAA,MAAA,OAAA,MAAA,MAAA,SAAA5K,QAAA,SAAAR,GACA8b,IAAA9b,GAAA,SAAA4b,EAAA1T,GACA,IAAA4V,EAAA,IAAAhC,KAAAF,IAAAA,IACA,OAAAkC,EAAA9d,GAAAkI,MAIA4T,IAAAsE,eAAA9D,kBACAR,IAAAyB,MAAAA,MAEAzB,IA5TA,GA+TA,OAAAA,MAEAtc,OAAA,yBACA,YACA,YACA,YACA,SACA,SAAA2X,EAAA9T,EAAAgd,EAAAvE,GACA,IAAAtT,EAAAnF,EAAAmF,MACAuS,EAAAsF,EAAAtF,WAEAuF,EAAAnJ,EAAAjK,SACAb,UAAA,UAEAkU,YAAA,KAEAC,WAAA,SAAAtY,GAEA,IAAAuY,EAAA1F,EAAArS,KAAA+X,aAAAvY,GACAwY,EAAAhY,KAAAiY,OAAAjY,KAAAkY,SAAAH,EAIA,YAHAtd,IAAA+E,EAAAQ,KAAA6X,eACAG,EAAAA,EAAA,IAAAxY,EAAAQ,KAAA6X,cAEAG,GAEAG,MAAA,SAAA3Y,KAQA4Y,KAAA,SAAA5Y,GAOA,OAAA4T,EAAA1M,IAAA1G,KAAA8X,WAAAtY,GAAAA,IAEA6Y,MAAA,SAAA7Y,EAAA8Y,GASA,IAAApF,EAAAlT,KAAA8X,WAAAtY,GAIA,OAHA8Y,IACApF,EAAAA,EAAA,IAAAoF,GAEAlF,EAAAmE,KAAArE,EAAA1T,IAGA+Y,KAAA,SAAA/Y,EAAA8Y,GASA,IAAApF,EAAAlT,KAAA8X,WAAAtY,GAIA,OAHA8Y,IACApF,EAAAA,EAAA,IAAAoF,GAEAlF,EAAAtM,IAAAoM,EAAA1T,IAGAgZ,QAAA,SAAAhZ,GASA,IAAA0T,EAAAlT,KAAA8X,WAAAtY,GACA,OAAA4T,EAAAqE,IAAAvE,IAGAuF,OAAA,SAAAjZ,GAQA,IAAA0T,EAAAlT,KAAA8X,WAAAtY,GACA,OAAA4T,EAAAoE,MAAAtE,EAAA1T,IAEA+F,MAAA,SAAA9F,GAEA,OAAAO,KAAAqY,MAAA5Y,IAGAiZ,SAAA,SAAAjZ,GACA,OAAAO,KAAAoY,KAAA3Y,IAGA8D,OAAA,SAAA9D,GACA,OAAAO,KAAAqY,MAAA5Y,IAGAkZ,OAAA,SAAAlZ,GACA,OAAAO,KAAAuY,KAAA9Y,IAGAmZ,OAAA,SAAAnZ,GAEA,OAAAO,KAAAwY,QAAA/Y,IAGA+X,MAAA,SAAA/X,GAEA,OAAAO,KAAAyY,OAAAhZ,IAEA6C,KAAA,SAAA7C,GACAK,EAAAE,KAAAP,MAKA,OAAAmY,IAEA9gB,OAAA,0BACA,YACA,YACA,aACA,SAAA2X,EAAAkJ,EAAAhd,GACA,IAAAsG,EAAAtG,EAAAsG,QACAnB,EAAAnF,EAAAmF,MACAzE,EAAAV,EAAAU,OACAnD,EAAAyC,EAAAzC,cACAuI,EAAA9F,EAAA8F,MACAqS,EAAA6E,EAAA7E,SAEA+F,EAAApK,EAAAjK,SACAnC,WAAA,SAAAyW,EAAApW,GACA,IAAAnB,EAAAuX,MACApW,IAAAA,MACA1C,KAAA+Y,IAAAjG,EAAA9S,KAAAgZ,WACAhZ,KAAA8Y,cACApW,EAAAvB,aAAAnB,KAAAmB,WAAAuB,EAAAvB,YACAuB,EAAA4L,QAAA/M,EAAAvB,KAAAsO,MAAA/M,EAAAmB,QACA,IAAA9D,EAAAvD,EAAA2E,KAAA,YACAuB,EAAAzB,KAAAlB,EAAA2C,GACAvB,KAAAiZ,IAAA1X,EAAAmB,GACA1C,KAAAkZ,YAIAA,QAAA,KAGAC,gBAAA,KAIAtB,YAAA,KAIAmB,UAAA,IAIAI,OAAA,SAAA1W,GACA,OAAAjC,EAAAT,KAAA8Y,aAKApS,IAAA,SAAA2S,GACA,OAAArZ,KAAA8Y,WAAAO,IAKApa,IAAA,SAAAoa,GACA,OAAA,MAAArZ,KAAA0G,IAAA2S,IAMAJ,IAAA,SAAAnc,EAAAwc,EAAA5W,GACA,GAAA,MAAA5F,EAAA,OAAAkD,KAGA,IAAAuB,EAWA,GAVA,iBAAAzE,GACAyE,EAAAzE,EACA4F,EAAA4W,IAEA/X,MAAAzE,GAAAwc,EAGA5W,IAAAA,OAGA1C,KAAAuZ,UAAAhY,EAAAmB,GAAA,OAAA,EAGA,IAAA8W,EAAA9W,EAAA8W,MACAC,EAAA/W,EAAA+W,OACAC,KACAC,EAAA3Z,KAAA4Z,UACA5Z,KAAA4Z,WAAA,EAEAD,IACA3Z,KAAA6Z,oBAAApZ,EAAAT,KAAA8Y,YACA9Y,KAAAkZ,YAGA,IAAAY,EAAA9Z,KAAA8Y,WACAI,EAAAlZ,KAAAkZ,QACAa,EAAA/Z,KAAA6Z,oBAGA,IAAA,IAAAR,KAAA9X,EACA+X,EAAA/X,EAAA8X,GACApY,EAAA6Y,EAAAT,GAAAC,IAAAI,EAAAle,KAAA6d,GACApY,EAAA8Y,EAAAV,GAAAC,UAGAJ,EAAAG,GAFAH,EAAAG,GAAAC,EAIAE,SAAAM,EAAAT,GAAAS,EAAAT,GAAAC,EAOA,GAHAtZ,KAAA6X,eAAAtW,IAAAvB,KAAA2G,GAAA3G,KAAA0G,IAAA1G,KAAA6X,eAGA4B,EAAA,CACAC,EAAAviB,SAAA6I,KAAAga,SAAAtX,GACA,IAAA,IAAArL,EAAA,EAAAA,EAAAqiB,EAAAviB,OAAAE,IACA2I,KAAAgP,QAAA,UAAA0K,EAAAriB,GAAA2I,KAAA8Z,EAAAJ,EAAAriB,IAAAqL,GAMA,GAAAiX,EAAA,OAAA3Z,KACA,IAAAyZ,EACA,KAAAzZ,KAAAga,UACAtX,EAAA1C,KAAAga,SACAha,KAAAga,UAAA,EACAha,KAAAgP,QAAA,SAAAhP,KAAA0C,GAKA,OAFA1C,KAAAga,UAAA,EACAha,KAAA4Z,WAAA,EACA5Z,MAKAwZ,MAAA,SAAAH,EAAA3W,GACA,OAAA1C,KAAAiZ,IAAAI,OAAA,EAAAvZ,KAAA4C,GAAA8W,OAAA,MAIAS,MAAA,SAAAvX,GACA,IAAAnB,KACA,IAAA,IAAAzE,KAAAkD,KAAA8Y,WAAAvX,EAAAzE,QAAA,EACA,OAAAkD,KAAAiZ,IAAA1X,EAAAzB,KAAA4C,GAAA8W,OAAA,MAKAU,WAAA,SAAAb,GACA,OAAA,MAAAA,GAAAnhB,EAAA8H,KAAAkZ,cACAze,IAAAuF,KAAAkZ,QAAAG,IASAc,kBAAA,SAAAC,GACA,IAAAA,EAAA,QAAApa,KAAAka,cAAAzZ,EAAAT,KAAAkZ,SACA,IAAAmB,EAAAra,KAAA4Z,UAAA5Z,KAAA6Z,oBAAA7Z,KAAA8Y,WACAI,KACA,IAAA,IAAAG,KAAAe,EAAA,CACA,IAAAd,EAAAc,EAAAf,GACApY,EAAAoZ,EAAAhB,GAAAC,KACAJ,EAAAG,GAAAC,GAEA,OAAAphB,EAAAghB,IAAAA,GAKA9Q,SAAA,SAAAiR,GACA,OAAA,MAAAA,GAAArZ,KAAA6Z,oBACA7Z,KAAA6Z,oBAAAR,GADA,MAMAiB,mBAAA,WACA,OAAA7Z,EAAAT,KAAA6Z,sBAIApZ,MAAA,WACA,OAAA,IAAAT,KAAAlH,YAAAkH,KAAA8Y,aAIAyB,MAAA,WACA,OAAAva,KAAAf,IAAAe,KAAA6X,cAIA2C,QAAA,SAAA9X,GACA,OAAA1C,KAAAuZ,aAAAzZ,KAAA4C,GAAA+X,UAAA,MAKAlB,UAAA,SAAAhY,EAAAmB,GACA,IAAAA,EAAA+X,WAAAza,KAAAya,SAAA,OAAA,EACAlZ,EAAAzB,KAAAE,KAAA8Y,WAAAvX,GACA,IAAAmL,EAAA1M,KAAAmZ,gBAAAnZ,KAAAya,SAAAlZ,EAAAmB,IAAA,KACA,OAAAgK,IACA1M,KAAAgP,QAAA,UAAAhP,KAAA0M,EAAA5M,EAAA4C,GAAAyW,gBAAAzM,MACA,MAIA,OAAAmM,IAEA/hB,OAAA,uBACA,aACA,SAAA2X,GACA,IAAAiM,EAAA,IAAAjM,EAEA,OACAkM,QAAA,SAAArjB,EAAAsjB,EAAAC,GACA,IAAAjU,KAAA9K,MAAA7D,KAAAyH,UAAA,GAEA,OAAAgb,EAAA1L,SACAnX,KAAAP,EACAsP,KAAAA,KAIAkU,UAAA,SAAAxjB,EAAAmV,EAAAmB,GACA,IAAA7C,EAAA,SAAAR,GACAkC,EAAA1M,MAAA6N,EAAArD,EAAA3D,OAGA,OADA8T,EAAAhM,GAAApX,EAAAyT,IAEA5D,OAAA,WACAuT,EAAA1K,IAAA1Y,EAAAyT,SAQAjU,OAAA,uBACA,YACA,WACA,eACA,WACA,UACA,cACA,aACA,YACA,UACA,WACA,UACA,YACA,YACA,YACA,aACA,YACA,UACA,UACA,SACA,SAAAU,EAAA0K,EAAAmD,EAAAkC,EAAAmG,EAAAqN,EAAA9V,EAAAwJ,EAAA/D,EAAA0F,EAAA1L,EAAAnG,EAAA5D,EAAAid,EAAAiB,EAAAlB,EAAAqD,EAAAtgB,EAAA0Y,GACA,aAEAra,MAAAY,UAAA0C,OACAtD,MAAAY,UAAAsC,QACAlD,MAAAY,UAAAmC,MACA/C,MAAAY,UAAAiB,OAJA,IAKAkF,EAAAnF,EAAAmF,MACAmC,EAAAtH,EAAAsH,UACA9J,EAAAuC,EAAAvC,WAoCA,IAAA8iB,EAAA,EAMA,SAAAC,IACA,OAAAA,EA0CA,OAvCApb,EAAAob,GACAC,YA5CA,SAAAtjB,EAAA0K,GACA,IAAAgI,EAAA,IAAA0E,YAAApX,EAAA0K,GAEA,OAAAN,EAAAsI,EAAAhI,IA2CA6Y,QAvCA,SAAArS,EAAA/H,EAAA7D,EAAAke,GACA,OAAAljB,EAAA6I,GAAAA,EAAA/I,KAAA8Q,EAAA5L,EAAAke,GAAAra,GAwCAsa,eArCA,SAAApI,GACA,IACA1E,GADA0E,EAAAA,GAAAva,OAAAoB,SAAAF,MACA3C,MAAA,KACAuI,KAEA+O,EAAArX,OAAA,GACAqX,EAAA,GAAAtX,MAAA,KAAAY,QAAA,SAAAyjB,GACA,IAAAC,EAAAD,EAAArkB,MAAA,KACAuI,EAAA+b,EAAA,IAAAA,EAAA,KAGA,OAAA/b,GA4BAgc,QAxBA,SAAArjB,GAGA,OAAAsjB,WAAAtjB,IAAA,GAuBAujB,IAjBA,SAAAjkB,GACA,OAAAA,EAAAujB,OAAAvjB,EAAAujB,KAAAA,MAkBAW,IAAA,oBAAAjjB,OAAAA,OAAAijB,KAAAjjB,OAAAkjB,UAAA,OAKA/b,EAAAob,EAAAhZ,EAAAqF,EAAAwT,EAAArQ,EAAAnM,EAAA5D,EAAAgd,EAAAjd,GACA2K,WAAAA,EAEAqI,MAAAA,EAEAzI,SAAAA,EAEAwJ,QAAAA,EAEA2B,OAAAA,EAEA1L,MAAAA,EAEAkT,QAAAA,EAEAiB,SAAAA,EAEAmC,MAAAA,EAEA5H,IAAAA,IAIA5b,EAAA0jB,MAAAA,IAEApkB,OAAA,2BACA,uBACA,SAAAokB,GACA,OAAAA,IAGApkB,OAAA,+BACA,4BACA,2BACA,SAAAU,EAAA0jB,GAEA,IAAAY,EAAAtkB,EAAAskB,WAIA,OAAAA,IAEAhlB,OAAA,yBAAA,aAAA,SAAAU,GACA,OAAAA,EAAAukB,IAAAvkB,EAAAC,OAAA,kBAGAX,OAAA,6BACA,QACA,WACA,SAAAilB,EAAAb,GACA,aAEA,IAqBAc,EACAC,EAtBAzL,EAAA0K,EAAA9K,OAAAI,QAKA0L,GACAC,iBAAA,sBACAC,cAAA,gBACAC,YAAA,gCACAC,WAAA,iBAEAC,EAAA,KAGAC,EAAA,GAEAC,EAAA,GAEAC,KACAC,KAIAC,EAAA,qCAEA5L,EAAArY,OAAAqY,SACA6L,EAAA7L,EAAAmC,cAAA,OAEA2J,EAAAD,EAAAE,uBACAF,EAAAG,oBACAH,EAAAI,kBACAJ,EAAAC,gBAEAI,EAAAL,EAAAM,mBACAN,EAAAO,yBACAP,EAAAQ,sBACAR,EAAAS,oBAOAC,GALAvM,EAAAwM,gBACAxM,EAAAyM,wBACAzM,EAAA0M,qBACA1M,EAAA2M,iBAEAd,EAAAe,OAEA,IAAA,IAAAtmB,KAAAimB,EAAA,CACA,IAAAtM,EAAA3Z,EAAA6S,MAAA8R,GAAAW,GACA,GAAA3L,EAAA,CACAgL,IACAD,EAAA/K,EAAA,GACAgL,EAAA,IAAAjS,OAAA,KAAAgS,EAAA,UAEAA,EACAQ,EAAA,IAAAR,EAAAjkB,cAAA,IACA0kB,EAAAT,EAAAjkB,eAGA2kB,EAAAxB,EAAAjJ,WAAAhB,EAAA,KAAA3Z,EACA,IAAAumB,EAAA3C,EAAApJ,UAAAb,EAAA,IACA0L,EAAAkB,GAAArB,EAAAqB,EAEA3B,EAAA5kB,KACAilB,EAAAL,EAAA5kB,KA0DA,OArDAilB,QACA9hB,IAAA8iB,EAAA,aACAhB,EAAAL,EAAA,YAgBAhB,EAAApb,MAAA0Q,GACAgM,eAAAA,EAEAsB,OAAA,QAAA3M,KAAAxY,OAAA2Y,UAAAC,WAEAwM,uBATA,SAAAzmB,GACA,OAAAolB,EAAAplB,IAAAA,GAUA0mB,qBAfA,SAAA1mB,GACA,OAAAqlB,EAAArlB,IAAAA,GAgBA2mB,kBArBA,SAAA3mB,GACA,OAAAmlB,EAAAA,EAAAnlB,EAAAA,EAAAS,eAsBA+kB,gBAAAA,EAEAI,kBAAAA,EAEAM,eAAAN,EAEAnjB,SAAA,WACA,OAAApB,OAAAoB,UAGAmkB,aAMA3B,IACA/L,EAAA0N,QAAA5B,YACA6B,IAAA5B,IAIAM,EAAA,KAEAd,EAAAvL,QAAAA,IAGA1Z,OAAA,4BACA,QACA,WACA,SAAAilB,EAAAb,GACAniB,MAAAY,UAAAykB,MAAA,IACAtmB,EAAAiB,MAAAY,UAAA7B,QACA8Z,EAAAsJ,EAAAtJ,UACAE,EAAAoJ,EAAApJ,UAEA,SAAAuM,EAAA/mB,EAAAc,GACA,MAAA,iBAAAA,GAAAkmB,EAAAxM,EAAAxa,IAAAc,EAAAA,EAAA,KAGA,IAAAkmB,GACAC,eAAA,EACAC,QAAA,EACAC,cAAA,EACAC,cAAA,EACAC,QAAA,EACAC,UAAA,EACAC,KAAA,GAEAC,KAIA,SAAAC,EAAAznB,GACA,OAAAA,KAAAwnB,EACAA,EAAAxnB,GAAAwnB,EAAAxnB,GAAA,IAAA0S,OAAA,UAAA1S,EAAA,WASA,SAAA+I,EAAAoQ,EAAArY,GACA,IAAAsM,EAAA+L,EAAApQ,WAAA,GACA2e,EAAAta,QAAAjK,IAAAiK,EAAAua,QAEA,QAAAxkB,IAAArC,EAAA,OAAA4mB,EAAAta,EAAAua,QAAAva,EACAsa,EAAAta,EAAAua,QAAA7mB,EAAAqY,EAAApQ,UAAAjI,EAaA,IAAA8mB,KAiEA,SAAAC,EAAAC,GAKA,IAAAC,EAAAD,EAAAE,cAAAC,YAMA,OAJAF,GAAAA,EAAAG,SACAH,EAAA1mB,QAGA0mB,EAAAI,iBAAAL,GAgHA,IAAAM,EAAA,WACA,OAAAA,GAqBA,OAlBAxE,EAAApb,MAAA4f,GACAC,YAAA,EACAC,YAIAC,SA1JA,SAAAC,EAAAxoB,GACA,IAAAA,EAAA,OAAA0I,KACA,IACA+f,EADA9c,EAAA5C,EAAAyf,GAGAC,EADA7E,EAAAziB,SAAAnB,GACAA,EAAAJ,MAAA,QAEAI,EAWA,OATAyoB,EAAAjoB,QAAA,SAAA4M,GACA,IAAAsb,EAAAjB,EAAAra,GACAzB,EAAAkH,MAAA6V,KACA/c,IAAAA,EAAA,IAAA,IAAAyB,KAIArE,EAAAyf,EAAA7c,GAEAjD,MAyIAK,UAAAA,EACA4f,IAlHA,SAAAH,EAAAI,EAAA9nB,GACA,GAAAsH,UAAAvI,OAAA,EAAA,CACA,IACAgpB,EAAAhB,EAAAW,GACA,GAAA5E,EAAAziB,SAAAynB,GACA,OAAAJ,EAAAlC,MAAAhM,EAAAsO,KAAAC,EAAAC,iBAAAtO,EAAAoO,IACA,GAAAhF,EAAAliB,YAAAknB,GAAA,CACA,IAAA3d,KAIA,OAHAzK,EAAAG,KAAAioB,EAAA,SAAAle,GACAO,EAAAP,GAAA8d,EAAAlC,MAAAhM,EAAA5P,KAAAme,EAAAC,iBAAAtO,EAAA9P,MAEAO,GAIA,IAAA0d,EAAA,GACA,GAAA,iBAAA,EACA7nB,GAAA,IAAAA,EAGA6nB,EAAAnO,EAAAoO,GAAA,IAAA7B,EAAA6B,EAAA9nB,GAFA0nB,EAAAlC,MAAAyC,eAAAvO,EAAAoO,SAKA,IAAApjB,OAAAojB,OACAzlB,IAAAylB,EAAApjB,OAGAojB,EAAApjB,MAAA,IAAAojB,EAAApjB,KAGAmjB,GAAAnO,EAAAhV,KAAA,IAAAuhB,EAAAvhB,IAAAojB,EAAApjB,MAAA,IAFAgjB,EAAAlC,MAAAyC,eAAAvO,EAAAhV,OAQA,OADAgjB,EAAAlC,MAAA0C,SAAA,IAAAL,EACAjgB,MA+EAugB,SAnNA,SAAAT,EAAA1nB,GACA,GAAAsH,UAAAvI,OAAA,EACA,QAAA6I,KAAA+b,IAAAwE,SAKA,OAFAT,EAAAS,SAAAnoB,EAEA4H,MA6MAwgB,SAxEA,SAAAV,EAAAxoB,GACA,IAAA0oB,EAAAjB,EAAAznB,GACA,OAAAwoB,EAAAzf,WAAAyf,EAAAzf,UAAA8J,MAAA6V,IAuEAS,KAzKA,SAAAX,GAEA,OADAJ,EAAAO,IAAAH,EAAA,UAAA,QACA9f,MAwKA0gB,YAlLA,SAAAZ,GACA,MAAA,QAAAJ,EAAAO,IAAAH,EAAA,YAAA,GAAAJ,EAAAO,IAAAH,EAAA,YAkLAa,YAjEA,SAAAb,EAAAxoB,GACA,GAAAA,EAAA,CACA,IAAA2L,EAAA5C,EAAAyf,IAGA5E,EAAAziB,SAAAnB,GACAA,EAAAJ,MAAA,QAEAI,GAGAQ,QAAA,SAAA4M,GACA,IAAAsb,EAAAjB,EAAAra,GACAzB,EAAAkH,MAAA6V,KACA/c,EAAAA,EAAA/E,QAAA8hB,EAAA,QAIA3f,EAAAyf,EAAA7c,EAAAoL,aAEAhO,EAAAyf,EAAA,IAGA,OAAA9f,MA2CA4gB,KA5LA,SAAAd,GACAJ,EAAAO,IAAAH,EAAA,UAAA,IACA,QAAAJ,EAAAO,IAAAH,EAAA,YACAJ,EAAAO,IAAAH,EAAA,UAnBA,SAAAe,GACA,IAAAC,EAAAC,EACA7B,EAAA2B,KACAC,EAAA9P,SAAAmC,cAAA0N,GACA7P,SAAAgQ,KAAAC,YAAAH,GACAC,EAAA5B,EAAA2B,GAAAV,iBAAA,WACAU,EAAAI,WAAAC,YAAAL,GACA,QAAAC,IAAAA,EAAA,SACA7B,EAAA2B,GAAAE,GAEA,OAAA7B,EAAA2B,GASAO,CAAAtB,EAAAe,WAEA,OAAA7gB,MAwLAqhB,YAnCA,SAAAvB,EAAAxoB,EAAA4N,GACA,IAAAiG,EAAAnL,KAYA,OAXA1I,EAAAJ,MAAA,QAAAY,QAAA,SAAA4M,QACAjK,IAAAyK,IACAA,GAAAiG,EAAAqV,SAAAV,EAAApb,IAEAQ,EACAiG,EAAA0U,SAAAC,EAAApb,GAEAyG,EAAAwV,YAAAb,EAAApb,KAIAyG,KAyBA4Q,EAAA2D,OAAAA,IAEA5oB,OAAA,2BACA,QACA,UACA,YACA,YACA,SAAAilB,EAAAb,EAAA1K,EAAAkP,GACA,IAAA5B,IAAAxM,UAAAC,UAAApH,MAAA,eAAAmH,UAAAC,UAAApH,MAAA,SACAmX,EAAA,qBACAC,EAAA,6BACAC,EAAAxQ,SAAAmC,cAAA,OACAsO,EAAAzQ,SAAAmC,cAAA,SACAuO,EAAA1Q,SAAAmC,cAAA,SACAwO,EAAA3Q,SAAAmC,cAAA,MACAyO,GACAC,GAAAH,EACAI,MAAAL,EACAM,MAAAN,EACAO,MAAAP,EACAQ,GAAAN,EACAO,GAAAP,EACAQ,IAAAX,GAEAY,EAAA,mBACAzlB,EAAA5D,MAAAY,UAAAgD,IACAb,EAAA/C,MAAAY,UAAAmC,MAEA,SAAAumB,EAAAC,EAAAC,GASA,OARArH,EAAAliB,YAAAspB,KACAA,GAAAA,IAEAC,IACAD,EAAA3lB,EAAA1E,KAAAqqB,EAAA,SAAA7R,GACA,OAAAA,EAAA+R,WAAA,MAGAtH,EAAA9f,QAAAknB,GA2DA,SAAAG,EAAAhS,EAAAiS,EAAAH,GAGA,IAFA,IAAArB,EAAAzQ,EACA6R,EAAAD,EAAAK,EAAAH,GACAlrB,EAAA,EAAAA,EAAAirB,EAAAnrB,OAAAE,IACA6pB,EAAAD,YAAAqB,EAAAjrB,IAEA,OAAA2I,KA+BA,SAAAmT,EAAAwP,EAAApgB,EAAAC,GACA,IAAAiO,EAAAO,SAAAmC,cAAAwP,GACA,GAAApgB,EACA,IAAA,IAAAjL,KAAAiL,EACAkO,EAAAmS,aAAAtrB,EAAAiL,EAAAjL,IAMA,OAHAkL,GACAigB,EAAAjgB,EAAAiO,GAEAA,EAuJA,IAAAoS,EAAA,0EAmCA,SAAAC,EAAArS,EAAAjO,EAAAugB,GACA,GAAAA,EACA,OAAAtS,EAAAyQ,aAAA1e,EAEA,GAAAwO,SAAAgS,gBAAAC,SACA,OAAAzgB,EAAAygB,SAAAxS,GAEA,KAAAA,GAAA,CACA,GAAAjO,IAAAiO,EACA,OAAA,EAGAA,EAAAA,EAAAyQ,WAGA,OAAA,EAuBA,SAAAgC,EAAApD,GACA,OAAAA,EAIA,GAAAA,EAAAxnB,SACAwnB,EAGAA,EAAAR,cAPAtO,SA4PA,SAAAmS,IACA,OAAAA,EA4EA,OAzEAjI,EAAApb,MAAAqjB,GACAC,OAjkBA,SAAAC,GAEA,IAAAC,EADAD,EAAAA,GAAArS,SAKA,IACAsS,EAAAD,EAAAE,cACA,MAAA7W,GACA4W,EAAAD,EAAArC,KAMAsC,IACAA,EAAAD,EAAArC,MAMAsC,EAAAzC,WACAyC,EAAAD,EAAArC,MAGA,OAAAsC,GAyiBAE,KAAA,SAAAF,GACAA,EAAAE,QAGAxC,KAAA,WACA,OAAAhQ,SAAAgQ,MAGAvgB,MA3cA,SAAAgQ,EAAApR,GACA,IACAoB,EADA0K,EAAAnL,KAIA,IAAA8d,GAAA,IAAArN,EAAAnY,UAAA+G,EACA,OAAAoR,EAAA+R,UAAAnjB,GAIA,IAAAA,EAQA,OAPAoB,EAAAuQ,SAAAmC,cAAA1C,EAAAoQ,UAGAhgB,KAAAsK,EAAAsY,WAAAhT,GAAA,SAAA4I,GACAlO,EAAAuY,UAAAjjB,EAAA4Y,EAAAwH,SAAA1V,EAAAwY,UAAAlT,EAAA4I,EAAAwH,aAGApgB,GA0bAmjB,SArgBA,SAAA9D,GACA,GAjFA,SAAAA,EAAA+D,GACA,IAAAvsB,EAAAwoB,EAAAe,UAAAf,EAAAe,SAAA9oB,cACA,QAAA0C,IAAAopB,EACA,OAAAvsB,IAAAusB,EAAA9rB,cAEA,OAAAT,EA4EAupB,CAAAf,EAAA,UACA,OAAAA,EAAAgE,gBAEA,OAAAhE,EAAAiE,YAmgBA5Q,cAAAA,EAEA6Q,eA3eA,SAAA5P,GAGA,GADAA,EAAA8G,EAAA7M,KAAA+F,GACAmN,EAAAnjB,KAAAgW,GACA,OAAAjB,EAAAnJ,OAAAia,KAGA,IAAA3sB,EAAAgqB,EAAAljB,KAAAgW,IAAApK,OAAAia,GACA3sB,KAAAsqB,IACAtqB,EAAA,KAEA,IAAA4sB,EAAAtC,EAAAtqB,GAQA,OAPA4sB,EAAAC,UAAA,GAAA/P,GACA2H,EAAAjgB,EAAA7D,KAAAisB,EAAAH,aAEAjsB,QAAA,SAAA2Y,GACAyT,EAAA/C,YAAA1Q,KAGAsL,GA0dAkH,SAvbA,SAAAxS,EAAA2T,GACA,OAAAtB,EAAAsB,EAAA3T,IAwbA4T,eAhbA,SAAA1a,GACA,OAAAqH,SAAAqT,eAAA1a,IAibA0Z,IA3aA,WACA,OAAArS,UA4aAsT,MAraA,SAAA7T,GACA,KAAAA,EAAA8T,iBAAA,CACA,IAAAH,EAAA3T,EAAA+T,WACA/T,EAAA0Q,YAAAiD,GAEA,OAAApkB,MAkaAykB,WA7ZA,SAAAnB,GACA,IAAA,IAAAA,EACA9S,EAAAkU,eAAA3kB,MAAAiR,cACA,CAAA,IAAAsS,EAIA,OACAtS,SAAA2T,mBACA3T,SAAA4T,yBACA5T,SAAA6T,sBACA7T,SAAA8T,oBAPAtU,EAAA0M,kBAAAnd,MAAAujB,GACAA,IA0ZAyB,UA7YA,SAAAjE,EAAAkE,GACA,IAAAroB,EAAAsoB,EAAAC,EAAAC,EAAAC,EACAvE,EAAAC,EAAAD,SAAA9oB,cAEA,GAAA,SAAA8oB,EAGA,OAFAlkB,EAAAmkB,EAAAI,WACA+D,EAAAtoB,EAAArF,QACAwpB,EAAAjnB,OAAAorB,GAAA,QAAAtoB,EAAAkkB,SAAA9oB,kBAGAmtB,EAAAG,EAAA,gBAAAJ,EAAA,OACA9tB,OAAA,GAAA+tB,EAAAI,GAAA,aAGA,0CAAAlnB,KAAAyiB,IACAsE,GAAArE,EAAAP,YAQA6E,EAAAC,EAAAvE,GAAAyE,QAAA,YAAA,MAEAJ,GAAAC,EAAA7E,UAIA4E,EADA,MAAAtE,GACAC,EAAAjnB,MAEAmrB,EAGA,OAAAG,GAAAE,EAAAvE,GAAAwE,GAAA,aAAAE,QAAAH,EAAAvE,KA6WA1M,KAlWA,SAAA3D,EAAA2D,GACA,QAAA3Z,IAAA2Z,EACA,OAAA3D,EAAA0T,UAOA,GALAnkB,KAAAskB,MAAA7T,GACA2D,EAAAA,GAAA,GACA8G,EAAAziB,SAAA2b,KACAA,EAAAA,EAAAlW,QAAA2kB,EAAA,cAEA3H,EAAAziB,SAAA2b,IAAA8G,EAAA3iB,SAAA6b,GACA3D,EAAA0T,UAAA/P,OACA,GAAA8G,EAAAliB,YAAAob,GACA,IAAA,IAAA/c,EAAA,EAAAA,EAAA+c,EAAAjd,OAAAE,IACAoZ,EAAAwQ,YAAA7M,EAAA/c,SAGAoZ,EAAAwQ,YAAA7M,IAoVA0O,UAAAA,EAEA3pB,WApTA,SAAAsX,GACA,OAAA,MAAAA,GAAAA,EAAAnY,UAAAmY,EAAArX,eAqTAqsB,aA9SA,SAAAhV,GACA,OAAAA,IAAAO,SAAAgQ,MAAAhQ,SAAAgQ,KAAAiC,SAAAxS,IA+SA/X,SAAAwiB,EAAAxiB,SAEAgtB,aA7PA,SAAA5F,GACA,IAAAtd,EAAAsd,EAAA4F,cAAA1U,SAAAgQ,KACA,KAAAxe,IAAA4f,EAAAhkB,KAAAoE,EAAAqe,WAAA,UAAAnB,EAAAO,IAAAzd,EAAA,aACAA,EAAAA,EAAAkjB,aAEA,OAAAljB,GA0PA0gB,SAAAA,EAEAyC,YA9RA,SAAA7F,GACA,IAAAuD,EAAAH,EAAApD,GACA,OAAAuD,EAAA9D,aAAA8D,EAAAuC,cA8RA3d,MAjlBA,SAAAwI,EAAAiS,EAAAH,GACA,IACA/f,GADAqjB,EAAApV,GACAyQ,WACA,GAAA1e,EAIA,IAHA,IAAA8f,EAAAD,EAAAK,EAAAH,GACAsD,EAAAA,EAAAC,YAEAzuB,EAAA,EAAAA,EAAAirB,EAAAnrB,OAAAE,IACAwuB,EACArjB,EAAAujB,aAAAzD,EAAAjrB,GAAAwuB,GAEArjB,EAAAye,YAAAqB,EAAAjrB,IAIA,OAAA2I,MAokBA8H,OAxjBA,SAAA2I,EAAAiS,EAAAH,GACA,IAAAsD,EAAApV,EACAjO,EAAAqjB,EAAA3E,WACA,GAAA1e,EAEA,IADA,IAAA8f,EAAAD,EAAAK,EAAAH,GACAlrB,EAAA,EAAAA,EAAAirB,EAAAnrB,OAAAE,IACAmL,EAAAujB,aAAAzD,EAAAjrB,GAAAwuB,GAGA,OAAA7lB,MAijBAgmB,QAzRA,SAAAvV,EAAAiS,EAAAH,GAIA,IAHA,IAAArB,EAAAzQ,EACAoV,EAAA3E,EAAAsD,WACAlC,EAAAD,EAAAK,EAAAH,GACAlrB,EAAA,EAAAA,EAAAirB,EAAAnrB,OAAAE,IACAwuB,EACA3E,EAAA6E,aAAAzD,EAAAjrB,GAAAwuB,GAEA3E,EAAAD,YAAAqB,EAAAjrB,IAGA,OAAA2I,MAgRAyiB,OAAAA,EAEAtb,OA1OA,SAAAsJ,GACA,GAAAA,GAAAA,EAAAyQ,WACA,IACAzQ,EAAAyQ,WAAAC,YAAA1Q,GACA,MAAAlG,GACA0b,QAAAC,KAAA,8BAAA3b,GAGA,OAAAvK,MAoOAmhB,YAjOA,SAAA1Q,EAAA0V,GACAjL,EAAAliB,YAAAmtB,KACAA,GAAAA,IAEA,IAAA,IAAA9uB,EAAA,EAAAA,EAAA8uB,EAAAhvB,OAAAE,IACAoZ,EAAA0Q,YAAAgF,EAAA9uB,IAGA,OAAA2I,MA2NA9B,QAjMA,SAAAuS,EAAA2V,GAEA,OADAA,EAAAlF,WAAAmF,aAAA5V,EAAA2V,GACApmB,MAiMAsmB,MAzLA,SAAAxG,EAAArgB,GAEA,IAKA8mB,EALApb,EAAAnL,KACA2J,GAFAlK,EAAAA,OAEAkK,KAEA6c,GADA/mB,EAAAme,MACAne,EAAA+mB,MACA3pB,EAAA4C,EAAA5C,SAGA4pB,EAAAzmB,KAAAmT,cAAA,OACAuT,MAAAjnB,EAAAY,WAAA,aAKAimB,GA1FA,SAAAxG,EAAArgB,GACA,IAAAknB,EAAAxT,EAAA,MAAA1T,GACAigB,EAAAO,IAAA0G,GACAC,SAAA,WACAC,IAAA,EACAC,KAAA,EACAC,MAAA,OACAC,OAAA,OACAC,OAAA,WACAtI,QAAA,KAEAmB,EAAAmB,YAAA0F,GA4EAO,CAAAT,GACAC,MAAA,iBAEA1mB,KAAAmT,cAAA,OACAuT,MAAA,WAEAS,EAAAnnB,KAAAqkB,eAAA1a,GAAA,IACAxC,EAAA,WACAof,IACAvd,aAAAud,GACAA,EAAA,MAEAE,IACAtb,EAAAhE,OAAAsf,GACAA,EAAA,OAQAhnB,EAAAme,OACA8B,EAAAO,IAAAwG,EAAAhnB,EAAAme,OAEA0I,EAAArF,YAAAkG,GACAV,EAAAxF,YAAAqF,GACAxG,EAAAmB,YAAAwF,GAKAD,IACAD,EAAAtd,WALA,WACA9B,IACAtK,GAAAA,KAGA2pB,IAGA,OACArf,OAAAA,EACAwR,OArBA,SAAAlZ,GACAA,GAAAA,EAAAkK,MAAA8c,IACAU,EAAAC,UAAA3nB,EAAAkK,SA4JA0d,SA/HA,SAAAA,EAAA5W,EAAA/T,GACAA,EAAA+T,GACA,IAAA,IAAApZ,EAAA,EAAA+X,EAAAqB,EAAAsT,WAAA5sB,OAAAE,EAAA+X,EAAA/X,IACAgwB,EAAA5W,EAAAsT,WAAA1sB,GAAAqF,GAEA,OAAAsD,MA4HA2S,QArHA,SAAAlC,GAEA,IADA,IAAA+T,EAAA/T,EAAA+T,WACAntB,EAAAoZ,EAAA0V,SAAAhvB,OAAA,EAAAE,EAAA,EAAAA,IACA,GAAAA,EAAA,EAAA,CACA,IAAA+sB,EAAA3T,EAAA0V,SAAA9uB,GACAoZ,EAAAsV,aAAA3B,EAAAI,KAkHA8C,QAxGA,SAAA7W,EAAA8W,GACArM,EAAAziB,SAAA8uB,KACAA,EAAAvnB,KAAAgkB,eAAAuD,GAAA/C,YAEA/T,EAAAyQ,WAAA6E,aAAAwB,EAAA9W,GACA8W,EAAAtG,YAAAxQ,IAqGA+W,aA7FA,SAAA/W,EAAA8W,GACA,IAAAxD,EAAAjoB,EAAA7D,KAAAwY,EAAAsT,YACAtT,EAAAwQ,YAAAsG,GACA,IAAA,IAAAlwB,EAAA,EAAAA,EAAA0sB,EAAA5sB,OAAAE,IACAkwB,EAAAtG,YAAA8C,EAAA1sB,IAEA,OAAA2I,MAyFAynB,OAlFA,SAAAhX,GACA,IAAAjO,EAAAiO,EAAAyQ,WACA,GAAA1e,EAAA,CACA,GAAAxC,KAAA0nB,MAAAllB,EAAA0e,YAAA,OACA1e,EAAA0e,WAAA6E,aAAAtV,EAAAjO,OAiFAuZ,EAAAoH,MAAAA,IAEArsB,OAAA,4BACA,QACA,UACA,YACA,WACA,SAAAilB,EAAAb,EAAA1K,EAAA2S,EAAAwE,GACA,IAAAC,KACAhtB,EAAA7B,MAAAY,UAAAiB,OACAkB,EAAA/C,MAAAY,UAAAmC,MACA+rB,EAAArX,EAAAsM,iBAUA,WAEA,IAAA/N,EACA+Y,EACAC,EACAC,EAyDAC,EAxDApiB,KACAqiB,KACAC,EAAA,MAEA7Z,EAAA,SAAA8Z,EAAAC,GACA,GAAA,MAAAD,EAAA,OAAA,KACA,IAAA,IAAAA,EAAAE,MAAA,OAAAF,EACAA,GAAA,GAAAA,GAAAlqB,QAAA,aAAA,IAEA,IAAAqqB,GADAP,IAAAK,GACAH,EAAAriB,EACA,GAAA0iB,EAAAH,GAAA,OAAAG,EAAAH,GAUA,IATArZ,GACAuZ,OAAA,EACAE,eACAC,IAAAL,EACAzV,QAAA,WACA,OAAArE,EAAAtO,KAAAyoB,KAAA,KAGAX,GAAA,EACAM,IAAAA,EAAAA,EAAAlqB,QAAAwqB,EAAAC,MAEA,OADA5Z,EAAA5X,OAAA4X,EAAAyZ,YAAArxB,OACAoxB,EAAAxZ,EAAA0Z,KAAA,EAAA9V,EAAA5D,GAAAA,GAGA6Z,EAAA,SAAAC,GACA,MAAA,MAAAA,EAAA,IACA,MAAAA,EAAA,IACA,KAAAzqB,KAAAyqB,GAAAA,EAAA3qB,QAAA,KAAA,IACA,IAAA2qB,GAGAlW,EAAA,SAAAyV,GAEA,IADA,IAAAI,EAAAJ,EAAAI,YACAnxB,EAAA,EAAAA,EAAAmxB,EAAArxB,OAAAE,IAAA,CAQA,IAPA,IAAAyxB,EAAAN,EAAAnxB,GACA0xB,GACAC,SACArG,IAAA,IACAkG,WAAAD,EAAAE,EAAA,GAAAD,aAGAttB,EAAA,EAAAA,EAAAutB,EAAA3xB,OAAAoE,IAAA,CACA,IAAA0tB,EAAAH,EAAAvtB,GACA0tB,EAAAL,oBAAAK,EAAAL,kBAAA,KACAK,EAAAJ,WAAAI,EAAAL,yBACAK,EAAAL,kBAGAE,EAAAnW,UAAAnX,KAAAutB,GAEA,OAAAX,GAGAhe,GAEA6d,EAAA,kCAEA,SAAAiB,GACA,OAAAA,EAAAhrB,QAAA+pB,EAFA,QAMAS,EAAA,IAAA1e,OACA,0QACA9L,QAAA,eAAA,IAAAkM,EAAA,sBAAA,KACAlM,QAAA,aAAA,8CACAA,QAAA,cAAA,gDAGA,SAAAyqB,EACAQ,EAEAC,EACAP,EACAQ,EAEAC,EACA3iB,EACAtG,EAEAkpB,EACAC,EACAC,EACAC,EAEAC,EACAC,EACAC,EACAC,EACAC,GAEA,IAAAX,IAAA,IAAAtB,KACA/Y,EAAAyZ,cAAAV,MACAC,GAAA,EACAqB,GAAA,MAAA,GAGA,GAAAP,GAAAQ,IAAA,IAAAtB,EAAA,CACAc,EAAAA,GAAA,IACA,IAAAmB,EAAAjb,EAAAyZ,YAAAV,GACAE,GAAAgC,EAAAjC,KACAiC,EAAAjC,GAAAa,kBAAAA,EAAAC,IACAmB,IAAAjC,IACAc,WAAAA,EACAlG,IAAA,KAIA,IAAAsH,EAAAlb,EAAAyZ,YAAAV,GAAAC,GAEA,GAAAuB,EACAW,EAAAtH,IAAA2G,EAAAprB,QAAAiqB,EAAA,SAEA,GAAAxhB,EACAsjB,EAAAtjB,GAAAA,EAAAzI,QAAAiqB,EAAA,SAEA,GAAA9nB,EACAA,EAAAA,EAAAnC,QAAAiqB,EAAA,IAEA8B,EAAAC,YAAAD,EAAAC,cACAD,EAAAE,UAAAF,EAAAE,YACAF,EAAAC,UAAA1uB,KAAA6E,GACA4pB,EAAAE,QAAA3uB,MACApD,MAAAiI,EACAqoB,OAAA,IAAA1e,OAAA,UAAAI,EAAA/J,GAAA,kBAGA,GAAAupB,EAEAG,GADAA,EAAAA,GAAAD,GACAC,EAAA7rB,QAAAiqB,EAAA,IAAA,KAEA8B,EAAAG,UAAAH,EAAAG,YACAH,EAAAG,QAAA5uB,MACAsB,IAAA8sB,EAAA1rB,QAAAiqB,EAAA,IACA/vB,MAAA2xB,EACAlyB,KAAA,GAAA8xB,EAAAxyB,OAAA,QAAA,iBAGA,GAAAoyB,EAAA,CAIA,IAAAnrB,EAAAsqB,EAEA,OALAa,EAAAA,EAAArrB,QAAAiqB,EAAA,IACAuB,GAAAA,GAAA,IAAAxrB,QAAAiqB,EAAA,IAIAqB,GACA,IAAA,KACAd,EAAA,IAAA1e,OAAA,IAAAI,EAAAsf,IACA,MACA,IAAA,KACAhB,EAAA,IAAA1e,OAAAI,EAAAsf,GAAA,KACA,MACA,IAAA,KACAhB,EAAA,IAAA1e,OAAA,UAAAI,EAAAsf,GAAA,WACA,MACA,IAAA,KACAhB,EAAA,IAAA1e,OAAA,IAAAI,EAAAsf,GAAA,SACA,MACA,IAAA,IACAtrB,EAAA,SAAAhG,GACA,OAAAsxB,GAAAtxB,GAEA,MACA,IAAA,KACAgG,EAAA,SAAAhG,GACA,OAAAA,GAAAA,EAAA6D,QAAAytB,IAAA,GAEA,MACA,IAAA,KACAtrB,EAAA,SAAAhG,GACA,OAAAsxB,GAAAtxB,GAEA,MACA,QACAgG,EAAA,SAAAhG,GACA,QAAAA,GAIA,IAAAsxB,GAAA,WAAAtrB,KAAAorB,KAAAprB,EAAA,WACA,OAAA,IAGAA,IAAAA,EAAA,SAAAhG,GACA,OAAAA,GAAAswB,EAAAtqB,KAAAhG,KAGA6xB,EAAAnR,aAAAmR,EAAAnR,eACAmR,EAAAnR,WAAAtd,MACAsB,IAAAysB,EACAc,SAAAb,EACApxB,MAAAsxB,EACAtrB,KAAAA,IAKA,MAAA,GAKA,IAAAkqB,EAAAtoB,KAAAsoB,UAEAA,EAAAha,MAAA,SAAA8Z,GACA,OAAA9Z,EAAA8Z,IAGAE,EAAAle,aAAAA,EAEApK,KAAAsoB,QAAAtoB,KAAAsoB,MAAAA,KAEAvoB,MAAA6nB,GAGA,IAEA0C,EAAA,sCACAC,EAAA,SACAzuB,EAAA/C,MAAAY,UAAAmC,MAGA8rB,EAAA4C,cAAA5C,EAAAU,MAAAha,MAGA,IAAA8b,EAAAxC,EAAAwC,SAEAK,OAAA,SAAArL,GACA,IAAA9nB,EAAA8nB,EAAAyB,SAAA9oB,cACA,MAAA,UAAAT,GAAA,WAAA8nB,EAAAvnB,MAAA,WAAAP,GAGAozB,QAAA,SAAA5K,GACA,QAAAA,EAAA4K,SAGAzH,SAAA,SAAAnD,EAAA3iB,EAAAmlB,EAAA3Y,GACA,GAAA0b,EAAArlB,MAAA2J,OAAA1N,QAAA0N,IAAA,EAAA,OAAA3J,MAGAugB,SAAA,SAAAT,GACA,QAAAA,EAAAS,UAGAoK,QAAA,SAAA7K,GACA,OAAAA,EAAAS,UAGA/hB,GAAA,SAAAshB,EAAA3iB,EAAAmlB,EAAAlqB,GACA,OAAA+E,GAAA/E,GAGAwyB,KAAA,SAAA9K,EAAA3iB,EAAAmlB,EAAAlqB,GACA,OAAA+E,EAAA,GAAA,GAGA0tB,MAAA,SAAA/K,GACA,OAAA9O,SAAAuS,gBAAAzD,IAAAA,EAAAjmB,MAAAimB,EAAAjoB,MAAAioB,EAAAgL,WAGA/F,UAAA,SAAAjF,GACA,OAAAqD,EAAA4B,UAAAjF,EAAA,MAAAA,EAAAgL,WAGAnvB,MAAA,SAAAmkB,EAAA3iB,GACA,OAAA,IAAAA,GAGA4tB,GAAA,SAAAjL,EAAA3iB,EAAAmlB,EAAAlqB,GACA,OAAA+E,EAAA/E,GAGA6G,IAAA,SAAA6gB,EAAA3iB,EAAAmlB,EAAA0I,GACA,OAAAC,EAAAnL,EAAAkL,IAIAE,OAAA,SAAA9L,GACA,OAAAmL,EAAAnsB,KAAAghB,EAAAyB,WAGAsK,OAAA,SAAArL,GACA,OAAA8H,EAAAwC,QAAA,QAAAtK,IAGAsL,MAAA,SAAAhM,GACA,OAAAkL,EAAAlsB,KAAAghB,EAAAyB,WAGAkI,KAAA,SAAAjJ,EAAA3iB,EAAAmlB,GACA,OAAAnlB,IAAAmlB,EAAAnrB,OAAA,GAGAk0B,GAAA,SAAAvL,EAAA3iB,EAAAmlB,EAAAlqB,GACA,OAAA+E,EAAA/E,GAGAkzB,IAAA,SAAAxL,EAAA3iB,EAAAmlB,EAAA0I,GACA,OAAAxkB,EAAAsZ,EAAAkL,IAGAO,IAAA,SAAAzL,EAAA3iB,EAAAmlB,EAAAlqB,GACA,OAAA+E,EAAA,GAAA,GAOAqF,OAAA,SAAAsd,GACA,QAAAA,EAAAoB,YAGAsK,SAAA,SAAA1L,GACA,QAAAA,EAAA0L,UAGAC,SAAA,SAAA3L,GACA,IAAA4L,EAAA5L,EAAAgL,SACA9F,EAAA,MAAA0G,EACA,QAAA1G,GAAA0G,GAAA,IAAAvI,EAAA4B,UAAAjE,QAAAkE,IAGArb,KAAA,SAAAmW,GACA,MAAA,SAAAA,EAAAjoB,MAGA2tB,QAAA,SAAA1F,GACA,OAAAA,EAAA6L,aAAA7L,EAAA6L,cAYA,SAAAC,EAAA/zB,GACA,OAAA,SAAAunB,GACA,IAAA9nB,EAAA8nB,EAAAyB,SAAA9oB,cACA,MAAA,UAAAT,GAAA8nB,EAAAvnB,OAAAA,GAIA,SAAAg0B,EAAAh0B,GACA,OAAA,SAAAunB,GACA,IAAA9nB,EAAA8nB,EAAAyB,SAAA9oB,cACA,OAAA,UAAAT,GAAA,WAAAA,IAAA8nB,EAAAvnB,OAAAA,GAKA,IAAAR,KAvBA,QAAA,KAAA,QAAAS,QAAA,SAAAwD,GACA8uB,EAAA9uB,GAAAwwB,eAAA,IAKA1B,EAAA,IAAAA,EAAA,IAkBA2B,OAAA,EACAC,UAAA,EACAC,MAAA,EACAnW,UAAA,EACAoW,OAAA,GAEA9B,EAAA/yB,GAAAu0B,EAAAv0B,GAEA,IAAAA,KACA80B,QAAA,EACAC,OAAA,GAEAhC,EAAA/yB,GAAAw0B,EAAAx0B,GAiWA,SAAAg1B,EAAA5b,EAAA7B,EAAA0d,GAGA,IAFA,IAAAjoB,KACAkoB,EAAAD,GAAApR,EAAAziB,SAAA6zB,IACA7b,EAAAA,EAAAyQ,aAAA,IAAAzQ,EAAAnY,UAAA,CACA,GAAAg0B,EACA,GAAAC,GACA,GAAA/lB,EAAAiK,EAAA6b,GACA,WAEA,GAAApR,EAAAliB,YAAAszB,IACA,GAAApR,EAAAlf,QAAAyU,EAAA6b,IAAA,EACA,WAEA,GAAA7b,GAAA6b,EACA,MAGAjoB,EAAA7I,KAAAiV,GAMA,OAHA7B,IACAvK,EAAAujB,EAAAhtB,OAAAyJ,EAAAuK,IAEAvK,EAiBA,SAAA8hB,EAAA1V,EAAA7B,GAGA,IAFA,IAAAmV,EAAAtT,EAAAsT,WACA1f,KACAhN,EAAA,EAAAA,EAAA0sB,EAAA5sB,OAAAE,IAAA,CACA,IAAAoZ,EAAAsT,EAAA1sB,GACA,GAAAoZ,EAAAnY,UACA+L,EAAA7I,KAAAiV,GAMA,OAHA7B,IACAvK,EAAAujB,EAAAhtB,OAAAyJ,EAAAuK,IAEAvK,EAgBA,SAAAmoB,EAAA1M,EAAAlR,GAEA,IACA,OAAA9S,EAAA7D,KAAA6nB,EAAA2M,iBAAA7d,IACA,MAAA8d,IAGA,OAAA9E,EAAAriB,MAAAua,EAAAlR,GAQA,SAAA+d,EAAA7M,EAAAlR,GAEA,IACA,OAAAkR,EAAA8M,cAAAhe,GACA,MAAA8d,IAGA,IAAApK,EAAAsF,EAAAriB,MAAAua,EAAAlR,GACA,OAAA0T,EAAAnrB,OAAA,EACAmrB,EAAA,GAEA,KASA,SAAA2I,EAAAnL,EAAAlR,GAKA,OAJAA,IACAA,EAAAkR,EACAA,EAAA9O,SAAAgQ,MAEAxa,EAAAsZ,EAAAlR,GACAkR,EAEA6M,EAAA7M,EAAAlR,GAuBA,SAAA4V,EAAA1E,EAAAlR,EAAAjT,GAGA,IAFA,IAAAooB,EAAAjE,EAAAiE,WACAtT,EAAAsT,EAAA,GACAtT,GAAA,CACA,GAAA,GAAAA,EAAAnY,SAAA,CACA,IAAAsW,GAAApI,EAAAiK,EAAA7B,GACA,OAAA6B,EAEA,GAAA9U,EACA,MAGA8U,EAAAA,EAAAqV,YAGA,OAAA,KASA,SAAA+G,EAAA/M,EAAAlR,EAAAma,GAGA,IAFA,IAAAhF,EAAAjE,EAAAiE,WACAtT,EAAAsT,EAAAA,EAAA5sB,OAAA,GACAsZ,GAAA,CACA,GAAA,GAAAA,EAAAnY,SAAA,CACA,IAAAsW,GAAApI,EAAAiK,EAAA7B,GACA,OAAA6B,EAEA,GAAAsY,EACA,MAGAtY,EAAAA,EAAAqc,gBAGA,OAAA,KAQA,SAAAtmB,EAAAsZ,EAAAlR,GACA,IAAAA,IAAAkR,GAAA,IAAAA,EAAAxnB,SACA,OAAA,EAGA,GAAA4iB,EAAAziB,SAAAmW,GAAA,CACA,IACA,OAAAiZ,EAAA5vB,KAAA6nB,EAAAlR,EAAA1Q,QAAA,iCAAA,cACA,MAAAwuB,IAGA,OAAA9E,EAAAzd,MAAA2V,EAAAlR,GACA,OAAAsM,EAAAliB,YAAA4V,GACAsM,EAAAlf,QAAA8jB,EAAAlR,IAAA,EACAsM,EAAA1hB,cAAAoV,GACAgZ,EAAAmF,MAAAjN,EAAAlR,GAEAkR,IAAAlR,EAWA,SAAAkX,EAAAhG,EAAAlR,EAAAoe,GAEA,IADA,IAAAvc,EAAAqP,EAAAgG,YACArV,GAAA,CACA,GAAA,GAAAA,EAAAnY,SAAA,CACA,IAAAsW,GAAApI,EAAAiK,EAAA7B,GACA,OAAA6B,EAEA,GAAAuc,EACA,MAGAvc,EAAAA,EAAAqV,YAEA,OAAA,KAQA,SAAAmH,EAAAnN,EAAAlR,GAGA,IAFA,IAAA6B,EAAAqP,EAAAgG,YACAzhB,KACAoM,GACA,GAAAA,EAAAnY,WACAsW,IAAApI,EAAAiK,EAAA7B,IACAvK,EAAA7I,KAAAiV,IAGAA,EAAAA,EAAAqV,YAEA,OAAAzhB,EAQA,SAAA7B,EAAAsd,EAAAlR,GACA,IAAA6B,EAAAqP,EAAAoB,WACA,OAAAzQ,GAAA7B,IAAApI,EAAAiK,EAAA7B,GAIA,KAHA6B,EAYA,SAAAqc,EAAAhN,EAAAlR,EAAAoe,GAEA,IADA,IAAAvc,EAAAqP,EAAAgN,gBACArc,GAAA,CACA,GAAA,GAAAA,EAAAnY,SAAA,CACA,IAAAsW,GAAApI,EAAAiK,EAAA7B,GACA,OAAA6B,EAEA,GAAAuc,EACA,MAGAvc,EAAAA,EAAAqc,gBAEA,OAAA,KAQA,SAAAI,EAAApN,EAAAlR,GAGA,IAFA,IAAA6B,EAAAqP,EAAAgN,gBACAzoB,KACAoM,GACA,GAAAA,EAAAnY,WACAsW,IAAApI,EAAAiK,EAAA7B,IACAvK,EAAA7I,KAAAiV,IAGAA,EAAAA,EAAAqc,gBAEA,OAAAzoB,EAQA,SAAA8oB,EAAArN,EAAAlR,GAGA,IAFA,IAAA6B,EAAAqP,EAAAoB,WAAAsD,WACAngB,KACAoM,GACA,GAAAA,EAAAnY,UAAAmY,IAAAqP,IACAlR,IAAApI,EAAAiK,EAAA7B,IACAvK,EAAA7I,KAAAiV,IAGAA,EAAAA,EAAAqV,YAEA,OAAAzhB,EAxpBAujB,EAAAwF,OAAA,SAAAC,GACA,IAEA1K,EACAhc,EACAwjB,EACArR,EACAsR,EANAkD,EAAA,GACAC,KAWA,IAHA5mB,EAAA0mB,EAAA1mB,MACA2mB,GAAA,IAAA3mB,GAEAwjB,EAAAkD,EAAAlD,QACA,IAAA,IAAA9yB,EAAA8yB,EAAAhzB,OAAAE,KACAi2B,GAAA,IAAAnD,EAAA9yB,GAAAe,MAGA,GAAA0gB,EAAAuU,EAAAvU,WACA,IAAA,IAAAzhB,EAAA,EAAAA,EAAAyhB,EAAA3hB,OAAAE,IACAyhB,EAAAzhB,GAAAgzB,SACAiD,GAAA,IAAAxU,EAAAzhB,GAAAyF,IAAAgc,EAAAzhB,GAAAgzB,SAAArY,KAAAI,UAAA0G,EAAAzhB,GAAAe,OAAA,IAEAk1B,GAAA,IAAAxU,EAAAzhB,GAAAyF,IAAA,IAIA,GAAAstB,EAAAiD,EAAAjD,QACA,IAAA/yB,EAAA+yB,EAAAjzB,OAAAE,KACAm2B,KAAApD,EAAA/yB,GACA2I,KAAAoqB,QAAAoD,KAAA1wB,KACAywB,EAAA/xB,KAAAgyB,WAEA/yB,IAAA+yB,KAAAp1B,QACAk1B,GAAA,IAAAE,KAAA1wB,IAAA,IAAAkV,KAAAI,UAAAob,OAgBA,OAVA7K,EAAA0K,EAAA1K,MACA,MAAAA,IACA2K,EAAA3K,EAAA9Q,cAAAyb,GAIAA,IACAA,EAAA,MAIAA,eAAAA,EACAC,cAAAA,IAKA3F,EAAAmF,MAAA,SAAAtc,EAAA4c,EAAAlwB,EAAAmlB,EAAAmL,GACA,IAAA9K,EACAhc,EACAwjB,EACArR,EACAsR,EAEA/yB,EAAAm2B,EAAAvqB,EAAAyqB,EAEA,IAAAD,EAAA,CACA,GAAA9K,EAAA0K,EAAA1K,IAAA,CACA,IAAA9B,EAAApQ,EAAAoQ,SAAAhP,cACA,GAAA,KAAA8Q,GACA,GAAA9B,EAAA,IAAA,OAAA,OAEA,GAAAA,IAAA8B,GAAA,IAAA9Q,cAAA,OAAA,EAIA,IAAAlL,EAAA0mB,EAAA1mB,KACA8J,EAAAkd,aAAA,OAAAhnB,EACA,OAAA,EAKA,GAAAwjB,EAAAkD,EAAAlD,QACA,IAAA9yB,EAAA8yB,EAAAhzB,OAAAE,KAEA,KADA4L,EAAAwN,EAAAkd,aAAA,YACAxD,EAAA9yB,GAAAqxB,OAAAtqB,KAAA6E,GAAA,OAAA,EAIA,GAAA6V,EAAAuU,EAAAvU,WACA,IAAAzhB,EAAAyhB,EAAA3hB,OAAAE,KAEA,IADAm2B,EAAA1U,EAAAzhB,IACAgzB,UAAAmD,EAAApvB,KAAAqS,EAAAkd,aAAAH,EAAA1wB,OAAA2T,EAAAmd,aAAAJ,EAAA1wB,KAAA,OAAA,EAKA,GAAAstB,EAAAiD,EAAAjD,QACA,IAAA/yB,EAAA+yB,EAAAjzB,OAAAE,KAEA,GADAm2B,EAAApD,EAAA/yB,GACAq2B,EAAA1tB,KAAAoqB,QAAAoD,EAAA1wB,MACA,IAAA2wB,GAAAC,EAAA5B,gBAAA2B,IAAAC,EAAA5B,iBACA4B,EAAAjd,EAAAtT,EAAAmlB,EAAAkL,EAAAp1B,OACA,OAAA,OAIA,IAAAq1B,IAAA5F,EAAA5vB,KAAAwY,EAAA+c,EAAA1wB,KACA,OAAA,EAKA,OAAA,GAGA8qB,EAAAzd,MAAA,SAAAsG,EAAA7B,GAEA,IAAAG,EAQA,KALAA,EADAmM,EAAAziB,SAAAmW,GACAgZ,EAAAU,MAAAha,MAAAM,GAEAA,GAIA,OAAA,EAIA,IAEAvX,EACAw2B,EAHArF,EAAAzZ,EAAAyZ,YACAsF,EAAA,EAGA,IAAAz2B,EAAA,EACAw2B,EAAArF,EAAAnxB,GAAAA,IACA,GAAA,GAAAw2B,EAAA12B,OAAA,CACA,IAAA2xB,EAAA+E,EAAA,GACA,GAAA7tB,KAAA+sB,MAAAtc,EAAAqY,GACA,OAAA,EAEAgF,IAIA,GAAAA,GAAA/e,EAAA5X,OACA,OAAA,EAGA,IACAmE,EADAgnB,EAAAtiB,KAAAuF,MAAAyL,SAAAjC,GAEA,IAAA1X,EAAA,EAAAiE,EAAAgnB,EAAAjrB,MACA,GAAAiE,IAAAmV,EACA,OAAA,EAGA,OAAA,GAIAmX,EAAAmG,aAAA,SAAAzL,EAAAwG,GACA,IAAAkF,EAAApzB,EAAA3C,KAAAqqB,EAAA,SAAA7R,EAAAtT,GACA,OAAAyqB,EAAAmF,MAAAtc,EAAAqY,EAAA3rB,EAAAmlB,GAAA,KAMA,OAHA0L,EAAApzB,EAAA3C,KAAA+1B,EAAA,SAAAvd,EAAAtT,GACA,OAAAyqB,EAAAmF,MAAAtc,EAAAqY,EAAA3rB,EAAA6wB,GAAA,MAKApG,EAAAhtB,OAAA,SAAA0nB,EAAA1T,GAGA,IAAAsM,EAAAziB,SAAAmW,GAGA,OAAAgZ,EAAAmG,aAAAzL,EAAA1T,GAIA,IACAvX,EACAw2B,EAFArF,EANAZ,EAAAU,MAAAha,MAAAM,GAMA4Z,YAGAnkB,KACA,IAAAhN,EAAA,EACAw2B,EAAArF,EAAAnxB,GAAAA,IAAA,CACA,GAAA,GAAAw2B,EAAA12B,OAOA,MAAA,IAAA0L,MAAA,0BAAA+L,GANA,IAAAka,EAAA+E,EAAA,GAEAG,EAAApG,EAAAmG,aAAAzL,EAAAwG,GAEAzkB,EAAA6W,EAAAhe,KAAAmH,EAAAhI,OAAA2xB,IAMA,OAAA3pB,GAIAujB,EAAAqG,QAAA,SAAAnO,EAAAoO,GACA,IAEAC,EAFAC,EAAAF,EAAArF,WACAwE,EAAAa,EAEA5L,KAEA,OAAA8L,GACA,IAAA,IACA9L,EAAA6D,EAAArG,EAAAuN,GACA,MACA,IAAA,KACAc,EAAArI,EAAAhG,EAAAuN,GAAA,KAEA/K,EAAA9mB,KAAA2yB,GAEA,MACA,IAAA,KACAA,EAAA3J,EAAA1E,EAAAuN,GAAA,KAEA/K,EAAA9mB,KAAA2yB,GAEA,MACA,IAAA,IACA7L,EAAA2K,EAAAnN,EAAAuN,GACA,MACA,IAAA,KACA,IAAAtT,EAAA+S,EAAAhN,EAAAuN,GAAA,GACAtlB,EAAA+d,EAAAhG,EAAAuN,GAAA,GACAtT,GACAuI,EAAA9mB,KAAAue,GAEAhS,GACAua,EAAA9mB,KAAAuM,GAEA,MACA,IAAA,KACAua,EAAA6K,EAAArN,EAAAuN,GACA,MACA,IAAA,IACA/K,EAAA+J,EAAAvM,EAAAuN,GACA,MACA,IAAA,MACAc,EAAA3rB,EAAAsd,EAAAuN,KAEA/K,EAAA9mB,KAAA2yB,GAEA,MACA,IAAA,KACA7L,EAAAwK,EAAAhN,EAAAuN,GAAA,GACA,MACA,IAAA,MACAc,EAAAtB,EAAA/M,EAAAuN,GAAA,KAEA/K,EAAA9mB,KAAA2yB,GAEA,MACA,IAAA,KACA7L,EAAA4K,EAAApN,EAAAuN,GACA,MACA,QACA,IAAAgB,EAAAruB,KAAAotB,OAAAc,GAEA,GADA5L,EAAAxmB,EAAA7D,KAAA6nB,EAAA2M,iBAAA4B,EAAAf,iBACAe,EAAAd,cACA,IAAA,IAAAl2B,EAAAg3B,EAAAd,cAAAp2B,OAAA,EAAAE,GAAA,EAAAA,IACAirB,EAAA1nB,EAAA3C,KAAAqqB,EAAA,SAAAhnB,EAAA6B,GACA,OAAAyqB,EAAAmF,MAAAzxB,GACA8uB,SAAAiE,EAAAd,cAAAl2B,KACA8F,EAAAmlB,GAAA,KAGAA,EAAA1nB,EAAA3C,KAAAqqB,EAAA,SAAAhnB,EAAA6B,GACA,OAAAyqB,EAAAmF,MAAAzxB,GACA8uB,SAAAiE,EAAAd,cAAAl2B,KACA8F,EAAAmlB,GAAA,KAOA,OAAAA,GAGAsF,EAAAriB,MAAA,SAAAkL,EAAA7B,EAAA0f,GAUA,IAPA,IAIAT,EAAAU,EAJAxf,EAAA/O,KAAAsoB,MAAAha,MAAAM,GAGA4f,KAEAhG,EAAAzZ,EAAAyZ,YAEAnxB,EAAA,EACAw2B,EAAArF,EAAAnxB,GAAAA,IAAA,CAGA,IAFA,IACAo3B,EADAC,GAAAje,GAEAlV,EAAA,EACAgzB,EAAAV,EAAAtyB,GAAAA,KACAkzB,EAAAvT,EAAAve,IAAA+xB,EAAA,SAAApzB,EAAAjE,GACA,OAAAuwB,EAAAqG,QAAA3yB,EAAAizB,QAGAG,EAAAD,GAGAA,IACAD,EAAAA,EAAAnyB,OAAAoyB,IAIA,OAAAD,GAgWA,IAAAG,EAAA,WACA,OAAAA,GA4CA,OAzCAzT,EAAApb,MAAA6uB,GAEAC,SA7VA,SAAAne,EAAA7B,EAAA0d,GACA,IAAAC,EAAAD,GAAApR,EAAAziB,SAAA6zB,GACA,KAAA7b,EAAAA,EAAAyQ,YAAA,CACA,GAAA1a,EAAAiK,EAAA7B,GACA,OAAA6B,EAEA,GAAA6b,EACA,GAAAC,GACA,GAAA/lB,EAAAiK,EAAA6b,GACA,WAEA,GAAA7b,GAAA6b,EACA,MAIA,OAAA,MA+UAD,UAAAA,EAEAwC,KA1SA,SAAAloB,EAAA0c,GAEA,OADAA,EAAAA,GAAAF,EAAAE,OACAyL,eAAAnoB,IA0SAwf,SAAAA,EAEAZ,QArRA,SAAA9U,EAAA7B,GACA,KAAA6B,IAAAjK,EAAAiK,EAAA7B,IACA6B,EAAAA,EAAAyQ,WAGA,OAAAzQ,GAkRAkc,WAAAA,EAEAH,YAAAA,EAEAvB,KAAAA,EAEA8D,QA5NA,SAAAjP,EAAAlR,GACAA,IACAA,EAAAkR,EACAA,EAAA9O,SAAAgQ,MAEA,OAAAwL,EAAA1M,EAAAlR,IAyNA4V,WAAAA,EAEAqI,UAAAA,EAEArmB,QAAAA,EAEAsf,YAAAA,EAEAmH,aAAAA,EAEAzqB,OAAAA,EAEAsqB,gBAAAA,EAEAI,iBAAAA,EAEA9C,QAAAxC,EAAAwC,QAEA+C,SAAAA,IAGApR,EAAA4S,OAAAA,IAEA73B,OAAA,2BACA,QACA,UACA,YACA,SAAAilB,EAAAb,EAAAyT,GACA,IAAAhyB,EAAA5D,MAAAY,UAAAgD,IACA/B,EAAA7B,MAAAY,UAAAiB,OACAgX,EAAAsJ,EAAAtJ,UACAG,EAAAmJ,EAAAnJ,iBAEAid,EAAA,WACAC,GACAnE,SAAA,WACAoE,SAAA,WACAC,IAAA,UACAzI,MAAA,YACA0I,UAAA,YACAC,YAAA,cACAC,YAAA,cACAC,QAAA,UACAC,QAAA,UACAC,OAAA,SACAC,YAAA,cACAC,gBAAA,mBA4BA,SAAAtW,EAAAyG,EAAAxoB,EAAAc,GACA,QAAAqC,IAAArC,EAaA,OADA0nB,EAAA8C,aAAAtrB,EAAAc,GACA4H,KAZA,GAAA,iBAAA1I,EAAA,CACA,IAAA,IAAAs4B,KAAAt4B,EACA+hB,EAAAyG,EAAA8P,EAAAt4B,EAAAs4B,IAEA,OAAA5vB,KAEA,OAAA8f,EAAA8N,cAAA9N,EAAA8N,aAAAt2B,GACAwoB,EAAA6N,aAAAr2B,QADA,EA0BA,SAAAu4B,EAAA/P,EAAAgQ,GACA,IAAAC,EAAAjQ,EAAA,SAIA,OAHAiQ,GAAAD,IACAC,EAAAjQ,EAAA,SAbA,SAAAA,GACA,IAAAiQ,KAMA,OALA7U,EAAAra,KAAAif,EAAAhH,eAAA,SAAAzhB,EAAAgiB,GACA,GAAAA,EAAA/hB,KAAA2E,QAAA,WACA8zB,EAAAne,EAAAyH,EAAA/hB,KAAA4G,QAAA,QAAA,MAAA6T,EAAAsH,EAAAjhB,UAGA23B,EAMAC,CAAAlQ,IAEAiQ,EAuBA,SAAAE,EAAAnQ,EAAAxoB,EAAAc,GACA,IAAA23B,EAAAF,EAAA/P,GAAA,GACAiQ,EAAAne,EAAAta,IAAAc,EAUA,SAAAwO,EAAAkZ,EAAAxoB,EAAAc,GAEA,QAAAqC,IAAArC,EAAA,CACA,GAAA,iBAAAd,EAAA,CACA,IAAA,IAAA44B,KAAA54B,EACA24B,EAAAnQ,EAAAoQ,EAAA54B,EAAA44B,IAEA,OAAAlwB,KAEA,OAzCA,SAAA8f,EAAAxoB,GACA,QAAAmD,IAAAnD,EACA,OAAAu4B,EAAA/P,GAAA,GAEA,IAAAiQ,EAAAF,EAAA/P,GACA,GAAAiQ,EAAA,CACA,GAAAz4B,KAAAy4B,EACA,OAAAA,EAAAz4B,GAEA,IAAA64B,EAAAve,EAAAta,GACA,GAAA64B,KAAAJ,EACA,OAAAA,EAAAI,GAGA,IAAAP,EAAA,QAAAt4B,EAAA4G,QAAA8wB,EAAA,OAAAj3B,cACA,OAAAshB,EAAAyG,EAAA8P,GA0BAQ,CAAAtQ,EAAAxoB,GAIA,OADA24B,EAAAnQ,EAAAxoB,EAAAc,GACA4H,KAQA,SAAAqwB,EAAAvQ,GACAA,EAAA,iBACAA,EAAA,SA6BA,SAAAwQ,EAAAhO,EAAApC,GACA,OAAAvjB,EAAA1E,KAAAqqB,EAAA,SAAAxC,GACA,OAAAA,EAAAI,KAuFA,SAAAqQ,IACA,OAAAA,EA2BA,OAjCA5B,EAAAvE,QAAAxjB,KAAA,SAAAwY,EAAA/nB,EAAA8S,EAAAqmB,GACA,QAAA5pB,EAAAwY,EAAAoR,GAAArmB,EAAA,KAQA+Q,EAAApb,MAAAywB,GACAE,KAvOA,SAAA3Q,EAAAxoB,EAAAc,GACA,OAAA4H,KAAAqZ,KAAAyG,EAAA,QAAAxoB,EAAAc,IAwOAihB,KAAAA,EAEAgX,UAAAA,EAEAzpB,KAAAA,EAEA0pB,MAAAA,EAEAtuB,KA5FA,SAAA8d,EAAAxoB,EAAAc,GAEA,OADAd,EAAA23B,EAAA33B,IAAAA,OACAmD,IAAArC,EACA0nB,EAAAxoB,IAEAwoB,EAAAxoB,GAAAc,EACA4H,OAwFA0wB,WA/EA,SAAA5Q,EAAAxoB,GAIA,OAHAA,EAAAJ,MAAA,KAAAY,QAAA,SAAAuhB,IA7KA,SAAAyG,EAAAxoB,EAAAc,GACA,MAAAA,EACA0nB,EAAA6Q,gBAAAr5B,GAEAwoB,EAAA8C,aAAAtrB,EAAAc,GA0KAwqB,CAAA9C,EAAAzG,KAEArZ,MA6EA4wB,WAhIA,SAAA9Q,EAAAC,GACA,GAAAA,EAAA,CACA7E,EAAAziB,SAAAsnB,KACAA,EAAAA,EAAA7oB,MAAA,QAEA,IAAA64B,EAAAF,EAAA/P,GAAA,GACAC,EAAAjoB,QAAA,SAAAR,UACAy4B,EAAAz4B,UAGA+4B,EAAAvQ,GAEA,OAAA9f,MAsHA6wB,WAtEA,SAAA/Q,EAAAxoB,GAIA,OAHAA,EAAAJ,MAAA,KAAAY,QAAA,SAAAkK,UACA8d,EAAA9d,KAEAhC,MAoEA2J,KA5DA,SAAAmW,EAAAgR,GACA,YAAAr2B,IAAAq2B,EACAhR,EAAAiR,aAEAjR,EAAAiR,YAAA,MAAAD,EAAA,GAAA,GAAAA,EACA9wB,OAyDAsZ,IAhDA,SAAAwG,EAAA1nB,GACA,QAAAqC,IAAArC,EAAA,CACA,GAAA0nB,EAAAkR,SAAA,CAEA,IAAAC,EAAAr2B,EAAA3C,KAAA02B,EAAA1D,KAAAnL,EAAA,UAAA,SAAAoR,GACA,OAAAA,EAAA1F,WAEA,OAAA8E,EAAAW,EAAA,SAEA,OAAAnR,EAAA1nB,MAIA,OADA0nB,EAAA1nB,MAAAA,EACA4H,QAsCA+b,EAAAwU,MAAAA,IAEAz5B,OAAA,6BACA,QACA,UACA,YACA,WACA,UACA,WACA,SAAAilB,EAAAb,EAAA1K,EAAAme,EAAAxL,EAAAoN,GACArV,EAAApb,MACAob,EAAAra,KACA9H,MAAAY,UAAAmC,MAFA,IAGA6f,EAAAT,EAAAS,IACAwV,EAAA,mCACAC,GACAC,eAAA,qBACAC,yBAAA,gCACAC,gBAAA,wBAEAC,EAAA,8BAEA,SAAAC,EAAAljB,EAAAnP,GAeA,OAdAA,GAAAmP,EAAAmjB,qBACAtyB,IACAA,EAAAmP,GAGA2M,EAAAra,KAAAuwB,EAAA,SAAA95B,EAAAyD,GACA,IAAA42B,EAAAvyB,EAAA9H,GACAiX,EAAAjX,GAAA,WAEA,OADA0I,KAAAjF,GAAAmgB,EAAA1R,WACAmoB,GAAAA,EAAA5xB,MAAAX,EAAAM,YAEA6O,EAAAxT,GAAAmgB,EAAAzR,eAGA8E,EAGA,SAAAD,EAAAC,GACA,IAAAC,GAAA,GAAAD,GAAArX,MAAA,KACA,OACAW,KAAA2W,EAAA,GACApX,GAAAoX,EAAA1S,MAAA,GAAAkK,OAAAkE,KAAA,MAKA,IAAAiR,EAAA,WACA,IAAAyW,GACAj5B,OAAA,YACAA,OAAA,iBACAA,OAAA,UACAA,OAAA,MACAA,OAAA,WACAA,OAAA,cACAA,OAAA,aACAA,OAAA,WACAA,OAAA,iBACAA,OAAA,gBACAA,OAAA,cACAA,OAAA,cACAA,OAAA,UACAA,OAAA,WACAA,OAAA,QACAA,OAAA,WACAA,OAAA,gBAEAk5B,GACAC,iBAAA,EACAC,eAAA,EACAC,kBAAA,EAEAC,WAAA,GACAC,UAAA,GACAC,YAAA,GACAvxB,KAAA,GACAwxB,IAAA,GACAC,MAAA,GAEAC,KAAA,EACAC,QAAA,EACAC,UAAA,EACAC,SAAA,EACAC,UAAA,EACAC,SAAA,EACAC,UAAA,EACAC,KAAA,EAEAxb,MAAA,EACAyb,OAAA,EACApmB,MAAA,EACAqmB,gBAAA,EACA5G,OAAA,EACAC,MAAA,EAEAvB,MAAA,EACArH,KAAA,EACAwP,QAAA,EACAC,SAAA,EAEAC,QAAA,EACAC,SAAA,EACAC,MAAA,EAEAC,QAAA,EAEAC,MAAA,EACAC,YAAA,EACAC,SAAA,EACAC,UAAA,EACAC,QAAA,EACAC,UAAA,EACAC,UAAA,EACAC,SAAA,EACAC,WAAA,EACAC,WAAA,EAGAC,UAAA,GAEAC,WAAA,GACAC,UAAA,GACAC,SAAA,GAEAC,KAAA,GACAC,OAAA,GACAC,OAAA,GACAC,OAAA,GACAC,OAAA,GAEAC,MAAA,IAWA,OAAA,SAAA58B,EAAA0K,GAGA2Y,EAAAziB,SAAAZ,GACA0K,EAAAA,MAGA1K,GADA0K,EAAA1K,OACAA,MAAA,GAEA,IAAAkX,EAAAT,EAAAzW,GACAA,EAAAkX,EAAAlX,KAEA0K,EAAA2Y,EAAApb,OACA40B,SAAA,EACAC,YAAA,GACApyB,GAEAwM,EAAA3X,KACAmL,EAAAqyB,UAAA7lB,EAAA3X,IAGA,IAAAwL,EA7BA,SAAA/K,GACA,IAAAsF,EAAA00B,EAAAh6B,GACAsF,IACAA,EAAA,GAEA,OAAAy0B,EAAAz0B,GAwBA03B,CAAAh9B,GACA0S,EAAA,IAAA3H,EAAA/K,EAAA0K,GAIA,OAFA2Y,EAAAjZ,UAAAsI,EAAAhI,GAEAkvB,EAAAlnB,IAxHA,GA4HA,SAAAuqB,EAAAp0B,EAAA6B,GACA,IAAAzF,EACAwM,GACAyrB,cAAAr0B,GAEA,IAAA5D,KAAA4D,EACA,kBAAA5D,GAAAq0B,EAAA/yB,KAAAtB,SAAArC,IAAAiG,EAAA5D,KACAwM,EAAAxM,GAAA4D,EAAA5D,IAMA,OAHAyF,GACA2Y,EAAApb,MAAAwJ,EAAA/G,GAEAkvB,EAAAnoB,EAAA5I,GAGA,IACAs0B,KACAC,EAAA,cAAAt8B,OACAkyB,GAAAA,MAAA,UAAArH,KAAA,YACA0R,GAAApB,WAAA,YAAAC,WAAA,YACAoB,EAAA,SAAAt9B,GACA,OAAAq9B,EAAAr9B,IAAAo9B,GAAApK,EAAAhzB,IAAAA,GAEAu9B,KACAC,EAAAna,EAAAxW,OACApC,KAAA,SAAAnD,EAAAoP,GACAvO,KAAAs1B,QAAAn2B,EACAa,KAAAu1B,OAAAhnB,EACAvO,KAAAw1B,cAGAtuB,IAAA,SAAAxK,EAAAgG,GACA,IAAA+yB,EAAAz1B,KAAAw1B,UACAE,GACAh5B,GAAAA,EACAgG,QAAAwY,EAAApb,SAAA4C,IAGA+yB,EAAAj6B,KAAAk6B,GAEA,IAAAvqB,EAAAnL,KACA,IAAAmL,EAAAwqB,UAAA,CACAxqB,EAAAwqB,UAAA,SAAAC,GACA,IAAA9V,EAAA9f,KACAuK,EAAAuqB,EAAAc,GACAp2B,EAAAo2B,EAAAC,MACAJ,EAAAtqB,EAAAqqB,UACAp+B,EAAAmT,EAAAqqB,UAGAp1B,EADA0b,EAAAhiB,UAAAsG,IACA+K,GAAAlO,OAAAmD,IAEA+K,GAGA2Q,EAAAra,KAAA40B,EAAA,SAAAt4B,EAAAu4B,GACA,IAAAvrB,EAAA2V,EACA,GAAAvV,EAAAurB,+BAAAvrB,EAAAurB,gCACA,OAAA,EAEA,IAAAp5B,EAAAg5B,EAAAh5B,GACAgG,EAAAgzB,EAAAhzB,YACAkM,EAAAlM,EAAAkM,SACAC,EAAAnM,EAAAmM,IACAjI,EAAAlE,EAAAkE,KAEA,IAAAxP,GAAAA,GAAAsL,EAAAtL,KAAA,IAAAsL,EAAAtL,GAAA6E,QAAA7E,GAAA,CAGA,GAAAwX,EAAA,CAEA,KADAzE,EAAAwkB,EAAApJ,QAAAhb,EAAApL,OAAAyP,KACAzE,IAAA2V,EAMA,OALA5E,EAAApb,MAAAyK,GACAwrB,cAAA5rB,EACA6rB,UAAAlW,IAOA,IAAAiV,EAAA5pB,EAAAoqB,OACA,GAAAR,KAAAG,EAAA,CACA,IAAAe,EAAA1rB,EAAA2rB,cACA,GAAAD,IAAAA,IAAA9rB,GAAAgZ,EAAAF,SAAA9Y,EAAA8rB,IACA,OAIA/a,EAAAhiB,UAAA0N,KACA2D,EAAA3D,KAAAA,GAGAiI,GACA1D,EAAAhE,OAAAzK,EAAAgG,GAGA,IAAArH,EAAAqB,EAAAqD,MAAAoK,EAAA3K,IAEA,IAAAnE,IACAkP,EAAA8mB,iBACA9mB,EAAAgnB,uBAKA,IAAAhjB,EAAApD,EAAAoqB,OAaApqB,EAAAmqB,QAAAa,iBACAhrB,EAAAmqB,QAAAa,iBAAAhB,EAAA5mB,GAAApD,EAAAwqB,WAAA,GAEA1P,QAAAC,KAAA,yBAAA/a,EAAAmqB,WAKAnuB,OAAA,SAAAzK,EAAAgG,GAMA,IAAAqH,EAHA3S,GAFAsL,EAAAwY,EAAApb,SAAA4C,IAMAtL,KAJAA,EAKAsL,EAAAtL,GAAA2S,EAJA,IAAAC,OAAA,UAAA5S,EAAA8G,QAAA,IAAA,SAAA,YAOA8B,KAAAw1B,UAAAx1B,KAAAw1B,UAAA56B,OAAA,SAAA86B,GACA,IAAAU,IAAA15B,GAAAA,IAAAg5B,EAAAh5B,OACAqN,GAAAA,EAAA3L,KAAAs3B,EAAAhzB,QAAAtL,QACAsL,EAAAkM,UAAAlM,EAAAkM,UAAA8mB,EAAAhzB,QAAAkM,UAEA,OAAAwnB,IAEA,GAAAp2B,KAAAw1B,UAAAr+B,SACA6I,KAAAs1B,QAAAe,qBACAr2B,KAAAs1B,QAAAe,oBAAAlB,EAAAn1B,KAAAu1B,QAAAv1B,KAAA21B,WAAA,GAEA31B,KAAA21B,UAAA,SAIAW,EAAApb,EAAAxW,OACApC,KAAA,SAAAwd,GACA9f,KAAAs1B,QAAAxV,EACA9f,KAAAu2B,aAKAC,SAAA,SAAAjoB,EAAA1R,EAAA6F,GAEA,IAAAqM,EAAAT,EAAAC,GACAA,EAAAQ,EAAAlX,KACA4+B,EAAAzB,EAAAzmB,GACAmoB,EAAAD,IAAAA,EAAAE,UAAAF,EAAAG,eAEAjoB,EAAA3O,KAAAu2B,cAGA97B,IAAAkU,EAAAJ,KACAI,EAAAJ,GAAA,IAAA8mB,EAAAr1B,KAAAs1B,QAAAoB,GAAAnoB,IAIAI,EAAAJ,GAAArH,IAAArK,EAAAqe,EAAApb,OACA1I,GAAA2X,EAAA3X,IACAsL,KAIAm0B,WAAA,SAAAtoB,EAAA7R,EAAAgG,GAEA,IAAAiM,EAAA3O,KAAAu2B,SACAxnB,EAAAT,EAAAC,GAGA,GAFAA,EAAAQ,EAAAlX,KAEA,CACA,IAAA4U,EAAAkC,EAAAJ,GAEA9B,GACAA,EAAAtF,OAAAzK,EAAAwe,EAAApb,OACA1I,GAAA2X,EAAA3X,IACAsL,SAIA,IAAA6L,KAAAI,EAAA,CACA,IAAAlC,EAAAkC,EAAAJ,GACA9B,EAAAtF,OAAAzK,EAAAwe,EAAApb,OACA1I,GAAA2X,EAAA3X,IACAsL,QAMAo0B,EAAA,SAAAhX,GACA,IAAAnZ,EAAAgV,EAAAmE,GACA/U,EAAAqqB,EAAAzuB,GAIA,OAHAoE,IACAA,EAAAqqB,EAAAzuB,GAAA,IAAA2vB,EAAAxW,IAEA/U,GAwDA,SAAA2D,EAAAoR,EAAAnR,EAAAC,EAAAhI,EAAA/J,EAAAgS,GAGA,GAAAqM,EAAA1hB,cAAAmV,GAIA,OAHAuM,EAAAra,KAAA8N,EAAA,SAAA9W,EAAA6E,GACAgS,EAAAoR,EAAAjoB,EAAA+W,EAAAhI,EAAAlK,EAAAmS,KAEA7O,KAGAkb,EAAAziB,SAAAmW,IAAAsM,EAAA/iB,WAAA0E,KACAA,EAAA+J,EACAA,EAAAgI,EACAA,OAAAnU,GAGAygB,EAAA/iB,WAAAyO,KACA/J,EAAA+J,EACAA,OAAAnM,IAGA,IAAAoC,IACAA,EAAAqe,EAAAzR,aAGA,iBAAAkF,IAEAA,EADAA,EAAA1S,QAAA,MAAA,EACA0S,EAAAzX,MAAA,KAEAyX,EAAAzX,MAAA,OAIA,IAAA6T,EAAA+rB,EAAAhX,GAYA,OAVAnR,EAAA7W,QAAA,SAAAyW,GACA,GAAA,SAAAA,EACA,OAAAwoB,EAAAl6B,GAEAkO,EAAAyrB,SAAAjoB,EAAA1R,GACA+J,KAAAA,EACAgI,SAAAA,EACAC,MAAAA,MAGA7O,KA2DA,SAAA+2B,EAAAl6B,GASA,OANA20B,EAAApzB,KAAA4S,SAAAgmB,aAAAhmB,SAAAgQ,KACA9F,EAAAhS,MAAArM,GAEAmU,SAAAmlB,iBAAA,mBAAAt5B,GAAA,GAGAmD,KAGA,IAAAi3B,GACAC,UAAA,EACAC,MAAA,IACAve,OAAA,GACAwe,KAAA,GACAjZ,IAAA,GACAkZ,MAAA,GACA1uB,OAAA,GACA2uB,KAAA,GACAxQ,KAAA,GACAyQ,UAAA,GACAC,QAAA,GACAC,OAAA,IACAC,MAAA,GACAC,MAAA,GACAC,IAAA,EACAC,GAAA,IA8EA,SAAAC,IACA,OAAAA,EA4BA,OAvCAtnB,EAAA0N,QAAA5B,aACA0Y,EAAA+C,eAIApB,SAAAnmB,EAAA0N,QAAA5B,WAAA6B,IACA6Z,aAAAxnB,EAAA0N,QAAA5B,WAAA6B,MAQAjD,EAAApb,MAAAg4B,GACAv0B,OAAA4X,EAEAnc,KAAAi4B,EAEAjnB,IAzQA,SAAAA,EAAA8P,EAAAnR,EAAAC,EAAA/R,GAEA,GAAAqe,EAAA1hB,cAAAmV,GAIA,OAHAuM,EAAAra,KAAA8N,EAAA,SAAA9W,EAAA6E,GACAsT,EAAA8P,EAAAjoB,EAAA+W,EAAAlS,KAHAsD,KAQAkb,EAAAziB,SAAAmW,IAAAsM,EAAA/iB,WAAA0E,KAAA,IAAAA,IACAA,EAAA+R,EACAA,OAAAnU,IAGA,IAAAoC,IACAA,EAAAqe,EAAAzR,aAGA,iBAAAkF,IAEAA,EADAA,EAAA1S,QAAA,MAAA,EACA0S,EAAAzX,MAAA,KAEAyX,EAAAzX,MAAA,OAIA,IAAA6T,EAAA+rB,EAAAhX,GAEAnR,GAAAA,EAAA7W,QAAA,SAAAyW,GAEAxD,EAAA8rB,WAAAtoB,EAAA1R,GACA+R,SAAAA,MAGA,OAAA5O,MAyOA0O,GAAAA,EAEAG,IAvKA,SAAAiR,EAAAnR,EAAAC,EAAAhI,EAAA/J,GAGA,OAFA6R,EAAAoR,EAAAnR,EAAAC,EAAAhI,EAAA/J,EAAA,GAEAmD,MAsKAsJ,MAAAwrB,EAEAiC,MAAAA,EAEAkB,UA7FA,SAAAnY,GAEA,IAAAoY,EAAA3H,EAAA3pB,KAAAkZ,EAAA,aACA,IAAAoY,EAAA,CACAA,KACA3H,EAAA3pB,KAAAkZ,EAAA,YAAAoY,GACA,IAAAC,EAAA,SAAAC,EAAA7pB,GACA,IAAA1S,EAAA0S,EAAA8pB,SAAA9pB,EAAA+pB,QACA,GAAAF,EAAAG,MAAA18B,GAAAu8B,EAAAI,KAAAjqB,EAAAkqB,QAAAL,EAAAz4B,OAAA4O,EAAAmqB,WACAnqB,EAAAoqB,SAAAP,EAAAO,SAAApqB,EAAAqqB,UAAArqB,EAAAqqB,UAAAR,EAAAQ,UAKA,OAJArqB,EAAA8iB,iBACA,WAAA9iB,EAAA1W,MACAugC,EAAA17B,GAAA6R,IAEA,GAIAG,EAAAoR,EAAA,yBAAA,SAAAvR,GACA,IAAA,iBAAAnQ,KAAAmQ,EAAApP,OAAA0hB,UACA,IAAA,IAAA/jB,KAAAo7B,EACAC,EAAAD,EAAAp7B,GAAAyR,KAOA,OACArH,IAAA,SAAA2xB,EAAAn8B,IAEAm8B,EAAA58B,QAAA,MAAA,EACA48B,EAAA9gC,cAAAb,MAAA,KAEA2hC,EAAA9gC,cAAAb,MAAA,MAEAY,QAAA,SAAAghC,GACA,IAAAC,GACAr8B,GAAAA,EACA87B,KAAA,EACAD,MAAA,EACA54B,OAAA,GAEAm5B,EAAA5hC,MAAA,KAAAY,QAAA,SAAAgF,GACA,OAAAA,GACA,IAAA,MACA,IAAA,OACA,IAAA,QACAi8B,EAAAj8B,IAAA,EACA,MACA,QACAi8B,EAAAH,SAAA97B,EAAAk8B,WAAA,GACAD,EAAAJ,QAAA1B,EAAAn6B,IAAAA,EAAA+U,cAAAmnB,WAAA,MAGA,IAAAC,GAAAF,EAAAR,KAAA,OAAA,IAAA,KAAAQ,EAAAP,IAAA,MAAA,IAAA,KAAAO,EAAAp5B,MAAA,QAAA,IAAA,IAAAo5B,EAAAJ,QACAT,EAAAe,GAAAF,OAuCAG,QAAAlE,EAEAmE,KAvKA,SAAA5qB,GACA5V,OAAAqY,SAAAhE,MACAuB,EAAAoqB,QAAA,GAEApqB,EAAA8iB,iBACA9iB,EAAA8iB,iBACA9iB,EAAAgjB,mBAEA,OAAAvxB,MAiKAgP,QAzJA,SAAAoqB,EAAAvhC,EAAA2H,GACA,IAAA+K,EAEAA,EADA1S,aAAAwhC,MACAxhC,EAEAsjB,EAAAtjB,EAAA2H,GAEA+K,EAAAsrB,MAAAr2B,EAEA,IAAA9C,EAAA08B,EAAAE,eAAAF,EAAApqB,QACAtS,EACAA,EAAAzE,KAAAmhC,EAAA7uB,GAEA0b,QAAAC,KAAA,mDAGA,OAAAlmB,QA6IA+b,EAAA+b,QAAAA,IAEAhhC,OAAA,0BACA,QACA,UACA,UACA,YACA,SAAAilB,EAAAb,EAAAiI,EAAAzD,GACA,IAGA6Z,EAHAnX,EAAA,mBACAoX,EAAAte,EAAAO,QACAiK,EAAAvC,EAAAuC,aAGA,SAAA+T,IACA,QAAAh/B,IAAA8+B,EACA,OAAAA,EAEA,IAAAG,EAAAC,EACAnY,EAAA2B,EAAAa,eAAA,6IAEA,GACA4V,EAAApY,EAAAuC,WAAA,GAgBA,OAdAZ,EAAAV,OAAAzR,SAAAgQ,KAAAQ,GAEAkY,EAAAE,EAAAjO,YAEAjM,EAAAO,IAAAuB,EAAA,WAAA,UAEAmY,EAAAC,EAAAjO,YAEA+N,IAAAC,IACAA,EAAAnY,EAAA,GAAAqY,aAGA1W,EAAAhc,OAAAqa,GAEA+X,EAAAG,EAAAC,EAMA,SAAAG,EAAAha,GACA,GAAAqD,EAAAzqB,SAAAonB,GACA,OACAgH,KAAA,EACAD,IAAA,EACA6Q,MAAA,EACAqC,OAAA,GAEA,IAAAC,EAAAva,iBAAAK,GACA,OACAgH,KAAA0S,EAAAQ,EAAAC,gBAAAna,GACA+G,IAAA2S,EAAAQ,EAAAE,eAAApa,GACA4X,MAAA8B,EAAAQ,EAAAG,iBAAAra,GACAia,OAAAP,EAAAQ,EAAAI,kBAAAta,IAUA,SAAAua,EAAAva,EAAAwa,GACA,QAAA7/B,IAAA6/B,EACA,OAAAlY,EAAAhkB,KAAA0hB,EAAAe,WAAAgG,IAAA,EAAAC,KAAA,GAAAhH,EAAAya,wBAEA,IACA/3B,EAAAkjB,EAAA5F,GAEA0a,EAAAH,EAAA73B,GACAi4B,EAAAC,EAAA5a,GACA6a,EAAAb,EAAAt3B,GAMA,OAJAo4B,EAAA9a,GACA+G,IAAAyT,EAAAzT,IAAA2T,EAAA3T,IAAA4T,EAAA5T,IAAA8T,EAAA9T,IACAC,KAAAwT,EAAAxT,KAAA0T,EAAA1T,KAAA2T,EAAA3T,KAAA6T,EAAA7T,OAEA9mB,KASA,SAAA66B,EAAA/a,EAAAwa,GACA,YAAA7/B,IAAA6/B,EACAxa,EAAAya,yBAEAF,EAAAva,EAAAwa,GACAQ,EAAAhb,EAAAwa,GACAt6B,MAwBA,SAAA+6B,EAAAjb,EAAAkb,GACA,QAAAvgC,GAAAugC,EACA,OACAjU,MAAAjH,EAAA+Z,YACA7S,OAAAlH,EAAAmb,cAGA,IAAAC,EAAA,eAAAxb,EAAAO,IAAAH,EAAA,cACAvd,GACAwkB,MAAAiU,EAAAjU,MACAC,OAAAgU,EAAAhU,QAEA,GAAAkU,EAUA,CACA,IAAAC,EAAArB,EAAAha,QAEArlB,IAAA8H,EAAAwkB,QACAxkB,EAAAwkB,MAAAxkB,EAAAwkB,MAAAoU,EAAArU,KAAAqU,EAAAzD,YAGAj9B,IAAA8H,EAAAykB,SACAzkB,EAAAykB,OAAAzkB,EAAAykB,OAAAmU,EAAAtU,IAAAsU,EAAApB,YAlBA,CACA,IAAAqB,EAAAC,EAAAvb,QAEArlB,IAAA8H,EAAAwkB,QACAxkB,EAAAwkB,MAAAxkB,EAAAwkB,MAAAqU,EAAAtU,KAAAsU,EAAA1D,YAGAj9B,IAAA8H,EAAAykB,SACAzkB,EAAAykB,OAAAzkB,EAAAykB,OAAAoU,EAAAvU,IAAAuU,EAAArB,QAeA,OADAra,EAAAO,IAAAH,EAAAvd,GACAvC,KAkDA,SAAAs7B,EAAAjY,GACA,IAAAL,EAAAK,EAAAL,gBACAhC,EAAAqC,EAAArC,KACAua,EAAAx0B,KAAAw0B,IACAC,EAAAD,EAAAvY,EAAAwY,YAAAxa,EAAAwa,aACA3B,EAAA0B,EAAAvY,EAAA6W,YAAA7Y,EAAA6Y,aACAlO,EAAA4P,EAAAvY,EAAA2I,YAAA3K,EAAA2K,aACA8P,EAAAF,EAAAvY,EAAAyY,aAAAza,EAAAya,cACAR,EAAAM,EAAAvY,EAAAiY,aAAAja,EAAAia,cACAS,EAAAH,EAAAvY,EAAA0Y,aAAA1a,EAAA0a,cAEA,OACA3U,MAAAyU,EAAA7P,EAAAkO,EAAA2B,EACAxU,OAAAyU,EAAAC,EAAAT,EAAAQ,GAwBA,SAAAf,EAAA5a,GACA,GAAAqD,EAAAzqB,SAAAonB,GACA,OACAgH,KAAA,EACAD,IAAA,EACA6Q,MAAA,EACAqC,OAAA,GAGA,IAAAC,EAAAva,iBAAAK,GACA,OACAgH,KAAA0S,EAAAQ,EAAA2B,YACA9U,IAAA2S,EAAAQ,EAAA4B,WACAlE,MAAA8B,EAAAQ,EAAA6B,aACA9B,OAAAP,EAAAQ,EAAA8B,eAkBA,SAAAC,EAAAjc,GACA,IAAApoB,EAAAojC,EAAAhb,GACAkc,EAAAtB,EAAA5a,GAEA,OACAiH,MAAArvB,EAAAqvB,MAAAiV,EAAAlV,KAAAkV,EAAAtE,MACA1Q,OAAAtvB,EAAAsvB,OAAAgV,EAAAnV,IAAAmV,EAAAjC,QAQA,SAAAsB,EAAAvb,GACA,GAAAqD,EAAAzqB,SAAAonB,GACA,OACAgH,KAAA,EACAD,IAAA,EACA6Q,MAAA,EACAqC,OAAA,GAGA,IAAAC,EAAAva,iBAAAK,GACA,OACAgH,KAAA0S,EAAAQ,EAAAiC,aACApV,IAAA2S,EAAAQ,EAAAkC,YACAxE,MAAA8B,EAAAQ,EAAAmC,cACApC,OAAAP,EAAAQ,EAAAoC,gBAUA,SAAAC,EAAAvc,EAAAwa,GACA,QAAA7/B,IAAA6/B,EAAA,CACA,IAAA5iC,EAAAooB,EAAAya,wBACA,OACAzT,KAAApvB,EAAAovB,KAAAnuB,OAAA2jC,YACAzV,IAAAnvB,EAAAmvB,IAAAluB,OAAA4jC,aAGA,IACA/5B,EAAAkjB,EAAA5F,GAEA0a,EAAA6B,EAAA75B,GACAi4B,EAAAC,EAAA5a,GACA6a,EAAAb,EAAAt3B,GAMA,OAJAo4B,EAAA9a,GACA+G,IAAAyT,EAAAzT,IAAA2T,EAAA3T,IAAA4T,EAAA5T,IAAA8T,EAAA9T,IACAC,KAAAwT,EAAAxT,KAAA0T,EAAA1T,KAAA2T,EAAA3T,KAAA6T,EAAA7T,OAEA9mB,KA+BA,SAAA46B,EAAA9a,EAAAwa,GACA,QAAA7/B,GAAA6/B,EAAA,CACA,IACA93B,EAAAkjB,EAAA5F,GAEA3jB,EAAAk+B,EAAAva,GACA0a,EAAAH,EAAA73B,GAEAm4B,GADAD,EAAA5a,GACAga,EAAAt3B,IAGA,OACAqkB,IAAA1qB,EAAA0qB,IAAA2T,EAAA3T,IAAA8T,EAAA9T,IACAC,KAAA3qB,EAAA2qB,KAAA0T,EAAA1T,KAAA6T,EAAA7T,MAGA,IAAAvkB,GACAskB,IAAAyT,EAAAzT,IACAC,KAAAwT,EAAAxT,MAOA,MAJA,UAAApH,EAAAO,IAAAH,EAAA,cACAvd,EAAA,SAAA,YAEAmd,EAAAO,IAAAH,EAAAvd,GACAvC,KASA,SAAAw8B,EAAA1c,EAAAwa,GACA,QAAA7/B,IAAA6/B,EAAA,CACA,IACA93B,EAAAkjB,EAAA5F,GAEA3jB,EAAA0+B,EAAA/a,GACA0a,EAAAH,EAAA73B,GAEAm4B,GADAD,EAAA5a,GACAga,EAAAt3B,IAGA,OACAqkB,IAAA1qB,EAAA0qB,IAAA2T,EAAA3T,IAAA8T,EAAA9T,IACAC,KAAA3qB,EAAA2qB,KAAA0T,EAAA1T,KAAA6T,EAAA7T,KACAC,MAAA5qB,EAAA4qB,MACAC,OAAA7qB,EAAA6qB,QAKA,OAFA4T,EAAA9a,EAAAwa,GACAQ,EAAAhb,EAAAwa,GACAt6B,KAmDA,SAAAy8B,EAAA3c,EAAA1nB,GACA,IAAA0nB,EAAAxnB,WACAwnB,EAAAA,EAAAP,aAEA,IAAAmd,EAAA,eAAA5c,EACA,YAAArlB,IAAArC,EACAskC,EAAA5c,EAAA2c,WAAA3c,EAAAwc,aAEAI,EACA5c,EAAA2c,WAAArkC,EAEA0nB,EAAA6c,SAAAvkC,EAAA0nB,EAAA8c,SAEA58B,MAQA,SAAA68B,EAAA/c,EAAA1nB,GACA,IAAA0nB,EAAAxnB,WACAwnB,EAAAA,EAAAP,aAEA,IAAAud,EAAA,cAAAhd,EAEA,YAAArlB,IAAArC,EACA0kC,EAAAhd,EAAA+c,UAAA/c,EAAAyc,aAEAO,EACAhd,EAAA+c,UAAAzkC,EAEA0nB,EAAA6c,SAAA7c,EAAAid,QAAA3kC,GAEA4H,MAQA,SAAA86B,EAAAhb,EAAAkb,GACA,QAAAvgC,GAAAugC,EACA,OAAA9f,EAAAxiB,SAAAonB,IAEAiH,MAAAjH,EAAAkd,WACAhW,OAAAlH,EAAAmd,aAGA/hB,EAAA/hB,WAAA2mB,GACAwb,EAAAtqB,WAGA+V,MAAAjH,EAAA6L,YACA3E,OAAAlH,EAAA4b,cAIA,IAAAR,EAAA,eAAAxb,EAAAO,IAAAH,EAAA,cACAvd,GACAwkB,MAAAiU,EAAAjU,MACAC,OAAAgU,EAAAhU,QAEA,IAAAkU,EAAA,CACA,IAAAE,EAAAC,EAAAvb,GACAqb,EAAArB,EAAAha,QAEArlB,IAAA8H,EAAAwkB,OAAA,KAAAxkB,EAAAwkB,OAAA,OAAAxkB,EAAAwkB,QACAxkB,EAAAwkB,MAAAxkB,EAAAwkB,MAAAqU,EAAAtU,KAAAsU,EAAA1D,MAAAyD,EAAArU,KAAAqU,EAAAzD,YAGAj9B,IAAA8H,EAAAykB,QAAA,KAAAzkB,EAAAykB,QAAA,OAAAzkB,EAAAykB,SACAzkB,EAAAykB,OAAAzkB,EAAAykB,OAAAoU,EAAAvU,IAAAuU,EAAArB,OAAAoB,EAAAtU,IAAAsU,EAAApB,QAIA,OADAra,EAAAO,IAAAH,EAAAvd,GACAvC,KAmBA,SAAAk9B,IACA,OAAAA,EAifA,OA9eAhiB,EAAApb,MAAAo9B,GACApD,cAAAA,EAEAO,iBAAAA,EAEAQ,aAAAA,EAEAI,aAtdA,SAAAnb,EAAA1nB,GACA,YAAAqC,GAAArC,EACA2iC,EAAAjb,GAAAkH,OAEA+T,EAAAjb,GACAkH,OAAA5uB,KAmdA2iC,WAAAA,EAEAlB,YA3ZA,SAAA/Z,EAAA1nB,GACA,YAAAqC,GAAArC,EACA2iC,EAAAjb,GAAAiH,OAEAgU,EAAAjb,GACAiH,MAAA3uB,IAEA4H,OAsZAm9B,YA9YA,SAAArd,GACA,IAAAsd,EAAArC,EAAAjb,GACAsb,EAAAC,EAAAvb,GAQA,OACAgH,KAAAsU,EAAAtU,KACAD,IAAAuU,EAAAvU,IACAE,MAAAqW,EAAArW,MAAAqU,EAAAtU,KAAAsU,EAAA1D,MACA1Q,OAAAoW,EAAApW,OAAAoU,EAAAvU,IAAAuU,EAAArB,SAkYAuB,gBAAAA,EAEAtU,OAtWA,SAAAlH,EAAA1nB,GACA,YAAAqC,GAAArC,EACA0iC,EAAAhb,GAAAkH,QAEA8T,EAAAhb,GACAkH,OAAA5uB,IAEA4H,OAiWA06B,cAAAA,EAEA2C,WAxUA,SAAAvd,GACA,IAAApoB,EAAA8kC,EAAA1c,GACAkc,EAAAtB,EAAA5a,GAEA,OACAgH,KAAApvB,EAAAovB,KACAD,IAAAnvB,EAAAmvB,IACAE,MAAArvB,EAAAqvB,MAAAiV,EAAAlV,KAAAkV,EAAAtE,MACA1Q,OAAAtvB,EAAAsvB,OAAAgV,EAAAnV,IAAAmV,EAAAjC,SAkUAgC,WAAAA,EAEArW,aAAAA,EAEA2V,eAAAA,EAGAgB,aAAAA,EAEAiB,SApQA,SAAAxd,EAAAwa,GACA,QAAA7/B,IAAA6/B,EAAA,CACA,IAAA5iC,EAAAooB,EAAAya,wBACA,OACAzT,KAAApvB,EAAAovB,KAAAnuB,OAAA2jC,YACAzV,IAAAnvB,EAAAmvB,IAAAluB,OAAA4jC,YACAxV,MAAAhgB,KAAAw2B,MAAA7lC,EAAAqvB,OACAC,OAAAjgB,KAAAw2B,MAAA7lC,EAAAsvB,SAKA,OAFAqV,EAAAvc,EAAAwa,GACAQ,EAAAhb,EAAAwa,GACAt6B,MA2PA46B,iBAAAA,EAEA4B,aAAAA,EAEA/C,eAAAA,EAEA+D,eAzLA,SAAA1d,EAAA2d,GAcA,IACAC,EAAAC,EAAA5W,EAAAC,EAAA4W,EAAAC,EADAC,EAAAhe,EAAAoB,WAEA6c,EAfA,SAAAje,EAAAke,GACA,IAAAN,EAAAC,EAAAn7B,EAAAsd,EAEA4d,EAAAC,EAAA,EACA,KAAAn7B,GAAAA,GAAAw7B,GAAAx7B,EAAAlK,UACAolC,GAAAl7B,EAAAy7B,YAAA,EACAN,GAAAn7B,EAAA07B,WAAA,EACA17B,EAAAA,EAAAkjB,aAGA,OAAAgY,EAAAA,EAAAC,EAAAA,GAKAQ,CAAAre,EAAAge,GAEAJ,EAAAK,EAAAL,EACAC,EAAAI,EAAAJ,EACA5W,EAAAjH,EAAA6L,YACA3E,EAAAlH,EAAA4b,aACAkC,EAAAE,EAAAjE,YACAgE,EAAAC,EAAA7C,aAEA,OAAAwC,GACAC,GAAAE,EAAA7W,EACA4W,GAAAE,EAAA7W,GACA,UAAAyW,IACAC,GAAAE,EAAA,EAAA7W,EAAA,EACA4W,GAAAE,EAAA,EAAA7W,EAAA,GAMA,OAHA8W,EAAArB,WAAAiB,EACAI,EAAAjB,UAAAc,EAEA39B,MAuJAy8B,WAAAA,EAEAI,UAAAA,EAEA/B,KAAAA,EAEA/T,MAhEA,SAAAjH,EAAA1nB,GACA,YAAAqC,GAAArC,EACA0iC,EAAAhb,GAAAiH,OAEA+T,EAAAhb,GACAiH,MAAA3uB,IAEA4H,SA4DA,WACA,IAAAu7B,EAAAx0B,KAAAw0B,IACA6C,EAAAr3B,KAAAq3B,IACAC,EAAA,oBACAC,EAAA,oBACAC,EAAA,wBACAC,EAAA,OACAC,EAAA,KAEA,SAAAC,EAAAC,EAAA5X,EAAAC,GACA,OACAtL,WAAAijB,EAAA,KAAAF,EAAArgC,KAAAugC,EAAA,IAAA5X,EAAA,IAAA,GACArL,WAAAijB,EAAA,KAAAF,EAAArgC,KAAAugC,EAAA,IAAA3X,EAAA,IAAA,IAIA,SAAA4X,EAAA9d,EAAAZ,GACA,OAAAtiB,SAAA8hB,EAAAO,IAAAa,EAAAZ,GAAA,KAAA,EAqPA,IAAA2e,GACAC,KACAhY,KAAA,SAAAF,EAAAhgB,GACA,IAMAm4B,EANAC,EAAAp4B,EAAAo4B,OACAC,EAAAD,EAAAtmC,SAAAsmC,EAAAvC,WAAAuC,EAAA7iC,OAAA2qB,KACAoY,EAAAF,EAAAjY,MACAoY,EAAAvY,EAAAE,KAAAlgB,EAAAw4B,kBAAAzD,WACA0D,EAAAJ,EAAAE,EACAG,EAAAH,EAAAv4B,EAAA24B,eAAAL,EAAAD,EAIAr4B,EAAA24B,eAAAL,EAGAG,EAAA,GAAAC,GAAA,GACAP,EAAAnY,EAAAE,KAAAuY,EAAAz4B,EAAA24B,eAAAL,EACAD,EACArY,EAAAE,MAAAuY,EAAAN,GAIAnY,EAAAE,KADAwY,EAAA,GAAAD,GAAA,EACAJ,EAIAI,EAAAC,EACAL,EAAAC,EAAAt4B,EAAA24B,eAEAN,EAKAI,EAAA,EACAzY,EAAAE,MAAAuY,EAGAC,EAAA,EACA1Y,EAAAE,MAAAwY,EAIA1Y,EAAAE,KAAAyU,EAAA3U,EAAAE,KAAAqY,EAAAvY,EAAAE,OAGAD,IAAA,SAAAD,EAAAhgB,GACA,IAMA44B,EANAR,EAAAp4B,EAAAo4B,OACAC,EAAAD,EAAAtmC,SAAAsmC,EAAAnC,UAAAmC,EAAA7iC,OAAA0qB,IACA4Y,EAAA74B,EAAAo4B,OAAAhY,OACA0Y,EAAA9Y,EAAAC,IAAAjgB,EAAAw4B,kBAAAxD,UACA+D,EAAAV,EAAAS,EACAE,EAAAF,EAAA94B,EAAAi5B,gBAAAJ,EAAAR,EAIAr4B,EAAAi5B,gBAAAJ,EAGAE,EAAA,GAAAC,GAAA,GACAJ,EAAA5Y,EAAAC,IAAA8Y,EAAA/4B,EAAAi5B,gBAAAJ,EACAR,EACArY,EAAAC,KAAA8Y,EAAAH,GAIA5Y,EAAAC,IADA+Y,EAAA,GAAAD,GAAA,EACAV,EAIAU,EAAAC,EACAX,EAAAQ,EAAA74B,EAAAi5B,gBAEAZ,EAKAU,EAAA,EACA/Y,EAAAC,KAAA8Y,EAGAC,EAAA,EACAhZ,EAAAC,KAAA+Y,EAIAhZ,EAAAC,IAAA0U,EAAA3U,EAAAC,IAAA6Y,EAAA9Y,EAAAC,OAIAiZ,MACAhZ,KAAA,SAAAF,EAAAhgB,GACA,IAkBAm4B,EACAgB,EAnBAf,EAAAp4B,EAAAo4B,OACAC,EAAAD,EAAA7iC,OAAA2qB,KAAAkY,EAAAvC,WACAyC,EAAAF,EAAAjY,MACAkX,EAAAe,EAAAtmC,SAAAsmC,EAAAvC,WAAAuC,EAAA7iC,OAAA2qB,KACAqY,EAAAvY,EAAAE,KAAAlgB,EAAAw4B,kBAAAzD,WACA0D,EAAAF,EAAAlB,EACAqB,EAAAH,EAAAv4B,EAAA24B,eAAAL,EAAAjB,EACA+B,EAAA,SAAAp5B,EAAAq5B,GAAA,IACAr5B,EAAAs5B,UACA,UAAAt5B,EAAAq5B,GAAA,GACAr5B,EAAAs5B,UACA,EACAC,EAAA,SAAAv5B,EAAAw5B,GAAA,GACAx5B,EAAAy5B,YACA,UAAAz5B,EAAAw5B,GAAA,IACAx5B,EAAAy5B,YACA,EACAlkC,GAAA,EAAAyK,EAAAzK,OAAA,GAIAkjC,EAAA,IACAN,EAAAnY,EAAAE,KAAAkZ,EAAAG,EAAAhkC,EAAAyK,EAAA24B,eACAL,EAAAD,GACA,GAAAF,EAAAX,EAAAiB,MACAzY,EAAAE,MAAAkZ,EAAAG,EAAAhkC,GAEAmjC,EAAA,KACAS,EAAAnZ,EAAAE,KAAAlgB,EAAAw4B,kBAAAzD,WAAAqE,EACAG,EAAAhkC,EAAA8hC,GACA,GAAAG,EAAA2B,GAAAT,KACA1Y,EAAAE,MAAAkZ,EAAAG,EAAAhkC,IAIA0qB,IAAA,SAAAD,EAAAhgB,GACA,IAmBA05B,EACAd,EApBAR,EAAAp4B,EAAAo4B,OACAC,EAAAD,EAAA7iC,OAAA0qB,IAAAmY,EAAAnC,UACA4C,EAAAT,EAAAhY,OACAkX,EAAAc,EAAAtmC,SAAAsmC,EAAAnC,UAAAmC,EAAA7iC,OAAA0qB,IACA6Y,EAAA9Y,EAAAC,IAAAjgB,EAAAw4B,kBAAAxD,UACA+D,EAAAD,EAAAxB,EACA0B,EAAAF,EAAA94B,EAAAi5B,gBAAAJ,EAAAvB,EACArX,EAAA,QAAAjgB,EAAAq5B,GAAA,GACAD,EAAAnZ,GACAjgB,EAAA25B,WACA,WAAA35B,EAAAq5B,GAAA,GACAr5B,EAAA25B,WACA,EACAJ,EAAA,QAAAv5B,EAAAw5B,GAAA,GACAx5B,EAAA45B,aACA,WAAA55B,EAAAw5B,GAAA,IACAx5B,EAAA45B,aACA,EACArkC,GAAA,EAAAyK,EAAAzK,OAAA,GAGAwjC,EAAA,IACAH,EAAA5Y,EAAAC,IAAAmZ,EAAAG,EAAAhkC,EAAAyK,EAAAi5B,gBACAJ,EAAAR,GACA,GAAAO,EAAApB,EAAAuB,MACA/Y,EAAAC,KAAAmZ,EAAAG,EAAAhkC,GAEAyjC,EAAA,KACAU,EAAA1Z,EAAAC,IAAAjgB,EAAAw4B,kBAAAxD,UAAAoE,EAAAG,EACAhkC,EAAA+hC,GACA,GAAAE,EAAAkC,GAAAV,KACAhZ,EAAAC,KAAAmZ,EAAAG,EAAAhkC,KAKAskC,SACA3Z,KAAA,WACA+X,EAAAiB,KAAAhZ,KAAA/mB,MAAAC,KAAAN,WACAm/B,EAAAC,IAAAhY,KAAA/mB,MAAAC,KAAAN,YAEAmnB,IAAA,WACAgY,EAAAiB,KAAAjZ,IAAA9mB,MAAAC,KAAAN,WACAm/B,EAAAC,IAAAjY,IAAA9mB,MAAAC,KAAAN,cAKAw9B,EAAAwD,MAhWA,SAAA5gB,EAAApd,GAIA,IAAAy9B,EAAAE,EAAAG,EAAAG,EAAAC,EAAAC,EACA1hC,GAHAuD,EAAAwY,EAAAna,UAAA2B,IAGAo+B,GACA9B,GAxBAle,EAwBApe,EAAAs8B,OAvBA+B,EAAAjgB,GAAAnoB,OACAD,EAAAyqB,EAAAzqB,SAAAqoC,GACA5nC,IAAA4nC,GAAA,IAAAA,EAAAzoC,SACA0oC,GAAAtoC,IAAAS,EACA8nC,EAAAlF,EAAAgF,IAEAjgB,QAAAigB,EACAroC,SAAAA,EACAS,WAAAA,EACAgD,OAAA6kC,EAAA3E,EAAAvb,IAAAgG,KAAA,EAAAD,IAAA,GACA4V,WAAAA,EAAAsE,GACAlE,UAAAA,EAAAkE,GACAha,MAAAka,EAAAla,MACAC,OAAAia,EAAAja,SAWAka,EAxCA,SAAAlC,GACA,IAAAmC,EAAAnC,EAAAtmC,UAAAsmC,EAAA7lC,WAAA,GACAumB,EAAAO,IAAA+e,EAAAle,QAAA,cACAsgB,EAAApC,EAAAtmC,UAAAsmC,EAAA7lC,WAAA,GACAumB,EAAAO,IAAA+e,EAAAle,QAAA,cACAugB,EAAA,WAAAF,GACA,SAAAA,GAAAnC,EAAAjY,MAAAyU,YAAAwD,EAAAle,SAGA,OACAiG,MAHA,WAAAqa,GACA,SAAAA,GAAApC,EAAAhY,OAAAyU,aAAAuD,EAAAle,SAEA2Y,IAAA,EACAzS,OAAAqa,EAAA5H,IAAA,GA6BA6H,CAAAtC,GACAuC,GAAA7+B,EAAA6+B,WAAA,QAAArqC,MAAA,KACAynC,KA3BA,IAAA7d,EACAigB,EACAroC,EACAS,EACA6nC,EACAC,EAtDAxY,EA8EAtpB,EAAA0hC,EA7EA,IAAApY,EAAAnwB,UAEAwiC,KAAAA,EAAArS,GACAtsB,QAAA0qB,IAAA,EAAAC,KAAA,IAGA3D,EAAAzqB,SAAA+vB,IAEAqS,KAAAA,EAAArS,GACAtsB,QACA0qB,IAAAgW,EAAApU,GACA3B,KAAA2V,EAAAhU,KAIAA,EAAA4I,gBAEAyJ,MACA/T,MAAA,EACAC,OAAA,GAEA7qB,QACA0qB,IAAA4B,EAAA+Y,MACA1a,KAAA2B,EAAAgZ,SAKA3G,KAAAA,EAAArS,GACAtsB,OAAAkgC,EAAA5T,IAiDAtpB,EAAAkyB,iBAGA3uB,EAAA09B,GAAA,YAlFA,IAAA3X,EAoFA4X,EAAAQ,EAAA/F,KAAA/T,MACAyZ,EAAAK,EAAA/F,KAAA9T,OACA2Z,EAAAE,EAAA1kC,OAGAykC,EAAA1lB,EAAAna,UAAA4/B,GAIAzlB,EAAAra,MAAA,KAAA,MAAA,WACA,IACA6gC,EACAC,EAFA5D,GAAAr7B,EAAA1C,OAAA,IAAA9I,MAAA,KAIA,IAAA6mC,EAAA5mC,SACA4mC,EAAAM,EAAAjgC,KAAA2/B,EAAA,IACAA,EAAA1hC,QAAA,WACAiiC,EAAAlgC,KAAA2/B,EAAA,KACA,UAAA1hC,OAAA0hC,IACA,SAAA,WAEAA,EAAA,GAAAM,EAAAjgC,KAAA2/B,EAAA,IAAAA,EAAA,GAAA,SACAA,EAAA,GAAAO,EAAAlgC,KAAA2/B,EAAA,IAAAA,EAAA,GAAA,SAGA2D,EAAAnD,EAAAptB,KAAA4sB,EAAA,IACA4D,EAAApD,EAAAptB,KAAA4sB,EAAA,IACAY,EAAA3+B,OACA0hC,EAAAA,EAAA,GAAA,EACAC,EAAAA,EAAA,GAAA,GAIAj/B,EAAA1C,OACAw+B,EAAArtB,KAAA4sB,EAAA,IAAA,GACAS,EAAArtB,KAAA4sB,EAAA,IAAA,MAKA,IAAAwD,EAAApqC,SACAoqC,EAAA,GAAAA,EAAA,IAGA,UAAA7+B,EAAA09B,GAAA,GACAQ,EAAA9Z,MAAAuZ,EACA,WAAA39B,EAAA09B,GAAA,KACAQ,EAAA9Z,MAAAuZ,EAAA,GAGA,WAAA39B,EAAA09B,GAAA,GACAQ,EAAA/Z,KAAA2Z,EACA,WAAA99B,EAAA09B,GAAA,KACAQ,EAAA/Z,KAAA2Z,EAAA,GAOA,OAJAL,EAAAzB,EAAAC,EAAAyB,GAAAC,EAAAG,GACAI,EAAA9Z,MAAAqZ,EAAA,GACAS,EAAA/Z,KAAAsZ,EAAA,GAEA,SAAA/gB,GACA,IAAAggB,EAAAwC,EACAX,EAAAlF,EAAA3c,GACA8gB,EAAAe,EAAAla,MACAwZ,EAAAU,EAAAja,OACA2U,EAAAiD,EAAAxf,EAAA,cACAwc,EAAAgD,EAAAxf,EAAA,aACAmgB,EAAAW,EAAAvE,EAAAiD,EAAAxf,EAAA,eACA8hB,EAAAna,MACA8Y,EAAAU,EAAA3E,EAAAgD,EAAAxf,EAAA,gBACA8hB,EAAAla,OACAJ,EAAA1L,EAAAna,UAAA6/B,GACAZ,EAAAtB,EAAAC,EAAAsB,GAAAgB,EAAAla,MAAAka,EAAAja,QAEA,UAAAtkB,EAAAu9B,GAAA,GACArZ,EAAAE,MAAAoZ,EACA,WAAAx9B,EAAAu9B,GAAA,KACArZ,EAAAE,MAAAoZ,EAAA,GAGA,WAAAx9B,EAAAu9B,GAAA,GACArZ,EAAAC,KAAA0Z,EACA,WAAA79B,EAAAu9B,GAAA,KACArZ,EAAAC,KAAA0Z,EAAA,GAGA3Z,EAAAE,MAAAkZ,EAAA,GACApZ,EAAAC,KAAAmZ,EAAA,GAEAZ,GACAzD,WAAAA,EACAC,UAAAA,GAGA1gB,EAAAra,MAAA,OAAA,OAAA,SAAAxJ,EAAAwqC,GACAhD,EAAA0C,EAAAlqC,KACAwnC,EAAA0C,EAAAlqC,IAAAwqC,GAAAjb,GACAyZ,YAAAA,EACAG,aAAAA,EACAN,UAAAA,EACAK,WAAAA,EACAnB,kBAAAA,EACAG,eAAAA,EACAM,gBAAAA,EACA1jC,QAAAgkC,EAAA,GAAAH,EAAA,GAAAG,EAAA,GAAAH,EAAA,IACAC,GAAAv9B,EAAAu9B,GACAG,GAAA19B,EAAA09B,GACApB,OAAAA,EACA5f,KAAAA,MAKA1c,EAAAk/B,QAGAA,EAAA,SAAAr/B,GACA,IAAAukB,EAAA6Z,EAAA7Z,KAAAF,EAAAE,KACA4Q,EAAA5Q,EAAAuZ,EAAAH,EACArZ,EAAA8Z,EAAA9Z,IAAAD,EAAAC,IACAkT,EAAAlT,EAAA2Z,EAAAD,EACAuB,GACA3iC,QACA2hB,QAAA3hB,EACA2nB,KAAA6Z,EAAA7Z,KACAD,IAAA8Z,EAAA9Z,IACAE,MAAAsZ,EACArZ,OAAAwZ,GAEA1f,SACAA,QAAA1B,EACA0H,KAAAF,EAAAE,KACAD,IAAAD,EAAAC,IACAE,MAAAmZ,EACAlZ,OAAAuZ,GAEAwB,WAAArK,EAAA,EAAA,OAAA5Q,EAAA,EAAA,QAAA,SACAkb,SAAAjI,EAAA,EAAA,MAAAlT,EAAA,EAAA,SAAA,UAEAwZ,EAAAH,GAAA9B,EAAAtX,EAAA4Q,GAAA2I,IACAyB,EAAAC,WAAA,UAEAvB,EAAAD,GAAAnC,EAAAvX,EAAAkT,GAAAyG,IACAsB,EAAAE,SAAA,UAEAzG,EAAA6C,EAAAtX,GAAAsX,EAAA1G,IAAA6D,EAAA6C,EAAAvX,GAAAuX,EAAArE,IACA+H,EAAAG,UAAA,aAEAH,EAAAG,UAAA,WAEAv/B,EAAAk/B,MAAA3pC,KAAA+H,KAAAuC,EAAAu/B,KAIAzF,EAAAjd,EAAAlE,EAAAna,OAAA6lB,GAAAgb,MAAAA,KA9FA,CA+FA9hB,IAnQA,GA0bA/D,EAAAmhB,KAAAA,IAEApmC,OAAA,wBACA,QACA,UACA,YACA,SACA,WACA,aACA,SAAAilB,EAAAb,EAAA1K,EAAA0sB,EAAAxd,EAAAoY,GACA,IAAAoK,EACAC,EACAC,EAEAC,EACAC,EACAC,EACAC,EAEAC,EAAAjyB,EAAAyN,kBAAA,gBACA8Z,EAAAvnB,EAAAyN,kBAAA,iBAEAykB,EAAA,8EACApwB,EAAA9B,EAAAgM,eAAA,YACAmmB,KAwBA,SAAAC,EAAA9iB,EAAA+iB,EAAAC,EAAAC,EAAAlmC,EAAAmmC,GACA,IAAAlmC,EAKAmmC,EACAC,EALAC,KACAC,KACAC,EAAA,GACAC,EAAAtjC,KAGAujC,GAAA,EACAzG,GAAA,EAkCA,GA/BA5hB,EAAA1hB,cAAAspC,KACAC,EAAAD,EAAAU,OACA3mC,EAAAimC,EAAA/uB,SACAivB,EAAAF,EAAAE,MACAF,EAAAA,EAAAA,UAGA5nB,EAAAziB,SAAAqqC,KACAA,EAAAW,EAAAC,OAAAZ,SAEAroC,IAAAqoC,IACAA,EAAAW,EAAAC,OAAAC,QAEAb,GAAA,IACAW,EAAAzzB,MACA8yB,EAAA,GAGA5nB,EAAA/iB,WAAA4qC,IACAlmC,EAAAkmC,EACAa,KAAA,SAEAb,EAAAA,GAAA,QAGAC,EACAA,GAAA,IAEAA,EAAA,EAGA9nB,EAAAziB,SAAAoqC,GAEAM,EAAAjB,GAAAW,EACAM,EAAAhB,GAAAW,EAAA,IACAK,EAAAf,GAAAW,EACAE,EAAAR,MACA,CAEA,IAAA3lC,KAAA+lC,EAAA,CACA,IAAAjwB,EAAAiwB,EAAA/lC,GACA,GAAA4lC,EAAAtkC,KAAAtB,GACAumC,GAAAvmC,EAAA,IAAA8V,EAAA,SACA,CAIA,GAHA,cAAA9V,IACAggC,GAAA,GAEA,QAAAhgC,GAAAoe,EAAA1hB,cAAAoZ,IAEA,GADAuwB,EAAArmC,GAAA,QAAA8V,EAAAiU,IAAA,MAAAjU,EAAA8kB,MAAA,MAAA9kB,EAAAmnB,OAAA,MAAAnnB,EAAAkU,KAAA,MACA,QAAApH,EAAAO,IAAAH,EAAA,QAAA,CACA,IAAAgb,EAAAoC,EAAApC,KAAAhb,GACAJ,EAAAO,IAAAH,EAAA,OAAA,YAAAgb,EAAA/T,MAAA,MAAA+T,EAAA9T,OAAA,YACA,QAIAmc,EAAArmC,GAAA8V,EAEAwwB,EAAA5nC,KAAA0f,EAAApJ,UAAAhV,KAGAmmC,EAAAlL,EA8DA,OA3DAsL,IACAF,EAAA7wB,GAAA+wB,EACAD,EAAA5nC,KAAA8W,IAGAwwB,EAAA,GAAA5nB,EAAA1hB,cAAAqpC,KACAM,EAAAd,GAAAe,EAAAl5B,KAAA,MACAi5B,EAAAb,GAAAQ,EAAA,IACAK,EAAAX,GAAAQ,EAAA,IACAG,EAAAZ,GAAAQ,GAGAG,EAAA,SAAA30B,GAEA,GADAg1B,GAAA,EACAh1B,EAAA,CACA,GAAAA,EAAApP,SAAAoP,EAAAwnB,cACA,OAEA+B,EAAA9nB,IAAAzB,EAAApP,OAAA8jC,EAAAC,QAEApL,EAAA9nB,IAAA8P,EAAA2iB,EAAAS,GAEAxjB,EAAAO,IAAAH,EAAA6iB,GAIA9lC,GAAAA,EAAA5E,KAAA+H,OAGA8iC,EAAA,IACAhL,EAAAppB,GAAAoR,EAAAmjB,EAAAC,GAGAhoB,EAAAtS,SAAA,WACA26B,GAGAL,EAAAjrC,KAAAqrC,IACA,KAAAR,EAAAE,GAAA,GALA9nB,IASA4E,EAAA+jB,WAEAnkB,EAAAO,IAAAH,EAAAqjB,GAEAL,GAAA,GACA5nB,EAAAtS,SAAA,WACA26B,GAGAL,EAAAjrC,KAAAqrC,IACA,EALApoB,GAQA4hB,GACAgH,EAAAhkB,EAAA+iB,EAAA,UAAAC,EAAAjmC,GAGAmD,KASA,SAAA4gB,EAAAd,EAAAikB,EAAAlnC,GAUA,OATA6iB,EAAAkB,KAAAd,GACAikB,KACAlnC,GAAAqe,EAAA/iB,WAAA4rC,KACAlnC,EAAAknC,EACAA,EAAA,UAEArkB,EAAAO,IAAAH,EAAA,UAAA,GACA8iB,EAAA9iB,GAAAnB,QAAA,EAAAqlB,MAAA,OAAAD,EAAAlnC,IAEAmD,KAUA,SAAAygB,EAAAX,EAAAikB,EAAAlnC,GAeA,OAdAknC,IACAlnC,GAAAqe,EAAA/iB,WAAA4rC,KACAlnC,EAAAknC,EACAA,EAAA,UAEAnB,EAAA9iB,GAAAnB,QAAA,EAAAqlB,MAAA,OAAAD,EAAA,WACArkB,EAAAe,KAAAX,GACAjjB,GACAA,EAAA5E,KAAA6nB,MAIAJ,EAAAe,KAAAX,GAEA9f,KAUA,SAAA8jC,EAAAhkB,EAAAie,EAAAgG,EAAAlnC,GACA,IAAAonC,EAAArmC,SAAAkiB,EAAA+c,WACAxlC,EAAA,EAEA6sC,EAAA,IAAAH,EADA,EAEApH,EAAA/+B,SAAAmgC,GAEAoG,EAAAC,YAAA,aACA/sC,GAEA6sC,IAAApkB,EAAA+c,WAAAF,EAAAsH,GAAAC,EAAA7sC,EAAA4sC,GAEA5sC,GAAA6sC,EAAA,IACAG,cAAAF,GACAtnC,GAAAqe,EAAAtS,SAAA/L,EAAA,IAAAqe,KAXA,GAuCA,SAAAopB,EAAAxkB,EAAAikB,EAAAplB,EAAA6kB,EAAA3mC,GAEA,OADA+lC,EAAA9iB,GAAAnB,QAAAA,GAAAolB,EAAAP,EAAA3mC,GACAmD,KAWA,SAAAukC,EAAAzkB,EAAAikB,EAAAP,EAAA3mC,GACA,IAAAsC,EAAAugB,EAAAO,IAAAH,EAAA,WAUA,OATA3gB,EAAA,EACAugB,EAAAO,IAAAH,EAAA,UAAA,GAEA3gB,EAAA,EAEAugB,EAAAkB,KAAAd,GAEAwkB,EAAAxkB,EAAAikB,EAAA5kC,EAAAqkC,EAAA3mC,GAEAmD,KAUA,SAAAwkC,EAAA1kB,EAAAikB,EAAAP,EAAA3mC,GACA,IACAkX,EACA4K,EAAAe,EAAAO,IAAAH,EAAA,WACApd,KAyBA,OAvBAwY,EAAA1hB,cAAAuqC,IACArhC,EAAA8gC,OAAAO,EAAAP,OACA9gC,EAAAogC,SAAAiB,EAAAjB,SACA/uB,EAAAgwB,EAAAhwB,WAEArR,EAAAogC,SAAAiB,EACAlnC,GACAkX,EAAAlX,EACA6F,EAAA8gC,OAAAA,GAEAzvB,EAAAyvB,GAGA9gC,EAAAqR,SAAA,WACA2L,EAAAO,IAAAH,EAAA,UAAAnB,GACAe,EAAAe,KAAAX,GACA/L,GACAA,EAAA9b,KAAA6nB,IAIAwkB,EAAAxkB,EAAApd,EAAA,GAEA1C,KAyBA,SAAAykC,EAAA3kB,EAAAgjB,EAAAjmC,GAGA,IAAA+pB,EAAAlH,EAAAO,IAAAH,EAAA,YAGAc,EAAAd,GAGAJ,EAAAO,IAAAH,GACA8G,SAAA,WACA8d,WAAA,WAIA,IAAA9I,EAAAlc,EAAAO,IAAAH,EAAA,cACAgc,EAAApc,EAAAO,IAAAH,EAAA,iBACAoc,EAAAxc,EAAAO,IAAAH,EAAA,eACAsc,EAAA1c,EAAAO,IAAAH,EAAA,kBACAkH,EAAAtH,EAAAO,IAAAH,EAAA,UA8BA,OA3BAJ,EAAAO,IAAAH,GACA8G,SAAAA,EACA8d,WAAA,UACAC,SAAA,SACA3d,OAAA,EACA4U,UAAA,EACAE,aAAA,EACAI,WAAA,EACAE,cAAA,IAIAwG,EAAA9iB,GACAkH,OAAAA,EACA4U,UAAAA,EACAE,aAAAA,EACAI,WAAAA,EACAE,cAAAA,IAEA0G,SAAAA,EACA/uB,SAAA,WACAlX,GACAA,EAAAkD,MAAA+f,MAKA9f,KASA,SAAA4kC,EAAA9kB,EAAAgjB,EAAAjmC,GAEA,GAAAqgC,EAAAlW,OAAAlH,GAAA,EAAA,CAGAJ,EAAAO,IAAAH,EAAA,YAAA,IAGAkH,EAAAtH,EAAAO,IAAAH,EAAA,UACA8b,EAAAlc,EAAAO,IAAAH,EAAA,cACAgc,EAAApc,EAAAO,IAAAH,EAAA,iBACAoc,EAAAxc,EAAAO,IAAAH,EAAA,eACAsc,EAAA1c,EAAAO,IAAAH,EAAA,kBAGAJ,EAAAO,IAAAH,GACA4kB,WAAA,UACAC,SAAA,SACA3d,OAAAA,EACA4U,UAAAA,EACAE,aAAAA,EACAI,WAAAA,EACAE,cAAAA,IAIAwG,EAAA9iB,GACAkH,OAAA,EACA4U,UAAA,EACAE,aAAA,EACAI,WAAA,EACAE,cAAA,IAGA0G,SAAAA,EACA+B,OAAA,EACA9wB,SAAA,WACA0M,EAAAX,GACAJ,EAAAO,IAAAH,GACA4kB,WAAA,UACAC,SAAA,SACA3d,OAAAA,EACA4U,UAAAA,EACAE,aAAAA,EACAI,WAAAA,EACAE,cAAAA,IAEAv/B,GACAA,EAAAkD,MAAA+f,MAKA,OAAA9f,KAsCA,SAAAyjC,IACA,OAAAA,EA4BA,OAtgBAd,EAAAT,EAAA1xB,EAAAwN,qBAAA,mBACA2kB,EAAAR,EAAA3xB,EAAAwN,qBAAA,uBACA2kB,EAAAnyB,EAAAwN,qBAAA,oBACA2kB,EAAAP,EAAA5xB,EAAAwN,qBAAA,8BAAA,GAEA2kB,EAAAN,EAAA7xB,EAAAwN,qBAAA,wBACA2kB,EAAAL,EAAA9xB,EAAAwN,qBAAA,wBACA2kB,EAAAH,EAAAhyB,EAAAwN,qBAAA,qBACA2kB,EAAAJ,EAAA/xB,EAAAwN,qBAAA,+BAAA,GAqeA9C,EAAApb,MAAA2jC,GACAzzB,KAAA,EAEA0zB,QACAC,OAAA,IACAmB,KAAA,IACAC,KAAA,KAGAnC,QAAAA,EACAoC,qBA7BA,SAAAllB,EAAAgjB,GACA,IAAAmC,GAAA,EACAnN,EAAAjpB,IAAAiR,EAAA,gBAAA,WACAmlB,GAAA,IASA,OAFAh8B,WALA,WACAg8B,GACAnN,EAAA9oB,QAAA8Q,EAAA,kBAGAgjB,GAEA9iC,MAkBAukC,OAAAA,EACAC,QAAAA,EACAF,OAAAA,EACAY,WAtLA,SAAAplB,EAAAikB,EAAAoB,EAAAC,GACA1lB,EAAAgB,YAAAZ,GACAykB,EAAAzkB,EAAAikB,EAAAP,OAAA3mC,UAEA2nC,EAAA1kB,EAAAikB,EAAAP,OAAA3mC,UAEA,OAAAmD,MAiLAygB,KAAAA,EACAqjB,YAAAA,EAEAW,UAAAA,EACAY,YAnDA,SAAAvlB,EAAAgjB,EAAAjmC,GAGA,GAAAqgC,EAAAlW,OAAAlH,GACA2kB,EAAA3kB,EAAAgjB,EAAAjmC,GAIA+nC,EAAA9kB,EAAAgjB,EAAAjmC,GAEA,OAAAmD,MA0CA4kC,QAAAA,EACAhkB,KAAAA,EACA0kB,OAxRA,SAAAxlB,EAAAikB,EAAAlnC,GACA6iB,EAAAgB,YAAAZ,GACAc,EAAAd,EAAAikB,EAAAlnC,GAEA4jB,EAAAX,EAAAikB,EAAAlnC,GAEA,OAAAmD,QAqRA+b,EAAA0nB,GAAAA,IAEA3sC,OAAA,2BACA,QACA,UACA,UACA,UACA,YACA,WACA,SACA,WACA,QACA,SAAAilB,EAAAb,EAAAiI,EAAAoN,EAAAuH,EAAAnJ,EAAAuO,EAAAxd,EAAA+jB,GACA,IAUA8B,EAVAC,EAAAzsC,MAAAY,UAAA6rC,KACAhqC,EAAAzC,MAAAY,UAAA6B,KAGAM,GAFA/C,MAAAY,UAAAykB,MACArlB,MAAAY,UAAA0C,OACAtD,MAAAY,UAAAmC,OAEAlB,GADA7B,MAAAY,UAAAgD,IACA5D,MAAAY,UAAAiB,QACA9C,EAAAiB,MAAAY,UAAA7B,QACAmE,EAAAlD,MAAAY,UAAAsC,QACA+J,EAAAjN,MAAAY,UAAAqM,KAGAy/B,EAAA,2CAEArqB,EAAAF,EAAAE,QACApiB,EAAAkiB,EAAAliB,YACAP,EAAAyiB,EAAAziB,SACAyE,EAAAge,EAAAhe,KACA/E,EAAA+iB,EAAA/iB,WAEAN,EAAAqjB,EAAArjB,KAOAW,GANA0iB,EAAAtiB,QAEAsiB,EAAAxiB,SAEAwiB,EAAA/hB,WAEA+hB,EAAA1iB,UAEA0iB,EAAA1hB,cAEA0hB,EAAAxf,QAEAwf,EAAA9f,QAEA8f,EAAAtJ,UAEAsJ,EAAApJ,UACA6c,EAAAxI,SAEA,SAAAuf,EAAA3pC,EAAAgN,GACA,OAAA,WACA,IACAtJ,EAAA3D,EAAA7D,KAAAyH,WACArE,EAAA6f,EAAAve,IAFAqD,KAEA,SAAAof,EAAAjiB,GACA,OAAApB,EAAAgE,MAAAgJ,GAAAqW,GAAA/iB,OAAAoD,MAEA,OAAA8F,EAAArI,EAAA7B,KAIA,SAAAsqC,EAAA5pC,EAAAgN,EAAAggB,GACA,OAAA,SAAAna,GAEA9S,EAAA7D,KAAAyH,WADA,IAEArE,EAAA2E,KAAArD,IAAA,SAAAQ,EAAAiiB,GAGA,OAAArjB,EAAAgE,MAAAgJ,EAAAggB,GAAA3J,IAAAA,EAAAxQ,MAGA,OAAAma,GAAAna,EACAvT,EAAAT,OAAAgU,GAEAvT,GA4BA,SAAAuqC,EAAA7pC,EAAAgN,GACA,OAAA,WACA,IACAtJ,EAAA3D,EAAA7D,KAAAyH,WAIA,OAHAM,KAAAa,KAAA,SAAA1D,EAAAsT,GACA1U,EAAAgE,MAAAgJ,GAAA/I,MAAA3D,OAAAoD,MAHAO,MASA,SAAA6lC,EAAA9pC,EAAAgN,EAAA+8B,GACA,OAAA,SAAAlrB,GACA,IACAnb,EAAA3D,EAAA7D,KAAAyH,WAKA,OAJA5H,EAAAG,KAFA+H,KAEA,SAAAof,EAAAjiB,GACAie,EAAAgE,EAAAxE,EAAAzd,EAAA2oC,EAAA1mB,IACArjB,EAAAgE,MAAAgJ,GAAAqW,EAAAxE,GAAAve,OAAAoD,EAAA3D,MAAA,OAJAkE,MAoBA,SAAA+lC,EAAAhqC,EAAAgN,EAAA+8B,GACA,OAAA,SAAAxuC,EAAAc,GACA,IACAqH,EAAA3D,EAAA7D,KAAAyH,WAEA,OAAAwb,EAAA1hB,cAAAlC,IAAA4jB,EAAAhiB,UAAAd,IACAN,EAAAG,KAJA+H,KAIA,SAAAof,EAAAjiB,GAEA2oC,GACA1qB,EAAAgE,EAAAhnB,EAAA+E,EAAA2oC,EAAA1mB,EAAA9nB,IAIAyE,EAAAgE,MAAAgJ,GAAAqW,GAAA/iB,OAAAoD,MAXAO,MAAAA,KAeA,GACAjE,EAAAgE,MAAAgJ,GAhBA/I,KAgBA,GAAA1I,SADA,GAQA,SAAA0uC,EAAAjqC,EAAAgN,EAAA+8B,GACA,OAAA,SAAA1tC,GAGA,OAAA8iB,EAAAhiB,UAAAd,IACAN,EAAAG,KAHA+H,KAGA,SAAAof,EAAAjiB,GACA,IAAA8oC,EAEAA,EADAH,EACA1qB,EAAAgE,EAAAhnB,EAAA+E,EAAA2oC,EAAA1mB,IAEAhnB,EAEA2D,EAAAgE,MAAAgJ,GAAAqW,EAAA6mB,MAVAjmC,MAAAA,KAcA,GACAjE,EAAAgE,MAAAgJ,GAfA/I,KAeA,UADA,GAQA,IAojBAqlB,EApjBA6gB,EAAAhrB,EAAAxW,OACAf,UAAA,aACArB,KAAA,SAAAsM,EAAA7F,GACA,IACAoB,EAAAmY,EAAA7R,EAAAlO,EAsDA,GApDAqM,IAHA5O,KAIA+I,QAAAA,EAAAA,GAAAoa,EAAAE,MAEA5qB,EAAAmW,IANA5O,KAQA4O,SAAAA,GAGAzE,EADA,MAAAyE,EAAAsD,OAAA,IAAA,MAAAtD,EAAAsD,OAAAtD,EAAAzX,OAAA,IAAAyX,EAAAzX,QAAA,GACA,KAAAyX,EAAA,MAEA62B,EAAAt0B,KAAAvC,IAIAzE,EAAA,IAEAmY,EAAAa,EAAAa,eAAApV,GAEAsM,EAAA1hB,cAAAuP,KACAxG,EAAAwG,KAIA0H,EAAAke,EAAAE,KAAA1kB,EAAA,GAAAgZ,EAAAD,SAAAna,OAIAuZ,GAAA7R,KAMAyK,EAAAziB,SAAAsQ,KACAA,EAAA4lB,EAAA1D,KAAAliB,IAGAuZ,EAAAqM,EAAAnC,YAAAzjB,EAAA6F,KAKA0T,EAFA1T,IAAAjW,QAAAK,EAAA4V,GAEAA,GAGAA,IAOA0T,IAEA9mB,EAAAuE,MAzDAC,KAyDAsiB,GAEA/f,GACA,IAAA,IAAAjL,KAAAiL,EAEA2Y,EAAA/iB,WAAA6H,KAAA1I,IACA0I,KAAA1I,GAAAiL,EAAAjL,IAEA0I,KAAAqZ,KAAA/hB,EAAAiL,EAAAjL,IAMA,OAvEA0I,QA2EAuF,EAAA,WACAggC,EAAA,SAAA1sC,GACA,OAAAA,aAAAqtC,GAEA5jC,KAAA,SAAAsM,EAAA7F,GACA,OAAA,IAAAm9B,EAAAt3B,EAAA7F,IAGA,IA/LAhN,EAAAgN,EAAAggB,EA+LA1D,EAAA,SAAAzW,EAAA7F,GACA,IAAA5Q,EAAAyW,GAIA,OAAA22B,EAAA32B,GACAA,EAEA7F,GAAAw8B,EAAAx8B,IAAAtQ,EAAAmW,GACA7F,EAAAkiB,KAAArc,GAEAtM,KAAAsM,EAAA7F,GATA+uB,EAAAf,MAAA,WACAnoB,EAAAyW,MAYAA,EAAA3oB,GAAAwpC,EAAAvsC,UACAuhB,EAAApb,MAAAulB,EAAA3oB,IAGAvF,OAAA,EAEAwF,IAAA,SAAAD,GACA,OAAA2oB,EAAAnoB,EAAAge,EAAAve,IAAAqD,KAAA,SAAAsjB,EAAAjsB,GACA,OAAAqF,EAAAzE,KAAAqrB,EAAAjsB,EAAAisB,QAIAxnB,MAAA,WACA,OAAAupB,EAAAvpB,EAAAiE,MAAAC,KAAAN,aAGA5H,QAAA,WACA,OAAAA,EAAAiI,MAAAC,KAAAN,YAGAgH,IAAA,SAAAvJ,GACA,YAAA1C,IAAA0C,EAAArB,EAAA7D,KAAA+H,MAAAA,KAAA7C,GAAA,EAAAA,EAAAA,EAAA6C,KAAA7I,SAGA8E,QAAA,WACA,OAAAA,EAAA8D,MAAAC,KAAAN,YAGAsG,KAAA,WACA,OAAAA,EAAAjG,MAAAC,KAAAN,YAGAymC,QAAA,WACA,OAAArqC,EAAA7D,KAAA+H,OAGA86B,KAAA,WACA,OAAA96B,KAAA7I,QAGAgQ,OAAAy+B,EAAAziB,EAAAhc,OAAAgc,GAEAtiB,KAAA,SAAAhE,GAEA,OADAqe,EAAAra,KAAAb,KAAAnD,GACAmD,MAGApF,OAAA,SAAAgU,GACA,OAAAzW,EAAAyW,GAAA5O,KAAAsrB,IAAAtrB,KAAAsrB,IAAA1c,IACAyW,EAAAzqB,EAAA3C,KAAA+H,KAAA,SAAA8gB,GACA,OAAA6N,EAAAnoB,QAAAsa,EAAAlS,OAIA1H,IAAA,SAAA0H,EAAA7F,GACA,OAAAsc,EAAAnoB,EAAA8C,KAAAmmC,UAAA9pC,OAAAgpB,EAAAzW,EAAA7F,GAAAo9B,cAGA7gB,GAAA,SAAA1W,GACA,GAAA5O,KAAA7I,OAAA,EAAA,CAEA,GAAA+jB,EAAAziB,SAAAmW,GACA,OAAA42B,EAAAvtC,KAFA+H,KAEA,SAAAof,GACA,OAAAuP,EAAAnoB,QAAA4Y,EAAAxQ,KAEA,GAAAsM,EAAAliB,YAAA4V,GACA,OAAA42B,EAAAvtC,KANA+H,KAMA,SAAAof,GACA,OAAAlE,EAAAlf,QAAAojB,EAAAxQ,IAAA,IAEA,GAAAsM,EAAA7iB,WAAAuW,GACA,OAAA42B,EAAAvtC,KAVA+H,KAUA,SAAAof,GACA,OAAAA,GAAAxQ,IAIA,OAAA,GAGA0c,IAAA,SAAA1c,GACA,IAAA0T,KACA,GAAAnqB,EAAAyW,SAAAnU,IAAAmU,EAAA3W,KACA+H,KAAAa,KAAA,SAAA1D,EAAAsT,GACA7B,EAAA3W,KAAA+H,KAAA7C,EAAAsT,IAAA6R,EAAA9mB,KAAAwE,YAEA,CACA,IAAAomC,EAAA,iBAAAx3B,EAAA5O,KAAApF,OAAAgU,GACA5V,EAAA4V,IAAAzW,EAAAyW,EAAAtT,MAAAQ,EAAA7D,KAAA2W,GAAAyW,EAAAzW,GACA5O,KAAAlI,QAAA,SAAAwrB,GACA8iB,EAAAnqC,QAAAqnB,GAAA,GAAAhB,EAAA9mB,KAAA8nB,KAGA,OAAA+B,EAAA/C,IAGArjB,IAAA,SAAA2P,GACA,OAAA5O,KAAApF,OAAA,WACA,OAAApC,EAAAoW,GACAuU,EAAAF,SAAAjjB,KAAA4O,GACAyW,EAAArlB,MAAAirB,KAAArc,GAAAksB,UAIAt8B,GAAA,SAAArB,GACA,OAAA,IAAAA,EAAA6C,KAAAlE,MAAAqB,GAAA6C,KAAAlE,MAAAqB,GAAAA,EAAA,IAGAxB,MAAA,WACA,OAAAqE,KAAAxB,GAAA,IAGAuqB,KAAA,WACA,OAAA/oB,KAAAxB,IAAA,IAGAysB,KAAA0a,EAAAhX,EAAAnC,YAAAmC,GAEApJ,QAAAogB,EAAAhX,EAAApJ,QAAAoJ,GAaA0X,QAAAV,EAAAhX,EAAAtC,UAAAsC,GAEA2X,cAjVAvqC,EAiVA4yB,EAAAtC,UAjVAtjB,EAiVA4lB,EAhVA,SAAA4X,EAAA33B,GAEA9S,EAAA7D,KAAAyH,WADA,IAMArE,EAAA2E,KAAArD,IAAA,SAAAQ,EAAAiiB,GAGA,OAAArjB,EAAAgE,MAAAgJ,EAAAggB,GAAA3J,EAAAmnB,IAAAnnB,EAAAxQ,EAAA23B,MAGA,OAAAxd,GAAAna,EACAvT,EAAAT,OAAAgU,GAEAvT,IAmUAmH,OAAAmjC,EAAAhX,EAAAnsB,OAAAmsB,GAEAxI,SAAAwf,EAAAhX,EAAAxI,SAAAwI,GAEA/K,SAAA8hB,EAAAviB,EAAAS,SAAAT,GAEAmB,MAAAshB,EAAAziB,EAAAmB,MAAAnB,GAGAmN,MAAA,SAAApQ,GACA,OAAAhF,EAAAve,IAAAqD,KAAA,SAAAsjB,GACA,OAAAA,EAAApD,MAIAsmB,UAAA,SAAAC,GACA,IAAApiC,EAAAghB,EAAAohB,GAEA,OADApiC,EAAAqiC,WAAA1mC,KACAqE,GAGAsiC,YAAA,SAAAC,GACA,OAAA5mC,KAAA8H,OAAA8+B,GAAAz/B,UAGA0/B,KAAA,SAAAC,GACA,IAAA/qC,EAAA5D,EAAA2uC,GACA,GAAA9mC,KAAA,KAAAjE,EACA,IAAAggB,EAAAsJ,EAAAyhB,GAAApgC,IAAA,GACAjG,EAAAsb,EAAAmF,YAAAlhB,KAAA7I,OAAA,EAEA,OAAA6I,KAAAa,KAAA,SAAA3F,EAAAuV,GACA4U,EAAArlB,MAAA+mC,QACAhrC,EAAA+qC,EAAA7uC,KAAA+H,KAAA9E,EAAAuV,GACAhQ,EAAAsb,EAAAyG,WAAA,GAAAzG,MAKAgrB,QAAA,SAAAC,GACA,GAAAhnC,KAAA,GAAA,CAEA,IAAAmmB,EAEA,IAHAd,EAAArlB,KAAA,IAAA8H,OAAAk/B,EAAA3hB,EAAA2hB,KAGA7gB,EAAA6gB,EAAA7gB,YAAAhvB,QACA6vC,EAAA7gB,EAAAxqB,QAEA0pB,EAAA2hB,GAAAvkB,OAAAziB,MAEA,OAAAA,MAGAinC,UAAA,SAAAD,GACA,IAAAjrC,EAAA5D,EAAA6uC,GACA,OAAAhnC,KAAAa,KAAA,SAAA3F,EAAAuV,GACA,IAAAtF,EAAAka,EAAArlB,MACA4jB,EAAAzY,EAAAyY,WACA7H,EAAAhgB,EAAAirC,EAAA/uC,KAAA+H,KAAA9E,EAAAuV,GAAAu2B,EACApjB,EAAAzsB,OAAAysB,EAAAmjB,QAAAhrB,GAAA5Q,EAAAsX,OAAA1G,MAIA0L,OAAA,SAAA7Y,GAWA,OAVA,IAAA5O,KAAAwC,SAAA2jB,WAAAhvB,OAEA6I,KAAAwC,OAAAoM,GAAA0c,IAAA,QAAAzqB,KAAA,WACAwkB,EAAArlB,MAAA2mC,YAAA31B,SAAAqT,eAAArkB,KAAA+jB,WAAA,GAAAgN,gBAGA/wB,KAAAwC,SAAA3B,KAAA,WACAwkB,EAAArlB,MAAA2mC,YAAAthB,EAAArlB,MAAAmmB,cAGAnmB,MAGAS,MAAA,WACA,OAAAT,KAAArD,IAAA,WACA,OAAAqD,KAAAwiB,WAAA,MAIA/B,KAAAmlB,EAAAnC,EAAAhjB,KAAAgjB,GAEA6B,OAAA,SAAAvM,GACA,OAAA/4B,KAAAa,KAAA,WACA,IAAAyiB,EAAA+B,EAAArlB,YACAvF,IAAAs+B,EAAA,QAAAzV,EAAArD,IAAA,WAAA8Y,GAAAzV,EAAA1C,OAAA0C,EAAA7C,UAIA1G,KAAA,SAAAnL,GACA,OAAAyW,EAAArlB,KAAAswB,MAAA,2BAAA11B,OAAAgU,GAAA,MAGAs4B,QAAAvB,EAAAhX,EAAAzB,iBAAAyB,GAEA5mB,KAAA,SAAA6G,GACA,OAAAyW,EAAArlB,KAAAswB,MAAA,uBAAA11B,OAAAgU,GAAA,MAGAu4B,QAAAxB,EAAAhX,EAAA1B,aAAA0B,GAEAxB,SAAAwY,EAAAhX,EAAAxB,SAAAwB,GAEAva,KAAA4xB,EAAA7iB,EAAA/O,KAAA+O,EAAAA,EAAA/O,MAEAzK,KAAAq8B,EAAAzV,EAAA5mB,KAAA4mB,EAAAA,EAAA5mB,MAEA0P,KAAA0sB,EAAAxV,EAAAlX,KAAAkX,EAAAA,EAAAlX,MAEAqX,WAAAkV,EAAArV,EAAAG,WAAAH,GAEAvuB,KAAA+jC,EAAAxV,EAAAvuB,KAAAuuB,EAAAA,EAAAvuB,MAEA6uB,WAAA+U,EAAArV,EAAAM,WAAAN,GAEA3pB,KAAAm/B,EAAAxV,EAAA3pB,KAAA2pB,EAAAA,EAAA3pB,MAEAgqB,WAAAgV,EAAArV,EAAAK,WAAAL,GAEAjX,IAAA0sB,EAAAzV,EAAAjX,IAAAiX,EAAAA,EAAAjX,KAEAnd,OAAA6pC,EAAA9I,EAAAb,aAAAa,EAAAA,EAAAb,cAEAze,MAAAmoB,EAAArmB,EAAAO,IAAAP,GAEAO,IAAA8lB,EAAArmB,EAAAO,IAAAP,GAEAxkB,MAAA,SAAAkkB,GACA,OAAAA,EACApf,KAAA/D,QAAAopB,EAAAjG,GAAA,IAEApf,KAAAwC,SAAA2jB,WAAAlqB,QAAA+D,KAAA,KAKAwgB,SAhbA,SAAAzkB,EAAAgN,GACA,OAAA,WACA,IACAtJ,EAAA3D,EAAA7D,KAAAyH,WACA,OAAA8lC,EAAAvtC,KAFA+H,KAEA,SAAAof,GACA,OAAArjB,EAAAgE,MAAAgJ,GAAAqW,GAAA/iB,OAAAoD,OA2aA2nC,CAAA1nB,EAAAc,SAAAd,GAGAG,SAAAgmB,EAAAnmB,EAAAG,SAAAH,EAAAA,EAAArf,WAGAsgB,YAAAklB,EAAAnmB,EAAAiB,YAAAjB,EAAAA,EAAArf,WAGAghB,YAAAwkB,EAAAnmB,EAAA2B,YAAA3B,EAAAA,EAAArf,WAEAw8B,UAAAmJ,EAAA9I,EAAAL,UAAAK,GAEAT,WAAAuJ,EAAA9I,EAAAT,WAAAS,GAEAtW,SAAA,SAAAlkB,GACA,GAAA1C,KAAA7I,OAAA,CAEA,GAAAuL,EAKA,OAJAA,EAAAo+B,IAAAp+B,EAAAo+B,GAAA3pC,UACAuL,EAAAwY,EAAAza,MAAAiC,IACAo+B,GAAAp+B,EAAAo+B,GAAA,IAEA9gC,KAAAa,KAAA,WACAq8B,EAAAwD,MAAA1gC,KAAA0C,KAGA,IAAA0c,EAAApf,KAAA,GAEA,OAAAk9B,EAAAtC,iBAAAxb,KAKAsG,aAAAggB,EAAAxI,EAAAxX,aAAAwX,KAIA7X,EAAA3oB,GAAA2qC,OAAAhiB,EAAA3oB,GAAAyK,OAEAke,EAAA3oB,GAAAw4B,MAAA,SAAAoS,EAAAC,GACA,OAAAvnC,KAAA8zB,WAAAwT,GAAAvT,WAAAwT,GAAAD,IAGAjiB,EAAA3oB,GAAAo+B,KAAAkL,EAAA9I,EAAApC,KAAAoC,GAEA7X,EAAA3oB,GAAAqqB,MAAAif,EAAA9I,EAAAnW,MAAAmW,EAAAA,EAAAnW,OAEA1B,EAAA3oB,GAAAsqB,OAAAgf,EAAA9I,EAAAlW,OAAAkW,EAAAA,EAAAlW,QAEA3B,EAAA3oB,GAAAq+B,WAAAiL,EAAA9I,EAAAnC,WAAAmC,EAAAnC,aAEA,QAAA,UAAAjjC,QAAA,SAAAkjC,GACA,IAAAwM,EAAAxM,EAAA98B,QAAA,IAAA,SAAAupC,GACA,OAAAA,EAAA,GAAA51B,gBAGAwT,EAAA3oB,GAAA,QAAA8qC,GAAA,SAAAE,EAAAtvC,GAWA,GAVAsH,UAAAvI,OACA,kBAAAuwC,IACAtvC,EAAAsvC,EACAA,GAAA,IAGAA,GAAA,EACAtvC,OAAAqC,QAGAA,IAAArC,EAAA,CACA,IAAAkrB,EAAAtjB,KAAA,GACA,IAAAsjB,EACA,OAEA,IAAAqkB,EAAAzK,EAAApC,KAAAxX,GACA,GAAAokB,EAAA,CACA,IAAA1L,EAAAkB,EAAAxC,cAAApX,GACAqkB,EAAA5gB,MAAA4gB,EAAA5gB,MAAAiV,EAAAlV,KAAAkV,EAAAtE,MACAiQ,EAAA3gB,OAAA2gB,EAAA3gB,OAAAgV,EAAAnV,IAAAmV,EAAAjC,OAEA,MAAA,UAAAiB,EAAA2M,EAAA5gB,MAAA4gB,EAAA3gB,OAEA,OAAAhnB,KAAAa,KAAA,SAAA1D,EAAAmmB,GACA,IAAAskB,KACA5L,EAAAkB,EAAAxC,cAAApX,GACA,UAAA0X,GACA4M,EAAA7gB,MAAA3uB,EACAsvC,IACAE,EAAA7gB,MAAA6gB,EAAA7gB,MAAAiV,EAAAlV,KAAAkV,EAAAtE,SAGAkQ,EAAA5gB,OAAA5uB,EACAsvC,IACAE,EAAA5gB,OAAA4gB,EAAA5gB,OAAAgV,EAAAnV,IAAAmV,EAAAjC,SAGAmD,EAAApC,KAAAxX,EAAAskB,QAOAviB,EAAA3oB,GAAAsgC,WAAAgJ,EAAA9I,EAAArD,YAAAqD,EAAAA,EAAArD,aAEAxU,EAAA3oB,GAAAugC,YAAA+I,EAAA9I,EAAAjC,aAAAiC,EAAAA,EAAAjC,cAEA9X,EAAAkE,SAEA,SAAAwgB,EAAA9rC,EAAAgN,EAAA+8B,GACA,OAAA,SAAA1xB,GACA,IAAA0zB,EAAAxlB,EAAApH,EAAAve,IAAA+C,UAAA,SAAAsB,GAEA,MAAA,WADA8mC,EAAAjwC,EAAAmJ,KACA,SAAA8mC,GAAA,MAAA9mC,EACAA,EAAAmiB,EAAAa,eAAAhjB,KAEA,OAAAshB,EAAAnrB,OAAA,EACA6I,MAEAA,KAAAa,KAAA,SAAA1D,GACApB,EAAAgE,MAAAgJ,GAAA/I,KAAAsiB,EAAAnlB,EAAA,MAEA6C,OAmEA,OA9DAqlB,EAAA3oB,GAAAuL,MAAA4/B,EAAA1kB,EAAAlb,MAAAkb,GAEAkC,EAAA3oB,GAAAspB,QAAA6hB,EAAA1kB,EAAA6C,QAAA7C,GAEAkC,EAAA3oB,GAAAoL,OAAA+/B,EAAA1kB,EAAArb,OAAAqb,GAEAkC,EAAA3oB,GAAA+lB,OAAAolB,EAAA1kB,EAAAV,OAAAU,GAGAjI,EAAAra,MACAknC,SAAA,SACAC,UAAA,UACAjiB,aAAA,SACAkiB,YAAA,QACAC,WAAA,eACA,SAAA5wC,EAAA6wC,GACA9iB,EAAA3oB,GAAApF,GAAA,SAAAsX,GAOA,IANA,IAAAw5B,EACA/jC,KACAgkC,EAAAhjB,EAAAzW,GACAma,EAAAsf,EAAAlxC,OAAA,EACAE,EAAA,EAEAA,GAAA0xB,EAAA1xB,IACA+wC,EAAA/wC,IAAA0xB,EAAA/oB,KAAAA,KAAAS,OAAA,GACA4kB,EAAAgjB,EAAAhxC,IAAA8wC,GAAAC,GAIA5sC,EAAAuE,MAAAsE,EAAA+jC,EAAA1hC,OAGA,OAAA1G,KAAAwmC,UAAAniC,MA8BAghB,EAneA,GA8qBA,OAxMAA,EAgEA9f,GA/DA7I,GAAAgS,GAAAk3B,EAAA9N,EAAAppB,GAAAopB,GAEAzS,EAAA3oB,GAAAsT,IAAA41B,EAAA9N,EAAA9nB,IAAA8nB,GAEAzS,EAAA3oB,GAAAsS,QAAA42B,EAAA9N,EAAA9oB,QAAA8oB,GAEA,qMAEA5gC,MAAA,KAAAY,QAAA,SAAAyW,GACA8W,EAAA3oB,GAAA6R,GAAA,SAAA3H,EAAA/J,GACA,OAAA,KAAA6C,UACAM,KAAA0O,GAAAH,EAAA3H,EAAA/J,GACAmD,KAAAgP,QAAAT,MAIA8W,EAAA3oB,GAAAmS,IAAA,SAAAN,EAAAK,EAAAhI,EAAA/J,GAYA,OAXAqe,EAAAziB,SAAAmW,IAAAsM,EAAA/iB,WAAA0E,KACAA,EAAA+J,EACAA,EAAAgI,EACAA,EAAA,MAGAsM,EAAA/iB,WAAAyO,KACA/J,EAAA+J,EACAA,EAAA,MAGA5G,KAAA0O,GAAAH,EAAAK,EAAAhI,EAAA/J,EAAA,IAGAwoB,EAAA3oB,GAAAkmC,QAAAgD,EAAAnC,EAAAb,QAAAa,GACApe,EAAA3oB,GAAAsoC,qBAAAY,EAAAnC,EAAAuB,qBAAAvB,GAEApe,EAAA3oB,GAAAkkB,KAAAglB,EAAAnC,EAAA7iB,KAAA6iB,GACApe,EAAA3oB,GAAA+jB,KAAAmlB,EAAAnC,EAAAhjB,KAAAgjB,GACApe,EAAA3oB,GAAA4rC,OAAA1C,EAAAnC,EAAA6E,OAAA7E,GACApe,EAAA3oB,GAAA4nC,OAAAsB,EAAAnC,EAAAa,OAAAb,GACApe,EAAA3oB,GAAA6nC,OAAAqB,EAAAnC,EAAAc,OAAAd,GACApe,EAAA3oB,GAAA8nC,QAAAoB,EAAAnC,EAAAe,QAAAf,GACApe,EAAA3oB,GAAAwoC,WAAAU,EAAAnC,EAAAyB,WAAAzB,GAEApe,EAAA3oB,GAAA+nC,UAAAmB,EAAAnC,EAAAgB,UAAAhB,GACApe,EAAA3oB,GAAA2oC,YAAAO,EAAAnC,EAAA4B,YAAA5B,GACApe,EAAA3oB,GAAAkoC,QAAAgB,EAAAnC,EAAAmB,QAAAnB,GAEApe,EAAA3oB,GAAA6rC,aAAA,SAAAC,GACA,IAAA5hB,EAAA5mB,KAAAigB,IAAA,YACAwoB,EAAA,aAAA7hB,EACA8hB,EAAAF,EAAA,uBAAA,gBACAD,EAAAvoC,KAAAqmC,UAAAzrC,OAAA,WACA,IAAA4H,EAAA6iB,EAAArlB,MACA,QAAAyoC,GAAA,WAAAjmC,EAAAyd,IAAA,cAGAyoB,EAAAtqC,KAAAoE,EAAAyd,IAAA,YAAAzd,EAAAyd,IAAA,cACAzd,EAAAyd,IAAA,iBACAzhB,GAAA,GAEA,MAAA,UAAAooB,GAAA2hB,EAAApxC,OAEAoxC,EADAljB,EAAArlB,KAAA,GAAAsf,eAAAtO,WAMA,SAAAqU,GACAA,EAAA3oB,GAAAyhB,IAAA,WACA,OAAAne,KAAA0mC,YAAArhB,KAGAA,EAAA3oB,GAAAisC,QAAA,WACA,OAAA3oC,KAAAkH,IAAAlH,KAAA0mC,YAAArhB,MAGAA,EAAA3oB,GAAAksC,QAAA,SAAAh6B,GACA,OAAA5O,KAAA0mC,WACA93B,EACA5O,KAAAkH,IAAAlH,KAAA0mC,WAAA9rC,OAAAgU,IAEA5O,KAAAkH,IAAAlH,KAAA0mC,YAGA1mC,MAIA,uGAAA9I,MAAA,KAAAY,QAAA,SAAAooB,GACA,IAAAxjB,EAAA2oB,EAAA3oB,GAAAwjB,GACAmF,EAAA3oB,GAAAwjB,GAAA,WACA,IAAA7b,EAAA3H,EAAAqD,MAAAC,KAAAN,WAEA,OADA2E,EAAAqiC,WAAA1mC,KACAqE,KA1BA,CA6BAkB,GAGA,SAAA8f,GAuEA,IACAwjB,EAvEAxjB,EAAA3oB,GAAA6I,MAAA8f,EAAA3oB,GAAAuuB,KAEA5F,EAAA3oB,GAAAosC,MAAA,SAAAjjB,EAAAe,GAwBA,OALA1L,EAAAziB,SAAAotB,GACAA,EAAA8I,EAAAhC,WAAA9G,GACA0f,EAAA1f,KACAA,EAAAA,EAAA,IAEA7lB,KAAAa,KAAA,SAAAxJ,EAAAoZ,GACA,OAAAmW,GACA,IAAA,SACAzD,EAAArb,OAAA+d,EAAApV,GACA,MACA,IAAA,QACA0S,EAAAlb,MAAA4d,EAAApV,GACA,MACA,IAAA,UACA0S,EAAAjlB,QAAA2nB,EAAApV,GACA,MACA,IAAA,OACA0S,EAAAmB,MAAAuB,GACA1C,EAAAV,OAAAoD,EAAApV,GACA,MACA,IAAA,QACA0S,EAAA6C,QAAAH,EAAApV,GACA,MAEA,QACA0S,EAAAV,OAAAoD,EAAApV,OAKA4U,EAAA3oB,GAAAqsC,WAAA,SAAAC,EAAApiB,GAIA,OAHAoiB,EAAAt/B,WACAs/B,EAAA9tB,EAAA7I,WAAA22B,EAAAt/B,SAAAs/B,IAEAhpC,KAAAyiB,OAAAumB,IAGA3jB,EAAA3oB,GAAAusC,aAAA,SAAAC,EAAAC,GAGA,OAFAnpC,KAAA2gB,YAAAwoB,GACAnpC,KAAA6f,SAAAqpB,GACAlpC,MAGAqlB,EAAA3oB,GAAAusC,aAAA,SAAAC,EAAAC,GAGA,OAFAnpC,KAAA2gB,YAAAwoB,GACAnpC,KAAA6f,SAAAqpB,GACAlpC,MAGAqlB,EAAA3oB,GAAA0sC,kBACAP,EAAA,kBAAA73B,SAAAmC,cAAA,OACA,cACA,YAEA,WACA,OAAAnT,KAAA0O,GAAAm6B,EAAA,uBAAA,SAAAt6B,GACAA,EAAA8iB,qBAKAhM,EAAA3oB,GAAA2sC,gBAAA,WACA,OAAArpC,KAAAgQ,IAAA,yBApFA,CAwFAzK,GAEAA,EAAA7I,GAAA4sC,OAAA,SAAAhyC,EAAAoL,GACA,IAAAlD,EAAA1D,EAAA7D,KAAAyH,UAAA,GACAyL,EAAAnL,KACAupC,EAAAvpC,KAKA,OAHAA,KAAAa,KAAA,WACA0oC,EAAAC,QAAAC,YAAA1pC,MAAAoL,GAAAnL,KAAA1I,GAAA+E,OAAAmD,MAEA+pC,GAGAxtB,EAAAxW,MAAAA,IAGAzO,OAAA,mCACA,sBACA,aACA,SAAAokB,EAAAY,GAEA,IAAA4tB,EAAAC,OAAAD,aACAE,KAAA,EACAC,KAAA,GAEA,OAAAH,IAGA5yC,OAAA,2BACA,sBACA,0BACA,YACA,iBACA,SAAAokB,EAAAmK,EAAAvJ,EAAA4tB,GAEA,IAAAI,EAAAhuB,EAAAguB,IAAA,SAAA5lB,EAAAxhB,GACA,IAAAA,EAAAwY,EAAApb,OACAlE,MAAA,QACAmuC,SAAA,IACAC,SAAA,IACAC,YAAAP,EAAAG,MACAnnC,GAGAo4B,EAAAzV,EAAAnB,GAAA6W,aACAhU,EAAA+T,EAAA/T,MACAC,EAAA8T,EAAA9T,OACA0W,EAAA,EACAC,EAAA,EAEAuM,EAAA7kB,EAAAnB,GAAAiC,SAAAzjB,EAAA9G,OAEAsuC,EAAArpC,KAAA,SAAAxJ,GAEAguB,EAAArlB,MAAAigB,KACA6G,KAAA4W,EACA7W,IAAA8W,EACA/W,SAAA,WACA7F,QAAA,iBAIAre,EAAAunC,aAAAP,EAAAG,MACAlM,GAAAj7B,EAAAsnC,WACAhjB,EAAAtkB,EAAAsnC,WACArM,EAAA,EACAD,GAAAh7B,EAAAqnC,WAGArM,GAAAh7B,EAAAqnC,WACAhjB,EAAArkB,EAAAqnC,WACArM,EAAA,EACAC,GAAAj7B,EAAAsnC,aAOA,OAAAF,IAIAhzC,OAAA,8BACA,sBACA,aACA,SAAAokB,EAAAY,GAKA,IAAAquB,EAAAruB,EAAAquB,OAAA,SAAAjmB,EAAAxhB,GACA,MAAA,IAAAG,MAAA,oCAGA,OAAAsnC,IAGArzC,OAAA,+BACA,sBACA,0BACA,aACA,SAAAokB,EAAAmK,EAAAvJ,GAIA,IAAA0C,EAAA1C,EAAA0C,QAAA,SAAA0F,EAAAxhB,GACA,IAAAA,EAAAwY,EAAApb,OACAlE,MAAA,SACA8G,GACAwnC,EAAA7kB,EAAAnB,GAAAiC,SAAAzjB,EAAA9G,OACAsuC,EAAAjqB,KACA6G,KAAA,MACAD,IAAA,MACAD,SAAA,WACA7F,QAAA,gBAIA,OAAAvC,IAIA1nB,OAAA,iCACA,sBACA,aACA,SAAAokB,EAAAY,GAEA,IAAAsuB,EAAAtuB,EAAAsuB,WACAC,KAAA,EACAvjB,KAAA,EACAD,IAAA,EACA6Q,MAAA,EACAqC,OAAA,EACAuQ,OAAA,GAGA,OAAAF,IAIAtzC,OAAA,4BACA,sBACA,0BACA,2BACA,yBACA,YACA,eACA,SAAAokB,EAAAqV,EAAA5B,EAAAuO,EAAAphB,EAAAohB,EAAAkN,GAEA,IAAAG,EAAAzuB,EAAAyuB,KAAA,SAAArmB,EAAAxhB,GACA,IAAAA,EAAAwY,EAAApb,OACAlE,MAAA,iBACA8G,GAEAo4B,EAAAoC,EAAAnC,WAAA7W,GACAsmB,GACAhuC,EAAA,EACAyY,EAAA,EACAnE,EAAAgqB,EAAA/T,MACA0jB,EAAA3P,EAAA9T,QAEAb,EAAAwI,EAAAxI,SAAAjC,EAAAxhB,EAAA9G,QAEAuqB,EAAAA,EAAAvrB,OAAA,SAAAU,GAAA,MAAA,UAAAi1B,EAAA3pB,KAAAtL,EAAA,YACAe,OAAA8pB,EAAAvrB,OAAA,SAAAU,GAAA,MAAA,UAAAi1B,EAAA3pB,KAAAtL,EAAA,cAGAxD,QAAA,SAAAwD,GACA,IAAAovC,EAAAna,EAAA3pB,KAAAtL,EAAA,UACAqvC,EAAAzN,EAAApC,KAAAx/B,GAEA,IAAAovC,EACA,MAAA,IAAA7nC,MAAA,uBAAAvH,EAAAqL,IAKA+Y,OAAAO,IAAAH,KACA8G,SAAA,aAIA,IAAAgkB,GACA9jB,KAAA0jB,EAAAhuC,EACAqqB,IAAA2jB,EAAAv1B,GAKA,OAAAy1B,GAAA,UAAAA,GACAE,EAAA7jB,MAAAyjB,EAAA15B,EACA05B,EAAAC,GAAAE,EAAA3jB,OAIA4jB,EAAA/jB,IAAA2jB,EAAAv1B,EAAAu1B,EAAAC,GAEA,QAAAC,GAAA,SAAAA,GACAE,EAAA5jB,OAAAwjB,EAAAC,EACAD,EAAA15B,GAAA65B,EAAA5jB,MACA,QAAAgX,IACAyM,EAAAhuC,GAAAmuC,EAAA5jB,MAEA6jB,EAAA9jB,KAAA0jB,EAAAhuC,EAAAguC,EAAA15B,GAEA,UAAA45B,IACAE,EAAA7jB,MAAAyjB,EAAA15B,EACA85B,EAAA5jB,OAAAwjB,EAAAC,GAGAvN,EAAAV,aAAAlhC,EAAAsvC,MAMA,OAAAL,IAIAzzC,OAAA,4BACA,sBACA,0BACA,aACA,SAAAokB,EAAAmK,EAAAvJ,GAOA,IAAA+uB,EAAA/uB,EAAA+uB,KAAA,SAAA3mB,EAAAxhB,GACA,IAAAA,EAAAwY,EAAApb,OACAlE,MAAA,SACA8G,GACAwnC,EAAA7kB,EAAAnB,GAAAiC,SAAAzjB,EAAA9G,OACAsuC,EAAAjqB,KACA6G,KAAA,MACAD,IAAA,MACAD,SAAA,WACA7F,QAAA,kBAIA,OAAA8pB,IAIA/zC,OAAA,4BACA,sBACA,aACA,SAAAokB,EAAAY,GAEA,IAAAgvB,EAAAhvB,EAAAgvB,KAAA,SAAA5mB,EAAAxhB,GACA,MAAA,IAAAG,MAAA,oCAGA,OAAAioC,IAGAh0C,OAAA,+BACA,sBACA,2BACA,yBACA,2BACA,aACA,SAAAokB,EAAAyT,EAAAuO,EAAAxd,EAAA5D,GAIA,IAAAivB,EAAA7vB,EAAAxW,OACAsmC,gBAAA,SAAA7kB,EAAAykB,EAAA1mB,GAEA,IAAA1Z,EAAAxK,KAAAwK,EACAygC,EAAAzgC,EAAAygC,WAEA,GAAAzgC,EAAA0gC,YAKAD,EAAAC,YAAA1gC,EAAA0gC,gBALA,CACA,IAAAC,EAAAhlB,EAAA,GAEA8kB,EAAAC,YAAAC,GAAAA,EAAAP,SAAAQ,cAAAR,EAAA7jB,MAKA,IAAAmkB,EAAAD,EAAAC,aAAA1gC,EAAA6gC,OAGAC,EAAAV,EAAA7jB,MAAAvc,EAAA6gC,OAEA,GAAA7gC,EAAA+gC,KACAA,EAAA/gC,EAAA+gC,SACA,CACA,IAAAA,EAAAD,EAAAJ,EAEAM,EAAAN,EAAAI,EAAAJ,EAEAO,EAAAD,GAAAA,EAAA,EAAA,QAAA,QACAD,EAAAxkC,KAAA0kC,GAAAF,GAEAN,EAAAM,KAAAxkC,KAAAw0B,IAAAgQ,EAAA,IAGAG,cAAA,SAAApwC,EAAAoiC,EAAAC,EAAAgO,GACAjsB,EAAAO,IAAA3kB,GACAsrB,SAAA,aAEA+kB,EAEAzO,EAAA0O,qBAAAtwC,GACAwrB,KAAA4W,EACA7W,IAAA8W,IAGAriC,EAAA0E,KAAAwK,EAAAqhC,WAAAvwC,EAAA0E,KAAAwK,EAAAqhC,WAAAnO,EAAAC,GAAAriC,EAAAwwC,OAAApO,EAAAC,IAGAoO,aAAA,SAAAC,GACA,IAAAxhC,EAAAxK,KAAAwK,EACAygC,EAAAzgC,EAAAygC,WAEA,GAAAe,EAAA,EAEA,OAAAf,EAAAgB,MAOA,IAJA,IAAAC,KAEAC,EAAAlB,EAAAM,KAAA,EAAAS,EAEA30C,EAAA,EAAAA,EAAA80C,EAAA90C,IAAA,CAEA,IAAA+0C,EAAAnB,EAAAgB,MAAAnwC,MAAAzE,EAAAA,EAAA20C,GAEAE,EAAA70C,GAAA0P,KAAAw0B,IAAAx7B,MAAAgH,KAAAqlC,GAEA,OAAAF,GAGAG,uBAAA,SAAA/wC,GACA,IAAAkP,EAAAxK,KAAAwK,EACAygC,EAAAzgC,EAAAygC,WAEAqB,EAAApP,EAAAnB,WAAAzgC,GAEAgD,EAAAguC,EAAAvlB,MAAAkkB,EAAAC,YACAO,EAAAntC,GAAAA,EAAA,EAAA,QAAA,OAEA0tC,EAAAjlC,KAAA0kC,GAAAa,EAAAvlB,MAAAkkB,EAAAC,aACAc,EAAAjlC,KAAAwlC,IAAAP,EAAAf,EAAAM,MAgBA,IAdA,IAAAW,EAAAlsC,KAAA+rC,aAAAC,GAEAQ,EAAAzlC,KAAAwlC,IAAAxsC,MAAAgH,KAAAmlC,GACAO,EAAAP,EAAAjwC,QAAAuwC,GAGA5lB,GACA8W,EAAAuN,EAAAC,YAAAuB,EACA9O,EAAA6O,GAIAE,EAAAF,EAAAF,EAAAtlB,OACA2lB,EAAA1B,EAAAM,KAAA,EAAAW,EAAA/0C,OACAE,EAAA,EAAAA,EAAAs1C,EAAAt1C,IACA4zC,EAAAgB,MAAAQ,EAAAp1C,GAAAq1C,EAEA,OAAA9lB,GAGAgmB,aAAA,SAAAhxC,GACA,OAAAA,GAGAixC,aAAA,SAAA1mB,EAAAykB,EAAA1mB,GACA,IAAA1Z,EAAAxK,KAAAwK,EACAygC,EAAAzgC,EAAAygC,WACAjrC,KAAAgrC,gBAAA7kB,EAAAykB,EAAA1mB,GAGA+mB,EAAAgB,SACA,IAAA,IAAA50C,EAAA,EAAAA,EAAA4zC,EAAAM,KAAAl0C,IACA4zC,EAAAgB,MAAAzwC,KAAA,GAEAyvC,EAAA6B,KAAA,GAGAC,YAAA,SAAA5mB,EAAAykB,EAAA1mB,GACAlkB,KAAA6sC,aAAA1mB,EAAAykB,EAAA1mB,GACA,IAAA8oB,KAUA,OARA7mB,EAAAruB,QAAA,SAAAwD,GAEA,IAAAsrB,EAAA5mB,KAAAqsC,uBAAA/wC,GAEAsrB,EAAAtrB,KAAAA,EAEA0xC,EAAAxxC,KAAAorB,IACA5mB,MACAgtC,GAGAC,YAAA,SAAAD,EAAA9oB,GACA,IAAA1Z,EAAAxK,KAAAwK,EACA,GAAAA,EAAA0iC,QAAA,CAKA,IAAAjC,EAAAzgC,EAAAygC,WACA6B,EAAA/lC,KAAAw0B,IAAAx7B,MAAAgH,KAAAkkC,EAAAgB,OAEA/nB,EAAAipB,QAAAvvB,MAAAoJ,OAAA8lB,EAAA,KAEAE,EAAAl1C,QAAA,SAAAs1C,GACAptC,KAAA0rC,cAAA0B,EAAA9xC,KAAA8xC,EAAA1P,EAAA0P,EAAAzP,EAAAyP,EAAAzB,YACA3rC,OAIA2pC,OAAA,WACA,IAAAn/B,EAAAxK,KAAAwK,EACA0Z,EAAA1Z,EAAA0Z,UACAiC,EAAAwI,EAAAxI,SAAAjC,EAAA1Z,EAAA5O,OACAgvC,EAAA1N,EAAAnC,WAAA7W,GAEA8oB,EAAAhtC,KAAA+sC,YAAA5mB,EAAAykB,EAAA1mB,GACAlkB,KAAAitC,YAAAD,EAAA9oB,IAGA5hB,KAAA,SAAA4hB,EAAAxhB,GACA,IAAA8H,EAAAxK,KAAAwK,EAAA0Q,EAAApb,OACAotC,SAAA,EACAhC,YAAA,EACAK,KAAA,EACAF,OAAA,EACAQ,UAAA,SACAZ,YACAgB,MAAA,KACAf,YAAA,EACAK,KAAA,IAEA7oC,GACA8H,EAAA0Z,UAAAA,KAKAmpB,EAAAvxB,EAAAuxB,QAAA,SAAAnpB,EAAAxhB,GACA,IAAA4qC,EAAA,IAAAvC,EAAA7mB,EAAAxhB,GACA4qC,EAAA3D,UAGA,OAAA0D,IAGAv2C,OAAA,4BACA,sBACA,0BACA,aACA,SAAAokB,EAAAmK,EAAAvJ,GAIA,IAAAyxB,EAAAzxB,EAAAyxB,KAAA,SAAArpB,EAAAxhB,GACA,IAAAA,EAAAwY,EAAApb,OACAlE,MAAA,SACA8G,GACAwnC,EAAA7kB,EAAAnB,GAAAiC,SAAAzjB,EAAA9G,OACAsuC,EAAAjqB,KACA6G,KAAA,MACAD,IAAA,MACAD,SAAA,WACA7F,QAAA,eAIA,OAAAwsB,IAIAz2C,OAAA,6BACA,sBACA,0BACA,aACA,SAAAokB,EAAAmK,EAAAvJ,GAEA,IAAA2F,EAAA3F,EAAA2F,MAAA,SAAAyC,EAAAxhB,GACA,IAAAA,EAAAwY,EAAApb,OACAlE,MAAA,SACA8G,GACAwnC,EAAA7kB,EAAAnB,GAAAiC,SAAAzjB,EAAA9G,OAEAsuC,EAAAjqB,KACA8G,MAAA,OACAhG,QAAA,cAGAmpB,EAAArpC,KAAA,WACAwkB,EAAArlB,MAAAmmB,WAAAlG,KACAc,QAAA,kBAKA,OAAAU,IAIA3qB,OAAA,4BACA,YACA,QACA,WACA,YACA,SACA,cACA,SACA,SACA,YACA,SACA,WACA,SAAAglB,GAEA,OAAAA,IAEAhlB,OAAA,uBAAA,4BAAA,SAAA02C,GAAA,OAAAA","file":"../skylark-domx-layout-all.js","sourcesContent":["define('skylark-langx/_attach',[],function(){\r\n    return  function attach(obj1,path,obj2) {\r\n        if (typeof path == \"string\") {\r\n            path = path.split(\".\");//[path]\r\n        };\r\n        var length = path.length,\r\n            ns=obj1,\r\n            i=0,\r\n            name = path[i++];\r\n\r\n        while (i < length) {\r\n            ns = ns[name] = ns[name] || {};\r\n            name = path[i++];\r\n        }\r\n\r\n        return ns[name] = obj2;\r\n    }\r\n});\ndefine('skylark-langx/skylark',[\r\n    \"./_attach\"\r\n], function(_attach) {\r\n    var skylark = {\r\n    \tattach : function(path,obj) {\r\n    \t\treturn _attach(skylark,path,obj);\r\n    \t}\r\n    };\r\n    return skylark;\r\n});\r\n\ndefine('skylark-utils-dom/skylark',[\"skylark-langx/skylark\"], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylark-langx/types',[\r\n],function(){\r\n    var toString = {}.toString;\r\n    \r\n    var type = (function() {\r\n        var class2type = {};\r\n\r\n        // Populate the class2type map\r\n        \"Boolean Number String Function Array Date RegExp Object Error Symbol\".split(\" \").forEach(function(name) {\r\n            class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\r\n        });\r\n\r\n        return function type(obj) {\r\n            return obj == null ? String(obj) :\r\n                class2type[toString.call(obj)] || \"object\";\r\n        };\r\n    })();\r\n\r\n    function isArray(object) {\r\n        return object && object.constructor === Array;\r\n    }\r\n\r\n\r\n    /**\r\n     * Checks if `value` is array-like. A value is considered array-like if it's\r\n     * not a function/string/element and has a `value.length` that's an integer greater than or\r\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\r\n     *\r\n     * @category Lang\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\r\n     * @example\r\n     *\r\n     * isArrayLike([1, 2, 3])\r\n     * // => true\r\n     *\r\n     * isArrayLike(document.body.children)\r\n     * // => false\r\n     *\r\n     * isArrayLike('abc')\r\n     * // => true\r\n     *\r\n     * isArrayLike(Function)\r\n     * // => false\r\n     */    \r\n    function isArrayLike(obj) {\r\n        return !isString(obj) && !isHtmlNode(obj) && typeof obj.length == 'number' && !isFunction(obj);\r\n    }\r\n\r\n    /**\r\n     * Checks if `value` is classified as a boolean primitive or object.\r\n     *\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\r\n     * @example\r\n     *\r\n     * isBoolean(false)\r\n     * // => true\r\n     *\r\n     * isBoolean(null)\r\n     * // => false\r\n     */\r\n    function isBoolean(obj) {\r\n        return typeof(obj) === \"boolean\";\r\n    }\r\n\r\n    function isDefined(obj) {\r\n        return typeof obj !== 'undefined';\r\n    }\r\n\r\n    function isDocument(obj) {\r\n        return obj != null && obj.nodeType == obj.DOCUMENT_NODE;\r\n    }\r\n\r\n    function isEmptyObject(obj) {\r\n        var name;\r\n        for (name in obj) {\r\n            if (obj[name] !== null) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n    /**\r\n     * Checks if `value` is classified as a `Function` object.\r\n     *\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\r\n     * @example\r\n     *\r\n     * isFunction(parseInt)\r\n     * // => true\r\n     *\r\n     * isFunction(/abc/)\r\n     * // => false\r\n     */\r\n    function isFunction(value) {\r\n        return type(value) == \"function\";\r\n    }\r\n\r\n    function isHtmlNode(obj) {\r\n        return obj && obj.nodeType; // obj instanceof Node; //Consider the elements in IFRAME\r\n    }\r\n\r\n    function isInstanceOf( /*Object*/ value, /*Type*/ type) {\r\n        //Tests whether the value is an instance of a type.\r\n        if (value === undefined) {\r\n            return false;\r\n        } else if (value === null || type == Object) {\r\n            return true;\r\n        } else if (typeof value === \"number\") {\r\n            return type === Number;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else if (typeof value === \"boolean\") {\r\n            return type === Boolean;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else {\r\n            return (value instanceof type) || (value && value.isInstanceOf ? value.isInstanceOf(type) : false);\r\n        }\r\n    }\r\n\r\n    function isNull(value) {\r\n      return type(value) === \"null\";\r\n    }\r\n\r\n    function isNumber(obj) {\r\n        return typeof obj == 'number';\r\n    }\r\n\r\n    function isObject(obj) {\r\n        return type(obj) == \"object\";\r\n    }\r\n\r\n    function isPlainObject(obj) {\r\n        return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype;\r\n    }\r\n\r\n    function isString(obj) {\r\n        return typeof obj === 'string';\r\n    }\r\n\r\n    function isWindow(obj) {\r\n        return obj && obj == obj.window;\r\n    }\r\n\r\n    function isSameOrigin(href) {\r\n        if (href) {\r\n            var origin = location.protocol + '//' + location.hostname;\r\n            if (location.port) {\r\n                origin += ':' + location.port;\r\n            }\r\n            return href.startsWith(origin);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks if `value` is classified as a `Symbol` primitive or object.\r\n     *\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\r\n     * @example\r\n     *\r\n     * _.isSymbol(Symbol.iterator);\r\n     * // => true\r\n     *\r\n     * _.isSymbol('abc');\r\n     * // => false\r\n     */\r\n    function isSymbol(value) {\r\n      return typeof value == 'symbol' ||\r\n        (isObjectLike(value) && objectToString.call(value) == symbolTag);\r\n    }\r\n\r\n    function isUndefined(value) {\r\n      return value === undefined\r\n    }\r\n\r\n    return {\r\n\r\n        isArray: isArray,\r\n\r\n        isArrayLike: isArrayLike,\r\n\r\n        isBoolean: isBoolean,\r\n\r\n        isDefined: isDefined,\r\n\r\n        isDocument: isDocument,\r\n\r\n        isEmpty : isEmptyObject,\r\n\r\n        isEmptyObject: isEmptyObject,\r\n\r\n        isFunction: isFunction,\r\n\r\n        isHtmlNode: isHtmlNode,\r\n\r\n        isNull: isNull,\r\n\r\n        isNumber: isNumber,\r\n\r\n        isNumeric: isNumber,\r\n\r\n        isObject: isObject,\r\n\r\n        isPlainObject: isPlainObject,\r\n\r\n        isString: isString,\r\n\r\n        isSameOrigin: isSameOrigin,\r\n\r\n        isSymbol : isSymbol,\r\n\r\n        isUndefined: isUndefined,\r\n\r\n        isWindow: isWindow,\r\n\r\n        type: type\r\n    };\r\n\r\n});\ndefine('skylark-langx/arrays',[\r\n\t\"./types\"\r\n],function(types,objects){\r\n\tvar filter = Array.prototype.filter,\r\n\t\tisArrayLike = types.isArrayLike;\r\n\r\n    /**\r\n     * The base implementation of `_.findIndex` and `_.findLastIndex` without\r\n     * support for iteratee shorthands.\r\n     *\r\n     * @param {Array} array The array to inspect.\r\n     * @param {Function} predicate The function invoked per iteration.\r\n     * @param {number} fromIndex The index to search from.\r\n     * @param {boolean} [fromRight] Specify iterating from right to left.\r\n     * @returns {number} Returns the index of the matched value, else `-1`.\r\n     */\r\n    function baseFindIndex(array, predicate, fromIndex, fromRight) {\r\n      var length = array.length,\r\n          index = fromIndex + (fromRight ? 1 : -1);\r\n\r\n      while ((fromRight ? index-- : ++index < length)) {\r\n        if (predicate(array[index], index, array)) {\r\n          return index;\r\n        }\r\n      }\r\n      return -1;\r\n    }\r\n\r\n    /**\r\n     * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\r\n     *\r\n     * @param {Array} array The array to inspect.\r\n     * @param {*} value The value to search for.\r\n     * @param {number} fromIndex The index to search from.\r\n     * @returns {number} Returns the index of the matched value, else `-1`.\r\n     */\r\n    function baseIndexOf(array, value, fromIndex) {\r\n      if (value !== value) {\r\n        return baseFindIndex(array, baseIsNaN, fromIndex);\r\n      }\r\n      var index = fromIndex - 1,\r\n          length = array.length;\r\n\r\n      while (++index < length) {\r\n        if (array[index] === value) {\r\n          return index;\r\n        }\r\n      }\r\n      return -1;\r\n    }\r\n\r\n    /**\r\n     * The base implementation of `isNaN` without support for number objects.\r\n     *\r\n     * @private\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\r\n     */\r\n    function baseIsNaN(value) {\r\n      return value !== value;\r\n    }\r\n\r\n\r\n    function compact(array) {\r\n        return filter.call(array, function(item) {\r\n            return item != null;\r\n        });\r\n    }\r\n\r\n    function filter2(array,func) {\r\n      return filter.call(array,func);\r\n    }\r\n\r\n    function flatten(array) {\r\n        if (isArrayLike(array)) {\r\n            var result = [];\r\n            for (var i = 0; i < array.length; i++) {\r\n                var item = array[i];\r\n                if (isArrayLike(item)) {\r\n                    for (var j = 0; j < item.length; j++) {\r\n                        result.push(item[j]);\r\n                    }\r\n                } else {\r\n                    result.push(item);\r\n                }\r\n            }\r\n            return result;\r\n        } else {\r\n            return array;\r\n        }\r\n        //return array.length > 0 ? concat.apply([], array) : array;\r\n    }\r\n\r\n    function grep(array, callback) {\r\n        var out = [];\r\n\r\n        each(array, function(i, item) {\r\n            if (callback(item, i)) {\r\n                out.push(item);\r\n            }\r\n        });\r\n\r\n        return out;\r\n    }\r\n\r\n    function inArray(item, array) {\r\n        if (!array) {\r\n            return -1;\r\n        }\r\n        var i;\r\n\r\n        if (array.indexOf) {\r\n            return array.indexOf(item);\r\n        }\r\n\r\n        i = array.length;\r\n        while (i--) {\r\n            if (array[i] === item) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    function makeArray(obj, offset, startWith) {\r\n       if (isArrayLike(obj) ) {\r\n        return (startWith || []).concat(Array.prototype.slice.call(obj, offset || 0));\r\n      }\r\n\r\n      // array of single index\r\n      return [ obj ];             \r\n    }\r\n\r\n\r\n    function forEach (arr, fn) {\r\n      if (arr.forEach) return arr.forEach(fn)\r\n      for (var i = 0; i < arr.length; i++) fn(arr[i], i);\r\n    }\r\n\r\n    function map(elements, callback) {\r\n        var value, values = [],\r\n            i, key\r\n        if (isArrayLike(elements))\r\n            for (i = 0; i < elements.length; i++) {\r\n                value = callback.call(elements[i], elements[i], i);\r\n                if (value != null) values.push(value)\r\n            }\r\n        else\r\n            for (key in elements) {\r\n                value = callback.call(elements[key], elements[key], key);\r\n                if (value != null) values.push(value)\r\n            }\r\n        return flatten(values)\r\n    }\r\n\r\n\r\n    function merge( first, second ) {\r\n      var l = second.length,\r\n          i = first.length,\r\n          j = 0;\r\n\r\n      if ( typeof l === \"number\" ) {\r\n        for ( ; j < l; j++ ) {\r\n          first[ i++ ] = second[ j ];\r\n        }\r\n      } else {\r\n        while ( second[j] !== undefined ) {\r\n          first[ i++ ] = second[ j++ ];\r\n        }\r\n      }\r\n\r\n      first.length = i;\r\n\r\n      return first;\r\n    }\r\n\r\n    function reduce(array,callback,initialValue) {\r\n        return Array.prototype.reduce.call(array,callback,initialValue);\r\n    }\r\n\r\n    function uniq(array) {\r\n        return filter.call(array, function(item, idx) {\r\n            return array.indexOf(item) == idx;\r\n        })\r\n    }\r\n\r\n    return {\r\n        baseFindIndex: baseFindIndex,\r\n\r\n        baseIndexOf : baseIndexOf,\r\n        \r\n        compact: compact,\r\n\r\n        first : function(items,n) {\r\n            if (n) {\r\n                return items.slice(0,n);\r\n            } else {\r\n                return items[0];\r\n            }\r\n        },\r\n\r\n        filter : filter2,\r\n        \r\n        flatten: flatten,\r\n\r\n        inArray: inArray,\r\n\r\n        makeArray: makeArray,\r\n\r\n        merge : merge,\r\n\r\n        forEach : forEach,\r\n\r\n        map : map,\r\n        \r\n        reduce : reduce,\r\n\r\n        uniq : uniq\r\n\r\n    }\r\n});\ndefine('skylark-langx/numbers',[\r\n\t\"./types\"\r\n],function(types){\r\n\tvar isObject = types.isObject,\r\n\t\tisSymbol = types.isSymbol;\r\n\r\n\tvar INFINITY = 1 / 0,\r\n\t    MAX_SAFE_INTEGER = 9007199254740991,\r\n\t    MAX_INTEGER = 1.7976931348623157e+308,\r\n\t    NAN = 0 / 0;\r\n\r\n\t/** Used to match leading and trailing whitespace. */\r\n\tvar reTrim = /^\\s+|\\s+$/g;\r\n\r\n\t/** Used to detect bad signed hexadecimal string values. */\r\n\tvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\r\n\r\n\t/** Used to detect binary string values. */\r\n\tvar reIsBinary = /^0b[01]+$/i;\r\n\r\n\t/** Used to detect octal string values. */\r\n\tvar reIsOctal = /^0o[0-7]+$/i;\r\n\r\n\t/** Used to detect unsigned integer values. */\r\n\tvar reIsUint = /^(?:0|[1-9]\\d*)$/;\r\n\r\n\t/** Built-in method references without a dependency on `root`. */\r\n\tvar freeParseInt = parseInt;\r\n\r\n\t/**\r\n\t * Converts `value` to a finite number.\r\n\t *\r\n\t * @static\r\n\t * @memberOf _\r\n\t * @since 4.12.0\r\n\t * @category Lang\r\n\t * @param {*} value The value to convert.\r\n\t * @returns {number} Returns the converted number.\r\n\t * @example\r\n\t *\r\n\t * _.toFinite(3.2);\r\n\t * // => 3.2\r\n\t *\r\n\t * _.toFinite(Number.MIN_VALUE);\r\n\t * // => 5e-324\r\n\t *\r\n\t * _.toFinite(Infinity);\r\n\t * // => 1.7976931348623157e+308\r\n\t *\r\n\t * _.toFinite('3.2');\r\n\t * // => 3.2\r\n\t */\r\n\tfunction toFinite(value) {\r\n\t  if (!value) {\r\n\t    return value === 0 ? value : 0;\r\n\t  }\r\n\t  value = toNumber(value);\r\n\t  if (value === INFINITY || value === -INFINITY) {\r\n\t    var sign = (value < 0 ? -1 : 1);\r\n\t    return sign * MAX_INTEGER;\r\n\t  }\r\n\t  return value === value ? value : 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts `value` to an integer.\r\n\t *\r\n\t * **Note:** This method is loosely based on\r\n\t * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\r\n\t *\r\n\t * @static\r\n\t * @memberOf _\r\n\t * @param {*} value The value to convert.\r\n\t * @returns {number} Returns the converted integer.\r\n\t * @example\r\n\t *\r\n\t * _.toInteger(3.2);\r\n\t * // => 3\r\n\t *\r\n\t * _.toInteger(Number.MIN_VALUE);\r\n\t * // => 0\r\n\t *\r\n\t * _.toInteger(Infinity);\r\n\t * // => 1.7976931348623157e+308\r\n\t *\r\n\t * _.toInteger('3.2');\r\n\t * // => 3\r\n\t */\r\n\tfunction toInteger(value) {\r\n\t  var result = toFinite(value),\r\n\t      remainder = result % 1;\r\n\r\n\t  return result === result ? (remainder ? result - remainder : result) : 0;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Converts `value` to a number.\r\n\t *\r\n\t * @static\r\n\t * @memberOf _\r\n\t * @since 4.0.0\r\n\t * @category Lang\r\n\t * @param {*} value The value to process.\r\n\t * @returns {number} Returns the number.\r\n\t * @example\r\n\t *\r\n\t * _.toNumber(3.2);\r\n\t * // => 3.2\r\n\t *\r\n\t * _.toNumber(Number.MIN_VALUE);\r\n\t * // => 5e-324\r\n\t *\r\n\t * _.toNumber(Infinity);\r\n\t * // => Infinity\r\n\t *\r\n\t * _.toNumber('3.2');\r\n\t * // => 3.2\r\n\t */\r\n\tfunction toNumber(value) {\r\n\t  if (typeof value == 'number') {\r\n\t    return value;\r\n\t  }\r\n\t  if (isSymbol(value)) {\r\n\t    return NAN;\r\n\t  }\r\n\t  if (isObject(value)) {\r\n\t    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\r\n\t    value = isObject(other) ? (other + '') : other;\r\n\t  }\r\n\t  if (typeof value != 'string') {\r\n\t    return value === 0 ? value : +value;\r\n\t  }\r\n\t  value = value.replace(reTrim, '');\r\n\t  var isBinary = reIsBinary.test(value);\r\n\t  return (isBinary || reIsOctal.test(value))\r\n\t    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\r\n\t    : (reIsBadHex.test(value) ? NAN : +value);\r\n\t}\r\n\r\n\treturn  {\r\n\t\ttoFinite : toFinite,\r\n\t\ttoNumber : toNumber,\r\n\t\ttoInteger : toInteger\r\n\t}\r\n});\ndefine('skylark-langx/objects',[\r\n    \"./_attach\",\r\n\t\"./types\",\r\n    \"./numbers\"\r\n],function(_attach,types,numbers){\r\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty,\r\n        slice = Array.prototype.slice,\r\n        isBoolean = types.isBoolean,\r\n        isFunction = types.isFunction,\r\n\t\tisObject = types.isObject,\r\n\t\tisPlainObject = types.isPlainObject,\r\n\t\tisArray = types.isArray,\r\n        isArrayLike = types.isArrayLike,\r\n        isString = types.isString,\r\n        toInteger = numbers.toInteger;\r\n\r\n     // An internal function for creating assigner functions.\r\n    function createAssigner(keysFunc, defaults) {\r\n        return function(obj) {\r\n          var length = arguments.length;\r\n          if (defaults) obj = Object(obj);  \r\n          if (length < 2 || obj == null) return obj;\r\n          for (var index = 1; index < length; index++) {\r\n            var source = arguments[index],\r\n                keys = keysFunc(source),\r\n                l = keys.length;\r\n            for (var i = 0; i < l; i++) {\r\n              var key = keys[i];\r\n              if (!defaults || obj[key] === void 0) obj[key] = source[key];\r\n            }\r\n          }\r\n          return obj;\r\n       };\r\n    }\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    var eq, deepEq;\r\n    var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\r\n\r\n    eq = function(a, b, aStack, bStack) {\r\n        // Identical objects are equal. `0 === -0`, but they aren't identical.\r\n        // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\r\n        if (a === b) return a !== 0 || 1 / a === 1 / b;\r\n        // `null` or `undefined` only equal to itself (strict comparison).\r\n        if (a == null || b == null) return false;\r\n        // `NaN`s are equivalent, but non-reflexive.\r\n        if (a !== a) return b !== b;\r\n        // Exhaust primitive checks\r\n        var type = typeof a;\r\n        if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\r\n        return deepEq(a, b, aStack, bStack);\r\n    };\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    deepEq = function(a, b, aStack, bStack) {\r\n        // Unwrap any wrapped objects.\r\n        //if (a instanceof _) a = a._wrapped;\r\n        //if (b instanceof _) b = b._wrapped;\r\n        // Compare `[[Class]]` names.\r\n        var className = toString.call(a);\r\n        if (className !== toString.call(b)) return false;\r\n        switch (className) {\r\n            // Strings, numbers, regular expressions, dates, and booleans are compared by value.\r\n            case '[object RegExp]':\r\n            // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\r\n            case '[object String]':\r\n                // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\r\n                // equivalent to `new String(\"5\")`.\r\n                return '' + a === '' + b;\r\n            case '[object Number]':\r\n                // `NaN`s are equivalent, but non-reflexive.\r\n                // Object(NaN) is equivalent to NaN.\r\n                if (+a !== +a) return +b !== +b;\r\n                // An `egal` comparison is performed for other numeric values.\r\n                return +a === 0 ? 1 / +a === 1 / b : +a === +b;\r\n            case '[object Date]':\r\n            case '[object Boolean]':\r\n                // Coerce dates and booleans to numeric primitive values. Dates are compared by their\r\n                // millisecond representations. Note that invalid dates with millisecond representations\r\n                // of `NaN` are not equivalent.\r\n                return +a === +b;\r\n            case '[object Symbol]':\r\n                return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\r\n        }\r\n\r\n        var areArrays = className === '[object Array]';\r\n        if (!areArrays) {\r\n            if (typeof a != 'object' || typeof b != 'object') return false;\r\n            // Objects with different constructors are not equivalent, but `Object`s or `Array`s\r\n            // from different frames are.\r\n            var aCtor = a.constructor, bCtor = b.constructor;\r\n            if (aCtor !== bCtor && !(isFunction(aCtor) && aCtor instanceof aCtor &&\r\n                               isFunction(bCtor) && bCtor instanceof bCtor)\r\n                          && ('constructor' in a && 'constructor' in b)) {\r\n                return false;\r\n            }\r\n        }\r\n        // Assume equality for cyclic structures. The algorithm for detecting cyclic\r\n        // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\r\n\r\n        // Initializing stack of traversed objects.\r\n        // It's done here since we only need them for objects and arrays comparison.\r\n        aStack = aStack || [];\r\n        bStack = bStack || [];\r\n        var length = aStack.length;\r\n        while (length--) {\r\n            // Linear search. Performance is inversely proportional to the number of\r\n            // unique nested structures.\r\n            if (aStack[length] === a) return bStack[length] === b;\r\n        }\r\n\r\n        // Add the first object to the stack of traversed objects.\r\n        aStack.push(a);\r\n        bStack.push(b);\r\n\r\n        // Recursively compare objects and arrays.\r\n        if (areArrays) {\r\n            // Compare array lengths to determine if a deep comparison is necessary.\r\n            length = a.length;\r\n            if (length !== b.length) return false;\r\n            // Deep compare the contents, ignoring non-numeric properties.\r\n            while (length--) {\r\n                if (!eq(a[length], b[length], aStack, bStack)) return false;\r\n            }\r\n        } else {\r\n            // Deep compare objects.\r\n            var keys = Object.keys(a), key;\r\n            length = keys.length;\r\n            // Ensure that both objects contain the same number of properties before comparing deep equality.\r\n            if (Object.keys(b).length !== length) return false;\r\n            while (length--) {\r\n                // Deep compare each member\r\n                key = keys[length];\r\n                if (!(b[key]!==undefined && eq(a[key], b[key], aStack, bStack))) return false;\r\n            }\r\n        }\r\n        // Remove the first object from the stack of traversed objects.\r\n        aStack.pop();\r\n        bStack.pop();\r\n        return true;\r\n    };\r\n\r\n    // Retrieve all the property names of an object.\r\n    function allKeys(obj) {\r\n        if (!isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function each(obj, callback) {\r\n        var length, key, i, undef, value;\r\n\r\n        if (obj) {\r\n            length = obj.length;\r\n\r\n            if (length === undef) {\r\n                // Loop object items\r\n                for (key in obj) {\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        value = obj[key];\r\n                        if (callback.call(value, key, value) === false) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                // Loop array items\r\n                for (i = 0; i < length; i++) {\r\n                    value = obj[i];\r\n                    if (callback.call(value, i, value) === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function extend(target) {\r\n        var deep, args = slice.call(arguments, 1);\r\n        if (typeof target == 'boolean') {\r\n            deep = target\r\n            target = args.shift()\r\n        }\r\n        if (args.length == 0) {\r\n            args = [target];\r\n            target = this;\r\n        }\r\n        args.forEach(function(arg) {\r\n            mixin(target, arg, deep);\r\n        });\r\n        return target;\r\n    }\r\n\r\n    // Retrieve the names of an object's own properties.\r\n    // Delegates to **ECMAScript 5**'s native `Object.keys`.\r\n    function keys(obj) {\r\n        if (isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) if (has(obj, key)) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function has(obj, path) {\r\n        if (!isArray(path)) {\r\n            return obj != null && hasOwnProperty.call(obj, path);\r\n        }\r\n        var length = path.length;\r\n        for (var i = 0; i < length; i++) {\r\n            var key = path[i];\r\n            if (obj == null || !hasOwnProperty.call(obj, key)) {\r\n                return false;\r\n            }\r\n            obj = obj[key];\r\n        }\r\n        return !!length;\r\n    }\r\n\r\n    /**\r\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\r\n     * checked for a substring of `value`, otherwise\r\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\r\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\r\n     * the offset from the end of `collection`.\r\n     *\r\n     * @static\r\n     * @memberOf _\r\n     * @since 0.1.0\r\n     * @category Collection\r\n     * @param {Array|Object|string} collection The collection to inspect.\r\n     * @param {*} value The value to search for.\r\n     * @param {number} [fromIndex=0] The index to search from.\r\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\r\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\r\n     * @example\r\n     *\r\n     * _.includes([1, 2, 3], 1);\r\n     * // => true\r\n     *\r\n     * _.includes([1, 2, 3], 1, 2);\r\n     * // => false\r\n     *\r\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\r\n     * // => true\r\n     *\r\n     * _.includes('abcd', 'bc');\r\n     * // => true\r\n     */\r\n    function includes(collection, value, fromIndex, guard) {\r\n      collection = isArrayLike(collection) ? collection : values(collection);\r\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\r\n\r\n      var length = collection.length;\r\n      if (fromIndex < 0) {\r\n        fromIndex = nativeMax(length + fromIndex, 0);\r\n      }\r\n      return isString(collection)\r\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\r\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\r\n    }\r\n\r\n\r\n   // Perform a deep comparison to check if two objects are equal.\r\n    function isEqual(a, b) {\r\n        return eq(a, b);\r\n    }\r\n\r\n    // Returns whether an object has a given set of `key:value` pairs.\r\n    function isMatch(object, attrs) {\r\n        var keys = keys(attrs), length = keys.length;\r\n        if (object == null) return !length;\r\n        var obj = Object(object);\r\n        for (var i = 0; i < length; i++) {\r\n          var key = keys[i];\r\n          if (attrs[key] !== obj[key] || !(key in obj)) return false;\r\n        }\r\n        return true;\r\n    }    \r\n\r\n    function _mixin(target, source, deep, safe) {\r\n        for (var key in source) {\r\n            //if (!source.hasOwnProperty(key)) {\r\n            //    continue;\r\n            //}\r\n            if (safe && target[key] !== undefined) {\r\n                continue;\r\n            }\r\n            if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\r\n                if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\r\n                    target[key] = {};\r\n                }\r\n                if (isArray(source[key]) && !isArray(target[key])) {\r\n                    target[key] = [];\r\n                }\r\n                _mixin(target[key], source[key], deep, safe);\r\n            } else if (source[key] !== undefined) {\r\n                target[key] = source[key]\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n\r\n    function _parseMixinArgs(args) {\r\n        var params = slice.call(arguments, 0),\r\n            target = params.shift(),\r\n            deep = false;\r\n        if (isBoolean(params[params.length - 1])) {\r\n            deep = params.pop();\r\n        }\r\n\r\n        return {\r\n            target: target,\r\n            sources: params,\r\n            deep: deep\r\n        };\r\n    }\r\n\r\n    function mixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, false);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n   // Return a copy of the object without the blacklisted properties.\r\n    function omit(obj, prop1,prop2) {\r\n        if (!obj) {\r\n            return null;\r\n        }\r\n        var result = mixin({},obj);\r\n        for(var i=1;i<arguments.length;i++) {\r\n            var pn = arguments[i];\r\n            if (pn in obj) {\r\n                delete result[pn];\r\n            }\r\n        }\r\n        return result;\r\n\r\n    }\r\n\r\n   // Return a copy of the object only containing the whitelisted properties.\r\n    function pick(obj,prop1,prop2) {\r\n        if (!obj) {\r\n            return null;\r\n        }\r\n        var result = {};\r\n        for(var i=1;i<arguments.length;i++) {\r\n            var pn = arguments[i];\r\n            if (pn in obj) {\r\n                result[pn] = obj[pn];\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function removeItem(items, item) {\r\n        if (isArray(items)) {\r\n            var idx = items.indexOf(item);\r\n            if (idx != -1) {\r\n                items.splice(idx, 1);\r\n            }\r\n        } else if (isPlainObject(items)) {\r\n            for (var key in items) {\r\n                if (items[key] == item) {\r\n                    delete items[key];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function result(obj, path, fallback) {\r\n        if (!isArray(path)) {\r\n            path = path.split(\".\");//[path]\r\n        };\r\n        var length = path.length;\r\n        if (!length) {\r\n          return isFunction(fallback) ? fallback.call(obj) : fallback;\r\n        }\r\n        for (var i = 0; i < length; i++) {\r\n          var prop = obj == null ? void 0 : obj[path[i]];\r\n          if (prop === void 0) {\r\n            prop = fallback;\r\n            i = length; // Ensure we don't continue iterating.\r\n          }\r\n          obj = isFunction(prop) ? prop.call(obj) : prop;\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    function safeMixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, true);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    // Retrieve the values of an object's properties.\r\n    function values(obj) {\r\n        var keys = allKeys(obj);\r\n        var length = keys.length;\r\n        var values = Array(length);\r\n        for (var i = 0; i < length; i++) {\r\n            values[i] = obj[keys[i]];\r\n        }\r\n        return values;\r\n    }\r\n\r\n    function clone( /*anything*/ src,checkCloneMethod) {\r\n        var copy;\r\n        if (src === undefined || src === null) {\r\n            copy = src;\r\n        } else if (checkCloneMethod && src.clone) {\r\n            copy = src.clone();\r\n        } else if (isArray(src)) {\r\n            copy = [];\r\n            for (var i = 0; i < src.length; i++) {\r\n                copy.push(clone(src[i]));\r\n            }\r\n        } else if (isPlainObject(src)) {\r\n            copy = {};\r\n            for (var key in src) {\r\n                copy[key] = clone(src[key]);\r\n            }\r\n        } else {\r\n            copy = src;\r\n        }\r\n\r\n        return copy;\r\n\r\n    }\r\n\r\n    return {\r\n        allKeys: allKeys,\r\n\r\n        attach : _attach,\r\n\r\n        clone: clone,\r\n\r\n        defaults : createAssigner(allKeys, true),\r\n\r\n        each : each,\r\n\r\n        extend : extend,\r\n\r\n        has: has,\r\n\r\n        isEqual: isEqual,   \r\n\r\n        includes: includes,\r\n\r\n        isMatch: isMatch,\r\n\r\n        keys: keys,\r\n\r\n        mixin: mixin,\r\n\r\n        omit: omit,\r\n\r\n        pick: pick,\r\n\r\n        removeItem: removeItem,\r\n\r\n        result : result,\r\n        \r\n        safeMixin: safeMixin,\r\n\r\n        values: values\r\n    };\r\n\r\n\r\n\r\n});\ndefine('skylark-langx/klass',[\r\n    \"./arrays\",\r\n    \"./objects\",\r\n    \"./types\"\r\n],function(arrays,objects,types){\r\n    var uniq = arrays.uniq,\r\n        has = objects.has,\r\n        mixin = objects.mixin,\r\n        isArray = types.isArray,\r\n        isDefined = types.isDefined;\r\n\r\n/* for reference \r\n function klass(props,parent) {\r\n    var ctor = function(){\r\n        this._construct();\r\n    };\r\n    ctor.prototype = props;\r\n    if (parent) {\r\n        ctor._proto_ = parent;\r\n        props.__proto__ = parent.prototype;\r\n    }\r\n    return ctor;\r\n}\r\n\r\n// Type some JavaScript code here.\r\nlet animal = klass({\r\n  _construct(){\r\n      this.name = this.name + \",hi\";\r\n  },\r\n    \r\n  name: \"Animal\",\r\n  eat() {         // [[HomeObject]] == animal\r\n    alert(`${this.name} eats.`);\r\n  }\r\n    \r\n    \r\n});\r\n\r\n\r\nlet rabbit = klass({\r\n  name: \"Rabbit\",\r\n  _construct(){\r\n      super._construct();\r\n  },\r\n  eat() {         // [[HomeObject]] == rabbit\r\n    super.eat();\r\n  }\r\n},animal);\r\n\r\nlet longEar = klass({\r\n  name: \"Long Ear\",\r\n  eat() {         // [[HomeObject]] == longEar\r\n    super.eat();\r\n  }\r\n},rabbit);\r\n*/\r\n    \r\n    function inherit(ctor, base) {\r\n        var f = function() {};\r\n        f.prototype = base.prototype;\r\n\r\n        ctor.prototype = new f();\r\n    }\r\n\r\n    var f1 = function() {\r\n        function extendClass(ctor, props, options) {\r\n            // Copy the properties to the prototype of the class.\r\n            var proto = ctor.prototype,\r\n                _super = ctor.superclass.prototype,\r\n                noOverrided = options && options.noOverrided,\r\n                overrides = options && options.overrides || {};\r\n\r\n            for (var name in props) {\r\n                if (name === \"constructor\") {\r\n                    continue;\r\n                }\r\n\r\n                // Check if we're overwriting an existing function\r\n                var prop = props[name];\r\n                if (typeof props[name] == \"function\") {\r\n                    proto[name] =  !prop._constructor && !noOverrided && typeof _super[name] == \"function\" ?\r\n                          (function(name, fn, superFn) {\r\n                            return function() {\r\n                                var tmp = this.overrided;\r\n\r\n                                // Add a new ._super() method that is the same method\r\n                                // but on the super-class\r\n                                this.overrided = superFn;\r\n\r\n                                // The method only need to be bound temporarily, so we\r\n                                // remove it when we're done executing\r\n                                var ret = fn.apply(this, arguments);\r\n\r\n                                this.overrided = tmp;\r\n\r\n                                return ret;\r\n                            };\r\n                        })(name, prop, _super[name]) :\r\n                        prop;\r\n                } else if (types.isPlainObject(prop) && prop!==null && (prop.get)) {\r\n                    Object.defineProperty(proto,name,prop);\r\n                } else {\r\n                    proto[name] = prop;\r\n                }\r\n            }\r\n            return ctor;\r\n        }\r\n\r\n        function serialMixins(ctor,mixins) {\r\n            var result = [];\r\n\r\n            mixins.forEach(function(mixin){\r\n                if (has(mixin,\"__mixins__\")) {\r\n                     throw new Error(\"nested mixins\");\r\n                }\r\n                var clss = [];\r\n                while (mixin) {\r\n                    clss.unshift(mixin);\r\n                    mixin = mixin.superclass;\r\n                }\r\n                result = result.concat(clss);\r\n            });\r\n\r\n            result = uniq(result);\r\n\r\n            result = result.filter(function(mixin){\r\n                var cls = ctor;\r\n                while (cls) {\r\n                    if (mixin === cls) {\r\n                        return false;\r\n                    }\r\n                    if (has(cls,\"__mixins__\")) {\r\n                        var clsMixines = cls[\"__mixins__\"];\r\n                        for (var i=0; i<clsMixines.length;i++) {\r\n                            if (clsMixines[i]===mixin) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n                    cls = cls.superclass;\r\n                }\r\n                return true;\r\n            });\r\n\r\n            if (result.length>0) {\r\n                return result;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        function mergeMixins(ctor,mixins) {\r\n            var newCtor =ctor;\r\n            for (var i=0;i<mixins.length;i++) {\r\n                var xtor = new Function();\r\n                xtor.prototype = Object.create(newCtor.prototype);\r\n                xtor.__proto__ = newCtor;\r\n                xtor.superclass = null;\r\n                mixin(xtor.prototype,mixins[i].prototype);\r\n                xtor.prototype.__mixin__ = mixins[i];\r\n                newCtor = xtor;\r\n            }\r\n\r\n            return newCtor;\r\n        }\r\n\r\n        function _constructor ()  {\r\n            if (this._construct) {\r\n                return this._construct.apply(this, arguments);\r\n            } else  if (this.init) {\r\n                return this.init.apply(this, arguments);\r\n            }\r\n        }\r\n\r\n        return function createClass(props, parent, mixins,options) {\r\n            if (isArray(parent)) {\r\n                options = mixins;\r\n                mixins = parent;\r\n                parent = null;\r\n            }\r\n            parent = parent || Object;\r\n\r\n            if (isDefined(mixins) && !isArray(mixins)) {\r\n                options = mixins;\r\n                mixins = false;\r\n            }\r\n\r\n            var innerParent = parent;\r\n\r\n            if (mixins) {\r\n                mixins = serialMixins(innerParent,mixins);\r\n            }\r\n\r\n            if (mixins) {\r\n                innerParent = mergeMixins(innerParent,mixins);\r\n            }\r\n\r\n            var klassName = props.klassName || \"\",\r\n                ctor = new Function(\r\n                    \"return function \" + klassName + \"() {\" +\r\n                    \"var inst = this,\" +\r\n                    \" ctor = arguments.callee;\" +\r\n                    \"if (!(inst instanceof ctor)) {\" +\r\n                    \"inst = Object.create(ctor.prototype);\" +\r\n                    \"}\" +\r\n                    \"return ctor._constructor.apply(inst, arguments) || inst;\" + \r\n                    \"}\"\r\n                )();\r\n\r\n\r\n            // Populate our constructed prototype object\r\n            ctor.prototype = Object.create(innerParent.prototype);\r\n\r\n            // Enforce the constructor to be what we expect\r\n            ctor.prototype.constructor = ctor;\r\n            ctor.superclass = parent;\r\n\r\n            // And make this class extendable\r\n            ctor.__proto__ = innerParent;\r\n\r\n\r\n            if (!ctor._constructor) {\r\n                ctor._constructor = _constructor;\r\n            } \r\n\r\n            if (mixins) {\r\n                ctor.__mixins__ = mixins;\r\n            }\r\n\r\n            if (!ctor.partial) {\r\n                ctor.partial = function(props, options) {\r\n                    return extendClass(this, props, options);\r\n                };\r\n            }\r\n            if (!ctor.inherit) {\r\n                ctor.inherit = function(props, mixins,options) {\r\n                    return createClass(props, this, mixins,options);\r\n                };\r\n            }\r\n\r\n            ctor.partial(props, options);\r\n\r\n            return ctor;\r\n        };\r\n    }\r\n\r\n    var createClass = f1();\r\n\r\n    return createClass;\r\n});\ndefine('skylark-langx/ArrayStore',[\r\n    \"./klass\"\r\n],function(klass){\r\n    var SimpleQueryEngine = function(query, options){\r\n        // summary:\r\n        //      Simple query engine that matches using filter functions, named filter\r\n        //      functions or objects by name-value on a query object hash\r\n        //\r\n        // description:\r\n        //      The SimpleQueryEngine provides a way of getting a QueryResults through\r\n        //      the use of a simple object hash as a filter.  The hash will be used to\r\n        //      match properties on data objects with the corresponding value given. In\r\n        //      other words, only exact matches will be returned.\r\n        //\r\n        //      This function can be used as a template for more complex query engines;\r\n        //      for example, an engine can be created that accepts an object hash that\r\n        //      contains filtering functions, or a string that gets evaluated, etc.\r\n        //\r\n        //      When creating a new dojo.store, simply set the store's queryEngine\r\n        //      field as a reference to this function.\r\n        //\r\n        // query: Object\r\n        //      An object hash with fields that may match fields of items in the store.\r\n        //      Values in the hash will be compared by normal == operator, but regular expressions\r\n        //      or any object that provides a test() method are also supported and can be\r\n        //      used to match strings by more complex expressions\r\n        //      (and then the regex's or object's test() method will be used to match values).\r\n        //\r\n        // options: dojo/store/api/Store.QueryOptions?\r\n        //      An object that contains optional information such as sort, start, and count.\r\n        //\r\n        // returns: Function\r\n        //      A function that caches the passed query under the field \"matches\".  See any\r\n        //      of the \"query\" methods on dojo.stores.\r\n        //\r\n        // example:\r\n        //      Define a store with a reference to this engine, and set up a query method.\r\n        //\r\n        //  |   var myStore = function(options){\r\n        //  |       //  ...more properties here\r\n        //  |       this.queryEngine = SimpleQueryEngine;\r\n        //  |       //  define our query method\r\n        //  |       this.query = function(query, options){\r\n        //  |           return QueryResults(this.queryEngine(query, options)(this.data));\r\n        //  |       };\r\n        //  |   };\r\n\r\n        // create our matching query function\r\n        switch(typeof query){\r\n            default:\r\n                throw new Error(\"Can not query with a \" + typeof query);\r\n            case \"object\": case \"undefined\":\r\n                var queryObject = query;\r\n                query = function(object){\r\n                    for(var key in queryObject){\r\n                        var required = queryObject[key];\r\n                        if(required && required.test){\r\n                            // an object can provide a test method, which makes it work with regex\r\n                            if(!required.test(object[key], object)){\r\n                                return false;\r\n                            }\r\n                        }else if(required != object[key]){\r\n                            return false;\r\n                        }\r\n                    }\r\n                    return true;\r\n                };\r\n                break;\r\n            case \"string\":\r\n                // named query\r\n                if(!this[query]){\r\n                    throw new Error(\"No filter function \" + query + \" was found in store\");\r\n                }\r\n                query = this[query];\r\n                // fall through\r\n            case \"function\":\r\n                // fall through\r\n        }\r\n        \r\n        function filter(arr, callback, thisObject){\r\n            // summary:\r\n            //      Returns a new Array with those items from arr that match the\r\n            //      condition implemented by callback.\r\n            // arr: Array\r\n            //      the array to iterate over.\r\n            // callback: Function|String\r\n            //      a function that is invoked with three arguments (item,\r\n            //      index, array). The return of this function is expected to\r\n            //      be a boolean which determines whether the passed-in item\r\n            //      will be included in the returned array.\r\n            // thisObject: Object?\r\n            //      may be used to scope the call to callback\r\n            // returns: Array\r\n            // description:\r\n            //      This function corresponds to the JavaScript 1.6 Array.filter() method, with one difference: when\r\n            //      run over sparse arrays, this implementation passes the \"holes\" in the sparse array to\r\n            //      the callback function with a value of undefined. JavaScript 1.6's filter skips the holes in the sparse array.\r\n            //      For more details, see:\r\n            //      https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/filter\r\n            // example:\r\n            //  | // returns [2, 3, 4]\r\n            //  | array.filter([1, 2, 3, 4], function(item){ return item>1; });\r\n\r\n            // TODO: do we need \"Ctr\" here like in map()?\r\n            var i = 0, l = arr && arr.length || 0, out = [], value;\r\n            if(l && typeof arr == \"string\") arr = arr.split(\"\");\r\n            if(typeof callback == \"string\") callback = cache[callback] || buildFn(callback);\r\n            if(thisObject){\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback.call(thisObject, value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }else{\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback(value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }\r\n            return out; // Array\r\n        }\r\n\r\n        function execute(array){\r\n            // execute the whole query, first we filter\r\n            var results = filter(array, query);\r\n            // next we sort\r\n            var sortSet = options && options.sort;\r\n            if(sortSet){\r\n                results.sort(typeof sortSet == \"function\" ? sortSet : function(a, b){\r\n                    for(var sort, i=0; sort = sortSet[i]; i++){\r\n                        var aValue = a[sort.attribute];\r\n                        var bValue = b[sort.attribute];\r\n                        // valueOf enables proper comparison of dates\r\n                        aValue = aValue != null ? aValue.valueOf() : aValue;\r\n                        bValue = bValue != null ? bValue.valueOf() : bValue;\r\n                        if (aValue != bValue){\r\n                            // modified by lwf 2016/07/09\r\n                            //return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                            return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                        }\r\n                    }\r\n                    return 0;\r\n                });\r\n            }\r\n            // now we paginate\r\n            if(options && (options.start || options.count)){\r\n                var total = results.length;\r\n                results = results.slice(options.start || 0, (options.start || 0) + (options.count || Infinity));\r\n                results.total = total;\r\n            }\r\n            return results;\r\n        }\r\n        execute.matches = query;\r\n        return execute;\r\n    };\r\n\r\n    var QueryResults = function(results){\r\n        // summary:\r\n        //      A function that wraps the results of a store query with additional\r\n        //      methods.\r\n        // description:\r\n        //      QueryResults is a basic wrapper that allows for array-like iteration\r\n        //      over any kind of returned data from a query.  While the simplest store\r\n        //      will return a plain array of data, other stores may return deferreds or\r\n        //      promises; this wrapper makes sure that *all* results can be treated\r\n        //      the same.\r\n        //\r\n        //      Additional methods include `forEach`, `filter` and `map`.\r\n        // results: Array|dojo/promise/Promise\r\n        //      The result set as an array, or a promise for an array.\r\n        // returns:\r\n        //      An array-like object that can be used for iterating over.\r\n        // example:\r\n        //      Query a store and iterate over the results.\r\n        //\r\n        //  |   store.query({ prime: true }).forEach(function(item){\r\n        //  |       //  do something\r\n        //  |   });\r\n\r\n        if(!results){\r\n            return results;\r\n        }\r\n\r\n        var isPromise = !!results.then;\r\n        // if it is a promise it may be frozen\r\n        if(isPromise){\r\n            results = Object.delegate(results);\r\n        }\r\n        function addIterativeMethod(method){\r\n            // Always add the iterative methods so a QueryResults is\r\n            // returned whether the environment is ES3 or ES5\r\n            results[method] = function(){\r\n                var args = arguments;\r\n                var result = Deferred.when(results, function(results){\r\n                    //Array.prototype.unshift.call(args, results);\r\n                    return QueryResults(Array.prototype[method].apply(results, args));\r\n                });\r\n                // forEach should only return the result of when()\r\n                // when we're wrapping a promise\r\n                if(method !== \"forEach\" || isPromise){\r\n                    return result;\r\n                }\r\n            };\r\n        }\r\n\r\n        addIterativeMethod(\"forEach\");\r\n        addIterativeMethod(\"filter\");\r\n        addIterativeMethod(\"map\");\r\n        if(results.total == null){\r\n            results.total = Deferred.when(results, function(results){\r\n                return results.length;\r\n            });\r\n        }\r\n        return results; // Object\r\n    };\r\n\r\n    var ArrayStore = klass({\r\n        \"klassName\": \"ArrayStore\",\r\n\r\n        \"queryEngine\": SimpleQueryEngine,\r\n        \r\n        \"idProperty\": \"id\",\r\n\r\n\r\n        get: function(id){\r\n            // summary:\r\n            //      Retrieves an object by its identity\r\n            // id: Number\r\n            //      The identity to use to lookup the object\r\n            // returns: Object\r\n            //      The object in the store that matches the given id.\r\n            return this.data[this.index[id]];\r\n        },\r\n\r\n        getIdentity: function(object){\r\n            return object[this.idProperty];\r\n        },\r\n\r\n        put: function(object, options){\r\n            var data = this.data,\r\n                index = this.index,\r\n                idProperty = this.idProperty;\r\n            var id = object[idProperty] = (options && \"id\" in options) ? options.id : idProperty in object ? object[idProperty] : Math.random();\r\n            if(id in index){\r\n                // object exists\r\n                if(options && options.overwrite === false){\r\n                    throw new Error(\"Object already exists\");\r\n                }\r\n                // replace the entry in data\r\n                data[index[id]] = object;\r\n            }else{\r\n                // add the new object\r\n                index[id] = data.push(object) - 1;\r\n            }\r\n            return id;\r\n        },\r\n\r\n        add: function(object, options){\r\n            (options = options || {}).overwrite = false;\r\n            // call put with overwrite being false\r\n            return this.put(object, options);\r\n        },\r\n\r\n        remove: function(id){\r\n            // summary:\r\n            //      Deletes an object by its identity\r\n            // id: Number\r\n            //      The identity to use to delete the object\r\n            // returns: Boolean\r\n            //      Returns true if an object was removed, falsy (undefined) if no object matched the id\r\n            var index = this.index;\r\n            var data = this.data;\r\n            if(id in index){\r\n                data.splice(index[id], 1);\r\n                // now we have to reindex\r\n                this.setData(data);\r\n                return true;\r\n            }\r\n        },\r\n        query: function(query, options){\r\n            // summary:\r\n            //      Queries the store for objects.\r\n            // query: Object\r\n            //      The query to use for retrieving objects from the store.\r\n            // options: dojo/store/api/Store.QueryOptions?\r\n            //      The optional arguments to apply to the resultset.\r\n            // returns: dojo/store/api/Store.QueryResults\r\n            //      The results of the query, extended with iterative methods.\r\n            //\r\n            // example:\r\n            //      Given the following store:\r\n            //\r\n            //  |   var store = new Memory({\r\n            //  |       data: [\r\n            //  |           {id: 1, name: \"one\", prime: false },\r\n            //  |           {id: 2, name: \"two\", even: true, prime: true},\r\n            //  |           {id: 3, name: \"three\", prime: true},\r\n            //  |           {id: 4, name: \"four\", even: true, prime: false},\r\n            //  |           {id: 5, name: \"five\", prime: true}\r\n            //  |       ]\r\n            //  |   });\r\n            //\r\n            //  ...find all items where \"prime\" is true:\r\n            //\r\n            //  |   var results = store.query({ prime: true });\r\n            //\r\n            //  ...or find all items where \"even\" is true:\r\n            //\r\n            //  |   var results = store.query({ even: true });\r\n            return QueryResults(this.queryEngine(query, options)(this.data));\r\n        },\r\n\r\n        setData: function(data){\r\n            // summary:\r\n            //      Sets the given data as the source for this store, and indexes it\r\n            // data: Object[]\r\n            //      An array of objects to use as the source of data.\r\n            if(data.items){\r\n                // just for convenience with the data format IFRS expects\r\n                this.idProperty = data.identifier || this.idProperty;\r\n                data = this.data = data.items;\r\n            }else{\r\n                this.data = data;\r\n            }\r\n            this.index = {};\r\n            for(var i = 0, l = data.length; i < l; i++){\r\n                this.index[data[i][this.idProperty]] = i;\r\n            }\r\n        },\r\n\r\n        init: function(options) {\r\n            for(var i in options){\r\n                this[i] = options[i];\r\n            }\r\n            this.setData(this.data || []);\r\n        }\r\n\r\n    });\r\n\r\n\treturn ArrayStore;\r\n});\ndefine('skylark-langx/aspect',[\r\n],function(){\r\n\r\n  var undefined, nextId = 0;\r\n    function advise(dispatcher, type, advice, receiveArguments){\r\n        var previous = dispatcher[type];\r\n        var around = type == \"around\";\r\n        var signal;\r\n        if(around){\r\n            var advised = advice(function(){\r\n                return previous.advice(this, arguments);\r\n            });\r\n            signal = {\r\n                remove: function(){\r\n                    if(advised){\r\n                        advised = dispatcher = advice = null;\r\n                    }\r\n                },\r\n                advice: function(target, args){\r\n                    return advised ?\r\n                        advised.apply(target, args) :  // called the advised function\r\n                        previous.advice(target, args); // cancelled, skip to next one\r\n                }\r\n            };\r\n        }else{\r\n            // create the remove handler\r\n            signal = {\r\n                remove: function(){\r\n                    if(signal.advice){\r\n                        var previous = signal.previous;\r\n                        var next = signal.next;\r\n                        if(!next && !previous){\r\n                            delete dispatcher[type];\r\n                        }else{\r\n                            if(previous){\r\n                                previous.next = next;\r\n                            }else{\r\n                                dispatcher[type] = next;\r\n                            }\r\n                            if(next){\r\n                                next.previous = previous;\r\n                            }\r\n                        }\r\n\r\n                        // remove the advice to signal that this signal has been removed\r\n                        dispatcher = advice = signal.advice = null;\r\n                    }\r\n                },\r\n                id: nextId++,\r\n                advice: advice,\r\n                receiveArguments: receiveArguments\r\n            };\r\n        }\r\n        if(previous && !around){\r\n            if(type == \"after\"){\r\n                // add the listener to the end of the list\r\n                // note that we had to change this loop a little bit to workaround a bizarre IE10 JIT bug\r\n                while(previous.next && (previous = previous.next)){}\r\n                previous.next = signal;\r\n                signal.previous = previous;\r\n            }else if(type == \"before\"){\r\n                // add to beginning\r\n                dispatcher[type] = signal;\r\n                signal.next = previous;\r\n                previous.previous = signal;\r\n            }\r\n        }else{\r\n            // around or first one just replaces\r\n            dispatcher[type] = signal;\r\n        }\r\n        return signal;\r\n    }\r\n    function aspect(type){\r\n        return function(target, methodName, advice, receiveArguments){\r\n            var existing = target[methodName], dispatcher;\r\n            if(!existing || existing.target != target){\r\n                // no dispatcher in place\r\n                target[methodName] = dispatcher = function(){\r\n                    var executionId = nextId;\r\n                    // before advice\r\n                    var args = arguments;\r\n                    var before = dispatcher.before;\r\n                    while(before){\r\n                        args = before.advice.apply(this, args) || args;\r\n                        before = before.next;\r\n                    }\r\n                    // around advice\r\n                    if(dispatcher.around){\r\n                        var results = dispatcher.around.advice(this, args);\r\n                    }\r\n                    // after advice\r\n                    var after = dispatcher.after;\r\n                    while(after && after.id < executionId){\r\n                        if(after.receiveArguments){\r\n                            var newResults = after.advice.apply(this, args);\r\n                            // change the return value only if a new value was returned\r\n                            results = newResults === undefined ? results : newResults;\r\n                        }else{\r\n                            results = after.advice.call(this, results, args);\r\n                        }\r\n                        after = after.next;\r\n                    }\r\n                    return results;\r\n                };\r\n                if(existing){\r\n                    dispatcher.around = {advice: function(target, args){\r\n                        return existing.apply(target, args);\r\n                    }};\r\n                }\r\n                dispatcher.target = target;\r\n            }\r\n            var results = advise((dispatcher || existing), type, advice, receiveArguments);\r\n            advice = null;\r\n            return results;\r\n        };\r\n    }\r\n\r\n    return {\r\n        after: aspect(\"after\"),\r\n \r\n        around: aspect(\"around\"),\r\n        \r\n        before: aspect(\"before\")\r\n    };\r\n});\ndefine('skylark-langx/funcs',[\r\n    \"./objects\",\r\n\t\"./types\"\r\n],function(objects,types){\r\n\tvar mixin = objects.mixin,\r\n        slice = Array.prototype.slice,\r\n        isFunction = types.isFunction,\r\n        isString = types.isString;\r\n\r\n    function defer(fn) {\r\n        if (requestAnimationFrame) {\r\n            requestAnimationFrame(fn);\r\n        } else {\r\n            setTimeoutout(fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function noop() {\r\n    }\r\n\r\n    function proxy(fn, context) {\r\n        var args = (2 in arguments) && slice.call(arguments, 2)\r\n        if (isFunction(fn)) {\r\n            var proxyFn = function() {\r\n                return fn.apply(context, args ? args.concat(slice.call(arguments)) : arguments);\r\n            }\r\n            return proxyFn;\r\n        } else if (isString(context)) {\r\n            if (args) {\r\n                args.unshift(fn[context], fn)\r\n                return proxy.apply(null, args)\r\n            } else {\r\n                return proxy(fn[context], fn);\r\n            }\r\n        } else {\r\n            throw new TypeError(\"expected function\");\r\n        }\r\n    }\r\n\r\n    function debounce(fn, wait) {\r\n        var timeout;\r\n        return function () {\r\n            var context = this, args = arguments;\r\n            var later = function () {\r\n                timeout = null;\r\n                fn.apply(context, args);\r\n            };\r\n            if (timeout) clearTimeout(timeout);\r\n            timeout = setTimeout(later, wait);\r\n        };\r\n    }\r\n   \r\n    var delegate = (function() {\r\n        // boodman/crockford delegation w/ cornford optimization\r\n        function TMP() {}\r\n        return function(obj, props) {\r\n            TMP.prototype = obj;\r\n            var tmp = new TMP();\r\n            TMP.prototype = null;\r\n            if (props) {\r\n                mixin(tmp, props);\r\n            }\r\n            return tmp; // Object\r\n        };\r\n    })();\r\n\r\n  var templateSettings = {\r\n    evaluate: /<%([\\s\\S]+?)%>/g,\r\n    interpolate: /<%=([\\s\\S]+?)%>/g,\r\n    escape: /<%-([\\s\\S]+?)%>/g\r\n  };\r\n\r\n\r\n  function template(text, settings, oldSettings) {\r\n    if (!settings && oldSettings) settings = oldSettings;\r\n    settings = objects.defaults({}, settings,templateSettings);\r\n\r\n    // Combine delimiters into one regular expression via alternation.\r\n    var matcher = RegExp([\r\n      (settings.escape || noMatch).source,\r\n      (settings.interpolate || noMatch).source,\r\n      (settings.evaluate || noMatch).source\r\n    ].join('|') + '|$', 'g');\r\n\r\n    // Compile the template source, escaping string literals appropriately.\r\n    var index = 0;\r\n    var source = \"__p+='\";\r\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\r\n      source += text.slice(index, offset).replace(escapeRegExp, escapeChar);\r\n      index = offset + match.length;\r\n\r\n      if (escape) {\r\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\r\n      } else if (interpolate) {\r\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\r\n      } else if (evaluate) {\r\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\r\n      }\r\n\r\n      // Adobe VMs need the match returned to produce the correct offset.\r\n      return match;\r\n    });\r\n    source += \"';\\n\";\r\n\r\n    // If a variable is not specified, place data values in local scope.\r\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\r\n\r\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\r\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\r\n      source + 'return __p;\\n';\r\n\r\n    var render;\r\n    try {\r\n      render = new Function(settings.variable || 'obj', '_', source);\r\n    } catch (e) {\r\n      e.source = source;\r\n      throw e;\r\n    }\r\n\r\n    var template = function(data) {\r\n      return render.call(this, data, _);\r\n    };\r\n\r\n    // Provide the compiled source as a convenience for precompilation.\r\n    var argument = settings.variable || 'obj';\r\n    template.source = 'function(' + argument + '){\\n' + source + '}';\r\n\r\n    return template;\r\n  };\r\n\r\n    return {\r\n        debounce: debounce,\r\n\r\n        delegate: delegate,\r\n\r\n        defer: defer,\r\n\r\n        noop : noop,\r\n\r\n        proxy: proxy,\r\n\r\n        returnTrue: function() {\r\n            return true;\r\n        },\r\n\r\n        returnFalse: function() {\r\n            return false;\r\n        },\r\n\r\n        templateSettings : templateSettings,\r\n        template : template\r\n    };\r\n});\ndefine('skylark-langx/Deferred',[\r\n    \"./arrays\",\r\n\t\"./funcs\",\r\n    \"./objects\"\r\n],function(arrays,funcs,objects){\r\n    \"use strict\";\r\n    \r\n    var  PGLISTENERS = Symbol ? Symbol() : '__pglisteners',\r\n         PGNOTIFIES = Symbol ? Symbol() : '__pgnotifies';\r\n\r\n    var slice = Array.prototype.slice,\r\n        proxy = funcs.proxy,\r\n        makeArray = arrays.makeArray,\r\n        result = objects.result,\r\n        mixin = objects.mixin;\r\n\r\n    mixin(Promise.prototype,{\r\n        always: function(handler) {\r\n            //this.done(handler);\r\n            //this.fail(handler);\r\n            this.then(handler,handler);\r\n            return this;\r\n        },\r\n        done : function() {\r\n            for (var i = 0;i<arguments.length;i++) {\r\n                this.then(arguments[i]);\r\n            }\r\n            return this;\r\n        },\r\n        fail : function(handler) { \r\n            //return mixin(Promise.prototype.catch.call(this,handler),added);\r\n            //return this.then(null,handler);\r\n            this.catch(handler);\r\n            return this;\r\n         }\r\n    });\r\n\r\n\r\n    var Deferred = function() {\r\n        var self = this,\r\n            p = this.promise = new Promise(function(resolve, reject) {\r\n                self._resolve = resolve;\r\n                self._reject = reject;\r\n            });\r\n\r\n        wrapPromise(p,self);\r\n\r\n        this[PGLISTENERS] = [];\r\n        this[PGNOTIFIES] = [];\r\n\r\n        //this.resolve = Deferred.prototype.resolve.bind(this);\r\n        //this.reject = Deferred.prototype.reject.bind(this);\r\n        //this.progress = Deferred.prototype.progress.bind(this);\r\n\r\n    };\r\n\r\n    function wrapPromise(p,d) {\r\n        var   added = {\r\n                state : function() {\r\n                    if (d.isResolved()) {\r\n                        return 'resolved';\r\n                    }\r\n                    if (d.isRejected()) {\r\n                        return 'rejected';\r\n                    }\r\n                    return 'pending';\r\n                },\r\n                then : function(onResolved,onRejected,onProgress) {\r\n                    if (onProgress) {\r\n                        this.progress(onProgress);\r\n                    }\r\n                    return wrapPromise(Promise.prototype.then.call(this,\r\n                            onResolved && function(args) {\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onResolved.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onResolved(args);\r\n                                }\r\n                            },\r\n                            onRejected && function(args){\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onRejected.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onRejected(args);\r\n                                }\r\n                            }));\r\n                },\r\n                progress : function(handler) {\r\n                    d[PGNOTIFIES].forEach(function (value) {\r\n                        handler(value);\r\n                    });\r\n                    d[PGLISTENERS].push(handler);\r\n                    return this;\r\n                }\r\n\r\n            };\r\n\r\n        added.pipe = added.then;\r\n        return mixin(p,added);\r\n\r\n    }\r\n\r\n    Deferred.prototype.resolve = function(value) {\r\n        var args = slice.call(arguments);\r\n        return this.resolveWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.resolveWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._resolve(args);\r\n        this._resolved = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.notify = function(value) {\r\n        try {\r\n            this[PGNOTIFIES].push(value);\r\n\r\n            return this[PGLISTENERS].forEach(function (listener) {\r\n                return listener(value);\r\n            });\r\n        } catch (error) {\r\n          this.reject(error);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.reject = function(reason) {\r\n        var args = slice.call(arguments);\r\n        return this.rejectWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.rejectWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._reject(args);\r\n        this._rejected = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.isResolved = function() {\r\n        return !!this._resolved;\r\n    };\r\n\r\n    Deferred.prototype.isRejected = function() {\r\n        return !!this._rejected;\r\n    };\r\n\r\n    Deferred.prototype.then = function(callback, errback, progback) {\r\n        var p = result(this,\"promise\");\r\n        return p.then(callback, errback, progback);\r\n    };\r\n\r\n    Deferred.prototype.progress = function(progback){\r\n        var p = result(this,\"promise\");\r\n        return p.progress(progback);\r\n    };\r\n   \r\n    Deferred.prototype.catch = function(errback) {\r\n        var p = result(this,\"promise\");\r\n        return p.catch(errback);\r\n    };\r\n\r\n\r\n    Deferred.prototype.done  = function() {\r\n        var p = result(this,\"promise\");\r\n        return p.done.apply(p,arguments);\r\n    };\r\n\r\n    Deferred.prototype.fail = function(errback) {\r\n        var p = result(this,\"promise\");\r\n        return p.fail(errback);\r\n    };\r\n\r\n\r\n    Deferred.all = function(array) {\r\n        //return wrapPromise(Promise.all(array));\r\n        var d = new Deferred();\r\n        Promise.all(array).then(d.resolve.bind(d),d.reject.bind(d));\r\n        return result(d,\"promise\");\r\n    };\r\n\r\n    Deferred.first = function(array) {\r\n        return wrapPromise(Promise.race(array));\r\n    };\r\n\r\n\r\n    Deferred.when = function(valueOrPromise, callback, errback, progback) {\r\n        var receivedPromise = valueOrPromise && typeof valueOrPromise.then === \"function\";\r\n        var nativePromise = receivedPromise && valueOrPromise instanceof Promise;\r\n\r\n        if (!receivedPromise) {\r\n            if (arguments.length > 1) {\r\n                return callback ? callback(valueOrPromise) : valueOrPromise;\r\n            } else {\r\n                return new Deferred().resolve(valueOrPromise);\r\n            }\r\n        } else if (!nativePromise) {\r\n            var deferred = new Deferred(valueOrPromise.cancel);\r\n            valueOrPromise.then(proxy(deferred.resolve,deferred), proxy(deferred.reject,deferred), deferred.notify);\r\n            valueOrPromise = deferred.promise;\r\n        }\r\n\r\n        if (callback || errback || progback) {\r\n            return valueOrPromise.then(callback, errback, progback);\r\n        }\r\n        return valueOrPromise;\r\n    };\r\n\r\n    Deferred.reject = function(err) {\r\n        var d = new Deferred();\r\n        d.reject(err);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.resolve = function(data) {\r\n        var d = new Deferred();\r\n        d.resolve.apply(d,arguments);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.immediate = Deferred.resolve;\r\n\r\n    return Deferred;\r\n});\ndefine('skylark-langx/async',[\r\n    \"./Deferred\",\r\n    \"./objects\"\r\n],function(Deferred,objects){\r\n    var each = objects.each;\r\n    \r\n    var async = {\r\n        parallel : function(arr,args,ctx) {\r\n            var rets = [];\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            each(arr,function(i,func){\r\n                rets.push(func.apply(ctx,args));\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        series : function(arr,args,ctx) {\r\n            var rets = [],\r\n                d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolve();\r\n            each(arr,function(i,func){\r\n                p = p.then(function(){\r\n                    return func.apply(ctx,args);\r\n                });\r\n                rets.push(p);\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        waterful : function(arr,args,ctx) {\r\n            var d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolveWith(ctx,args);\r\n\r\n            each(arr,function(i,func){\r\n                p = p.then(func);\r\n            });\r\n            return p;\r\n        }\r\n    };\r\n\r\n\treturn async;\t\r\n});\ndefine('skylark-langx/datetimes',[],function(){\r\n     function parseMilliSeconds(str) {\r\n\r\n        var strs = str.split(' ');\r\n        var number = parseInt(strs[0]);\r\n\r\n        if (isNaN(number)){\r\n            return 0;\r\n        }\r\n\r\n        var min = 60000 * 60;\r\n\r\n        switch (strs[1].trim().replace(/\\./g, '')) {\r\n            case 'minutes':\r\n            case 'minute':\r\n            case 'min':\r\n            case 'mm':\r\n            case 'm':\r\n                return 60000 * number;\r\n            case 'hours':\r\n            case 'hour':\r\n            case 'HH':\r\n            case 'hh':\r\n            case 'h':\r\n            case 'H':\r\n                return min * number;\r\n            case 'seconds':\r\n            case 'second':\r\n            case 'sec':\r\n            case 'ss':\r\n            case 's':\r\n                return 1000 * number;\r\n            case 'days':\r\n            case 'day':\r\n            case 'DD':\r\n            case 'dd':\r\n            case 'd':\r\n                return (min * 24) * number;\r\n            case 'months':\r\n            case 'month':\r\n            case 'MM':\r\n            case 'M':\r\n                return (min * 24 * 28) * number;\r\n            case 'weeks':\r\n            case 'week':\r\n            case 'W':\r\n            case 'w':\r\n                return (min * 24 * 7) * number;\r\n            case 'years':\r\n            case 'year':\r\n            case 'yyyy':\r\n            case 'yy':\r\n            case 'y':\r\n                return (min * 24 * 365) * number;\r\n            default:\r\n                return 0;\r\n        }\r\n    };\r\n\t\r\n\treturn {\r\n\t\tparseMilliSeconds\r\n\t};\r\n});\ndefine('skylark-langx/Evented',[\r\n    \"./klass\",\r\n    \"./arrays\",\r\n    \"./objects\",\r\n    \"./types\"\r\n],function(klass,arrays,objects,types){\r\n    var slice = Array.prototype.slice,\r\n        compact = arrays.compact,\r\n        isDefined = types.isDefined,\r\n        isPlainObject = types.isPlainObject,\r\n        isFunction = types.isFunction,\r\n        isString = types.isString,\r\n        isEmptyObject = types.isEmptyObject,\r\n        mixin = objects.mixin;\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            name: segs[0],\r\n            ns: segs.slice(1).join(\" \")\r\n        };\r\n    }\r\n\r\n    var Evented = klass({\r\n        on: function(events, selector, data, callback, ctx, /*used internally*/ one) {\r\n            var self = this,\r\n                _hub = this._hub || (this._hub = {});\r\n\r\n            if (isPlainObject(events)) {\r\n                ctx = callback;\r\n                each(events, function(type, fn) {\r\n                    self.on(type, selector, data, fn, ctx, one);\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (!isString(selector) && !isFunction(callback)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = selector;\r\n                selector = undefined;\r\n            }\r\n\r\n            if (isFunction(data)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(event) {\r\n                var parsed = parse(event),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                (_hub[name] || (_hub[name] = [])).push({\r\n                    fn: callback,\r\n                    selector: selector,\r\n                    data: data,\r\n                    ctx: ctx,\r\n                    ns : ns,\r\n                    one: one\r\n                });\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        one: function(events, selector, data, callback, ctx) {\r\n            return this.on(events, selector, data, callback, ctx, 1);\r\n        },\r\n\r\n        trigger: function(e /*,argument list*/ ) {\r\n            if (!this._hub) {\r\n                return this;\r\n            }\r\n\r\n            var self = this;\r\n\r\n            if (isString(e)) {\r\n                e = new CustomEvent(e);\r\n            }\r\n\r\n            Object.defineProperty(e,\"target\",{\r\n                value : this\r\n            });\r\n\r\n            var args = slice.call(arguments, 1);\r\n            if (isDefined(args)) {\r\n                args = [e].concat(args);\r\n            } else {\r\n                args = [e];\r\n            }\r\n            [e.type || e.name, \"all\"].forEach(function(eventName) {\r\n                var parsed = parse(eventName),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                var listeners = self._hub[name];\r\n                if (!listeners) {\r\n                    return;\r\n                }\r\n\r\n                var len = listeners.length,\r\n                    reCompact = false;\r\n\r\n                for (var i = 0; i < len; i++) {\r\n                    var listener = listeners[i];\r\n                    if (ns && (!listener.ns ||  !listener.ns.startsWith(ns))) {\r\n                        continue;\r\n                    }\r\n                    if (e.data) {\r\n                        if (listener.data) {\r\n                            e.data = mixin({}, listener.data, e.data);\r\n                        }\r\n                    } else {\r\n                        e.data = listener.data || null;\r\n                    }\r\n                    listener.fn.apply(listener.ctx, args);\r\n                    if (listener.one) {\r\n                        listeners[i] = null;\r\n                        reCompact = true;\r\n                    }\r\n                }\r\n\r\n                if (reCompact) {\r\n                    self._hub[eventName] = compact(listeners);\r\n                }\r\n\r\n            });\r\n            return this;\r\n        },\r\n\r\n        listened: function(event) {\r\n            var evtArr = ((this._hub || (this._events = {}))[event] || []);\r\n            return evtArr.length > 0;\r\n        },\r\n\r\n        listenTo: function(obj, event, callback, /*used internally*/ one) {\r\n            if (!obj) {\r\n                return this;\r\n            }\r\n\r\n            // Bind callbacks on obj,\r\n            if (isString(callback)) {\r\n                callback = this[callback];\r\n            }\r\n\r\n            if (one) {\r\n                obj.one(event, callback, this);\r\n            } else {\r\n                obj.on(event, callback, this);\r\n            }\r\n\r\n            //keep track of them on listening.\r\n            var listeningTo = this._listeningTo || (this._listeningTo = []),\r\n                listening;\r\n\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                if (listeningTo[i].obj == obj) {\r\n                    listening = listeningTo[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (!listening) {\r\n                listeningTo.push(\r\n                    listening = {\r\n                        obj: obj,\r\n                        events: {}\r\n                    }\r\n                );\r\n            }\r\n            var listeningEvents = listening.events,\r\n                listeningEvent = listeningEvents[event] = listeningEvents[event] || [];\r\n            if (listeningEvent.indexOf(callback) == -1) {\r\n                listeningEvent.push(callback);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        listenToOnce: function(obj, event, callback) {\r\n            return this.listenTo(obj, event, callback, 1);\r\n        },\r\n\r\n        off: function(events, callback) {\r\n            var _hub = this._hub || (this._hub = {});\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(event) {\r\n                var parsed = parse(event),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                var evts = _hub[name];\r\n\r\n                if (evts) {\r\n                    var liveEvents = [];\r\n\r\n                    if (callback || ns) {\r\n                        for (var i = 0, len = evts.length; i < len; i++) {\r\n                            \r\n                            if (callback && evts[i].fn !== callback && evts[i].fn._ !== callback) {\r\n                                liveEvents.push(evts[i]);\r\n                                continue;\r\n                            } \r\n\r\n                            if (ns && (!evts[i].ns || evts[i].ns.indexOf(ns)!=0)) {\r\n                                liveEvents.push(evts[i]);\r\n                                continue;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (liveEvents.length) {\r\n                        _hub[name] = liveEvents;\r\n                    } else {\r\n                        delete _hub[name];\r\n                    }\r\n\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        unlistenTo: function(obj, event, callback) {\r\n            var listeningTo = this._listeningTo;\r\n            if (!listeningTo) {\r\n                return this;\r\n            }\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                var listening = listeningTo[i];\r\n\r\n                if (obj && obj != listening.obj) {\r\n                    continue;\r\n                }\r\n\r\n                var listeningEvents = listening.events;\r\n                for (var eventName in listeningEvents) {\r\n                    if (event && event != eventName) {\r\n                        continue;\r\n                    }\r\n\r\n                    var listeningEvent = listeningEvents[eventName];\r\n\r\n                    for (var j = 0; j < listeningEvent.length; j++) {\r\n                        if (!callback || callback == listeningEvent[i]) {\r\n                            listening.obj.off(eventName, listeningEvent[i], this);\r\n                            listeningEvent[i] = null;\r\n                        }\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName] = compact(listeningEvent);\r\n\r\n                    if (isEmptyObject(listeningEvent)) {\r\n                        listeningEvents[eventName] = null;\r\n                    }\r\n\r\n                }\r\n\r\n                if (isEmptyObject(listeningEvents)) {\r\n                    listeningTo[i] = null;\r\n                }\r\n            }\r\n\r\n            listeningTo = this._listeningTo = compact(listeningTo);\r\n            if (isEmptyObject(listeningTo)) {\r\n                this._listeningTo = null;\r\n            }\r\n\r\n            return this;\r\n        }\r\n    });\r\n\r\n    return Evented;\r\n\r\n});\ndefine('skylark-langx/hoster',[\r\n],function(){\r\n\t// The javascript host environment, brower and nodejs are supported.\r\n\tvar hoster = {\r\n\t\t\"isBrowser\" : true, // default\r\n\t\t\"isNode\" : null,\r\n\t\t\"global\" : this,\r\n\t\t\"browser\" : null,\r\n\t\t\"node\" : null\r\n\t};\r\n\r\n\tif (typeof process == \"object\" && process.versions && process.versions.node && process.versions.v8) {\r\n\t\thoster.isNode = true;\r\n\t\thoster.isBrowser = false;\r\n\t}\r\n\r\n\thoster.global = (function(){\r\n\t\tif (typeof global !== 'undefined' && typeof global !== 'function') {\r\n\t\t\t// global spec defines a reference to the global object called 'global'\r\n\t\t\t// https://github.com/tc39/proposal-global\r\n\t\t\t// `global` is also defined in NodeJS\r\n\t\t\treturn global;\r\n\t\t} else if (typeof window !== 'undefined') {\r\n\t\t\t// window is defined in browsers\r\n\t\t\treturn window;\r\n\t\t}\r\n\t\telse if (typeof self !== 'undefined') {\r\n\t\t\t// self is defined in WebWorkers\r\n\t\t\treturn self;\r\n\t\t}\r\n\t\treturn this;\r\n\t})();\r\n\r\n\tvar _document = null;\r\n\r\n\tObject.defineProperty(hoster,\"document\",function(){\r\n\t\tif (!_document) {\r\n\t\t\tvar w = typeof window === 'undefined' ? require('html-element') : window;\r\n\t\t\t_document = w.document;\r\n\t\t}\r\n\r\n\t\treturn _document;\r\n\t});\r\n\r\n\tif (hoster.isBrowser) {\r\n\t    function uaMatch( ua ) {\r\n\t\t    ua = ua.toLowerCase();\r\n\r\n\t\t    var match = /(chrome)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t      /(webkit)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t      /(opera)(?:.*version|)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t      /(msie) ([\\w.]+)/.exec( ua ) ||\r\n\t\t      ua.indexOf('compatible') < 0 && /(mozilla)(?:.*? rv:([\\w.]+)|)/.exec( ua ) ||\r\n\t\t      [];\r\n\r\n\t\t    return {\r\n\t\t      browser: match[ 1 ] || '',\r\n\t\t      version: match[ 2 ] || '0'\r\n\t\t    };\r\n\t  \t};\r\n\r\n\t    var matched = uaMatch( navigator.userAgent );\r\n\r\n\t    var browser = hoster.browser = {};\r\n\r\n\t    if ( matched.browser ) {\r\n\t      browser[ matched.browser ] = true;\r\n\t      browser.version = matched.version;\r\n\t    }\r\n\r\n\t    // Chrome is Webkit, but Webkit is also Safari.\r\n\t    if ( browser.chrome ) {\r\n\t      browser.webkit = true;\r\n\t    } else if ( browser.webkit ) {\r\n\t      browser.safari = true;\r\n\t    }\r\n\t}\r\n\r\n\treturn  hoster;\r\n});\ndefine('skylark-langx/strings',[\r\n],function(){\r\n\r\n     /*\r\n     * Converts camel case into dashes.\r\n     * @param {String} str\r\n     * @return {String}\r\n     * @exapmle marginTop -> margin-top\r\n     */\r\n    function dasherize(str) {\r\n        return str.replace(/::/g, '/')\r\n            .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\r\n            .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\r\n            .replace(/_/g, '-')\r\n            .toLowerCase();\r\n    }\r\n\r\n    function deserializeValue(value) {\r\n        try {\r\n            return value ?\r\n                value == \"true\" ||\r\n                (value == \"false\" ? false :\r\n                    value == \"null\" ? null :\r\n                    +value + \"\" == value ? +value :\r\n                    /^[\\[\\{]/.test(value) ? JSON.parse(value) :\r\n                    value) : value;\r\n        } catch (e) {\r\n            return value;\r\n        }\r\n    }\r\n\r\n\r\n    function trim(str) {\r\n        return str == null ? \"\" : String.prototype.trim.call(str);\r\n    }\r\n    function substitute( /*String*/ template,\r\n        /*Object|Array*/\r\n        map,\r\n        /*Function?*/\r\n        transform,\r\n        /*Object?*/\r\n        thisObject) {\r\n        // summary:\r\n        //    Performs parameterized substitutions on a string. Throws an\r\n        //    exception if any parameter is unmatched.\r\n        // template:\r\n        //    a string with expressions in the form `${key}` to be replaced or\r\n        //    `${key:format}` which specifies a format function. keys are case-sensitive.\r\n        // map:\r\n        //    hash to search for substitutions\r\n        // transform:\r\n        //    a function to process all parameters before substitution takes\r\n\r\n\r\n        thisObject = thisObject || window;\r\n        transform = transform ?\r\n            proxy(thisObject, transform) : function(v) {\r\n                return v;\r\n            };\r\n\r\n        function getObject(key, map) {\r\n            if (key.match(/\\./)) {\r\n                var retVal,\r\n                    getValue = function(keys, obj) {\r\n                        var _k = keys.pop();\r\n                        if (_k) {\r\n                            if (!obj[_k]) return null;\r\n                            return getValue(keys, retVal = obj[_k]);\r\n                        } else {\r\n                            return retVal;\r\n                        }\r\n                    };\r\n                return getValue(key.split(\".\").reverse(), map);\r\n            } else {\r\n                return map[key];\r\n            }\r\n        }\r\n\r\n        return template.replace(/\\$\\{([^\\s\\:\\}]+)(?:\\:([^\\s\\:\\}]+))?\\}/g,\r\n            function(match, key, format) {\r\n                var value = getObject(key, map);\r\n                if (format) {\r\n                    value = getObject(format, thisObject).call(thisObject, value, key);\r\n                }\r\n                return transform(value, key).toString();\r\n            }); // String\r\n    }\r\n\r\n    var idCounter = 0;\r\n    function uniqueId (prefix) {\r\n        var id = ++idCounter + '';\r\n        return prefix ? prefix + id : id;\r\n    }\r\n\r\n\treturn {\r\n        camelCase: function(str) {\r\n            return str.replace(/-([\\da-z])/g, function(a) {\r\n                return a.toUpperCase().replace('-', '');\r\n            });\r\n        },\r\n\r\n        dasherize: dasherize,\r\n\r\n        deserializeValue: deserializeValue,\r\n\r\n        lowerFirst: function(str) {\r\n            return str.charAt(0).toLowerCase() + str.slice(1);\r\n        },\r\n\r\n        serializeValue: function(value) {\r\n            return JSON.stringify(value)\r\n        },\r\n\r\n\r\n        substitute: substitute,\r\n\r\n        trim: trim,\r\n\r\n        uniqueId: uniqueId,\r\n\r\n        upperFirst: function(str) {\r\n            return str.charAt(0).toUpperCase() + str.slice(1);\r\n        }\r\n\t} ; \r\n\r\n});\ndefine('skylark-langx/Xhr',[\r\n    \"./arrays\",\r\n    \"./Deferred\",\r\n    \"./Evented\",\r\n    \"./objects\",\r\n    \"./funcs\",\r\n    \"./types\"\r\n],function(arrays,Deferred,Evented,objects,funcs,types){\r\n    var each = objects.each,\r\n        mixin = objects.mixin,\r\n        noop = funcs.noop,\r\n        isArray = types.isArray,\r\n        isFunction = types.isFunction,\r\n        isPlainObject = types.isPlainObject,\r\n        type = types.type;\r\n \r\n     var getAbsoluteUrl = (function() {\r\n        var a;\r\n\r\n        return function(url) {\r\n            if (!a) a = document.createElement('a');\r\n            a.href = url;\r\n\r\n            return a.href;\r\n        };\r\n    })();\r\n   \r\n    var Xhr = (function(){\r\n        var jsonpID = 0,\r\n            key,\r\n            name,\r\n            rscript = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\r\n            scriptTypeRE = /^(?:text|application)\\/javascript/i,\r\n            xmlTypeRE = /^(?:text|application)\\/xml/i,\r\n            jsonType = 'application/json',\r\n            htmlType = 'text/html',\r\n            blankRE = /^\\s*$/;\r\n\r\n        var XhrDefaultOptions = {\r\n            async: true,\r\n\r\n            // Default type of request\r\n            type: 'GET',\r\n            // Callback that is executed before request\r\n            beforeSend: noop,\r\n            // Callback that is executed if the request succeeds\r\n            success: noop,\r\n            // Callback that is executed the the server drops error\r\n            error: noop,\r\n            // Callback that is executed on request complete (both: error and success)\r\n            complete: noop,\r\n            // The context for the callbacks\r\n            context: null,\r\n            // Whether to trigger \"global\" Ajax events\r\n            global: true,\r\n\r\n            // MIME types mapping\r\n            // IIS returns Javascript as \"application/x-javascript\"\r\n            accepts: {\r\n                script: 'text/javascript, application/javascript, application/x-javascript',\r\n                json: 'application/json',\r\n                xml: 'application/xml, text/xml',\r\n                html: 'text/html',\r\n                text: 'text/plain'\r\n            },\r\n            // Whether the request is to another domain\r\n            crossDomain: false,\r\n            // Default timeout\r\n            timeout: 0,\r\n            // Whether data should be serialized to string\r\n            processData: true,\r\n            // Whether the browser should be allowed to cache GET responses\r\n            cache: true,\r\n\r\n            xhrFields : {\r\n                withCredentials : true\r\n            }\r\n        };\r\n\r\n        function mimeToDataType(mime) {\r\n            if (mime) {\r\n                mime = mime.split(';', 2)[0];\r\n            }\r\n            if (mime) {\r\n                if (mime == htmlType) {\r\n                    return \"html\";\r\n                } else if (mime == jsonType) {\r\n                    return \"json\";\r\n                } else if (scriptTypeRE.test(mime)) {\r\n                    return \"script\";\r\n                } else if (xmlTypeRE.test(mime)) {\r\n                    return \"xml\";\r\n                }\r\n            }\r\n            return \"text\";\r\n        }\r\n\r\n        function appendQuery(url, query) {\r\n            if (query == '') return url\r\n            return (url + '&' + query).replace(/[&?]{1,2}/, '?')\r\n        }\r\n\r\n        // serialize payload and append it to the URL for GET requests\r\n        function serializeData(options) {\r\n            options.data = options.data || options.query;\r\n            if (options.processData && options.data && type(options.data) != \"string\") {\r\n                options.data = param(options.data, options.traditional);\r\n            }\r\n            if (options.data && (!options.type || options.type.toUpperCase() == 'GET')) {\r\n                options.url = appendQuery(options.url, options.data);\r\n                options.data = undefined;\r\n            }\r\n        }\r\n\r\n        function serialize(params, obj, traditional, scope) {\r\n            var t, array = isArray(obj),\r\n                hash = isPlainObject(obj)\r\n            each(obj, function(key, value) {\r\n                t =type(value);\r\n                if (scope) key = traditional ? scope :\r\n                    scope + '[' + (hash || t == 'object' || t == 'array' ? key : '') + ']'\r\n                // handle data in serializeArray() format\r\n                if (!scope && array) params.add(value.name, value.value)\r\n                // recurse into nested objects\r\n                else if (t == \"array\" || (!traditional && t == \"object\"))\r\n                    serialize(params, value, traditional, key)\r\n                else params.add(key, value)\r\n            })\r\n        }\r\n\r\n        var param = function(obj, traditional) {\r\n            var params = []\r\n            params.add = function(key, value) {\r\n                if (isFunction(value)) value = value()\r\n                if (value == null) value = \"\"\r\n                this.push(escape(key) + '=' + escape(value))\r\n            }\r\n            serialize(params, obj, traditional)\r\n            return params.join('&').replace(/%20/g, '+')\r\n        };\r\n\r\n        var Xhr = Evented.inherit({\r\n            klassName : \"Xhr\",\r\n\r\n            _request  : function(args) {\r\n                var _ = this._,\r\n                    self = this,\r\n                    options = mixin({},XhrDefaultOptions,_.options,args),\r\n                    xhr = _.xhr = new XMLHttpRequest();\r\n\r\n                serializeData(options)\r\n\r\n                var dataType = options.dataType || options.handleAs,\r\n                    mime = options.mimeType || options.accepts[dataType],\r\n                    headers = options.headers,\r\n                    xhrFields = options.xhrFields,\r\n                    isFormData = options.data && options.data instanceof FormData,\r\n                    basicAuthorizationToken = options.basicAuthorizationToken,\r\n                    type = options.type,\r\n                    url = options.url,\r\n                    async = options.async,\r\n                    user = options.user , \r\n                    password = options.password,\r\n                    deferred = new Deferred(),\r\n                    contentType = isFormData ? false : 'application/x-www-form-urlencoded';\r\n\r\n                if (xhrFields) {\r\n                    for (name in xhrFields) {\r\n                        xhr[name] = xhrFields[name];\r\n                    }\r\n                }\r\n\r\n                if (mime && mime.indexOf(',') > -1) {\r\n                    mime = mime.split(',', 2)[0];\r\n                }\r\n                if (mime && xhr.overrideMimeType) {\r\n                    xhr.overrideMimeType(mime);\r\n                }\r\n\r\n                //if (dataType) {\r\n                //    xhr.responseType = dataType;\r\n                //}\r\n\r\n                var finish = function() {\r\n                    xhr.onloadend = noop;\r\n                    xhr.onabort = noop;\r\n                    xhr.onprogress = noop;\r\n                    xhr.ontimeout = noop;\r\n                    xhr = null;\r\n                }\r\n                var onloadend = function() {\r\n                    var result, error = false\r\n                    if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && getAbsoluteUrl(url).startsWith('file:'))) {\r\n                        dataType = dataType || mimeToDataType(options.mimeType || xhr.getResponseHeader('content-type'));\r\n\r\n                        result = xhr.responseText;\r\n                        try {\r\n                            if (dataType == 'script') {\r\n                                eval(result);\r\n                            } else if (dataType == 'xml') {\r\n                                result = xhr.responseXML;\r\n                            } else if (dataType == 'json') {\r\n                                result = blankRE.test(result) ? null : JSON.parse(result);\r\n                            } else if (dataType == \"blob\") {\r\n                                result = Blob([xhrObj.response]);\r\n                            } else if (dataType == \"arraybuffer\") {\r\n                                result = xhr.reponse;\r\n                            }\r\n                        } catch (e) { \r\n                            error = e;\r\n                        }\r\n\r\n                        if (error) {\r\n                            deferred.reject(error,xhr.status,xhr);\r\n                        } else {\r\n                            deferred.resolve(result,xhr.status,xhr);\r\n                        }\r\n                    } else {\r\n                        deferred.reject(new Error(xhr.statusText),xhr.status,xhr);\r\n                    }\r\n                    finish();\r\n                };\r\n\r\n                var onabort = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"abort\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n \r\n                var ontimeout = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"timeout\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n\r\n                var onprogress = function(evt) {\r\n                    if (deferred) {\r\n                        deferred.notify(evt,xhr.status,xhr);\r\n                    }\r\n                }\r\n\r\n                xhr.onloadend = onloadend;\r\n                xhr.onabort = onabort;\r\n                xhr.ontimeout = ontimeout;\r\n                xhr.onprogress = onprogress;\r\n\r\n                xhr.open(type, url, async, user, password);\r\n               \r\n                if (headers) {\r\n                    for ( var key in headers) {\r\n                        var value = headers[key];\r\n \r\n                        if(key.toLowerCase() === 'content-type'){\r\n                            contentType = headers[hdr];\r\n                        } else {\r\n                           xhr.setRequestHeader(key, value);\r\n                        }\r\n                    }\r\n                }   \r\n\r\n                if  (contentType && contentType !== false){\r\n                    xhr.setRequestHeader('Content-Type', contentType);\r\n                }\r\n\r\n                if(!headers || !('X-Requested-With' in headers)){\r\n                    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n                }\r\n\r\n\r\n                //If basicAuthorizationToken is defined set its value into \"Authorization\" header\r\n                if (basicAuthorizationToken) {\r\n                    xhr.setRequestHeader(\"Authorization\", basicAuthorizationToken);\r\n                }\r\n\r\n                xhr.send(options.data ? options.data : null);\r\n\r\n                return deferred.promise;\r\n\r\n            },\r\n\r\n            \"abort\": function() {\r\n                var _ = this._,\r\n                    xhr = _.xhr;\r\n\r\n                if (xhr) {\r\n                    xhr.abort();\r\n                }    \r\n            },\r\n\r\n\r\n            \"request\": function(args) {\r\n                return this._request(args);\r\n            },\r\n\r\n            get : function(args) {\r\n                args = args || {};\r\n                args.type = \"GET\";\r\n                return this._request(args);\r\n            },\r\n\r\n            post : function(args) {\r\n                args = args || {};\r\n                args.type = \"POST\";\r\n                return this._request(args);\r\n            },\r\n\r\n            patch : function(args) {\r\n                args = args || {};\r\n                args.type = \"PATCH\";\r\n                return this._request(args);\r\n            },\r\n\r\n            put : function(args) {\r\n                args = args || {};\r\n                args.type = \"PUT\";\r\n                return this._request(args);\r\n            },\r\n\r\n            del : function(args) {\r\n                args = args || {};\r\n                args.type = \"DELETE\";\r\n                return this._request(args);\r\n            },\r\n\r\n            \"init\": function(options) {\r\n                this._ = {\r\n                    options : options || {}\r\n                };\r\n            }\r\n        });\r\n\r\n        [\"request\",\"get\",\"post\",\"put\",\"del\",\"patch\"].forEach(function(name){\r\n            Xhr[name] = function(url,args) {\r\n                var xhr = new Xhr({\"url\" : url});\r\n                return xhr[name](args);\r\n            };\r\n        });\r\n\r\n        Xhr.defaultOptions = XhrDefaultOptions;\r\n        Xhr.param = param;\r\n\r\n        return Xhr;\r\n    })();\r\n\r\n\treturn Xhr;\t\r\n});\ndefine('skylark-langx/Restful',[\r\n    \"./Evented\",\r\n    \"./objects\",\r\n    \"./strings\",\r\n    \"./Xhr\"\r\n],function(Evented,objects,strings,Xhr){\r\n    var mixin = objects.mixin,\r\n        substitute = strings.substitute;\r\n\r\n    var Restful = Evented.inherit({\r\n        \"klassName\" : \"Restful\",\r\n\r\n        \"idAttribute\": \"id\",\r\n        \r\n        getBaseUrl : function(args) {\r\n            //$$baseEndpoint : \"/files/${fileId}/comments\",\r\n            var baseEndpoint = substitute(this.baseEndpoint,args),\r\n                baseUrl = this.server + this.basePath + baseEndpoint;\r\n            if (args[this.idAttribute]!==undefined) {\r\n                baseUrl = baseUrl + \"/\" + args[this.idAttribute]; \r\n            }\r\n            return baseUrl;\r\n        },\r\n        _head : function(args) {\r\n            //get resource metadata .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n        },\r\n        _get : function(args) {\r\n            //get resource ,one or list .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, null if list\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            return Xhr.get(this.getBaseUrl(args),args);\r\n        },\r\n        _post  : function(args,verb) {\r\n            //create or move resource .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            //verb : the verb ,ex: copy,touch,trash,untrash,watch\r\n            var url = this.getBaseUrl(args);\r\n            if (verb) {\r\n                url = url + \"/\" + verb;\r\n            }\r\n            return Xhr.post(url, args);\r\n        },\r\n\r\n        _put  : function(args,verb) {\r\n            //update resource .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            //verb : the verb ,ex: copy,touch,trash,untrash,watch\r\n            var url = this.getBaseUrl(args);\r\n            if (verb) {\r\n                url = url + \"/\" + verb;\r\n            }\r\n            return Xhr.put(url, args);\r\n        },\r\n\r\n        _delete : function(args) {\r\n            //delete resource . \r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}         \r\n\r\n            // HTTP request : DELETE http://center.utilhub.com/registry/v1/apps/{appid}\r\n            var url = this.getBaseUrl(args);\r\n            return Xhr.del(url);\r\n        },\r\n\r\n        _patch : function(args){\r\n            //update resource metadata. \r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            var url = this.getBaseUrl(args);\r\n            return Xhr.patch(url, args);\r\n        },\r\n        query: function(params) {\r\n            \r\n            return this._post(params);\r\n        },\r\n\r\n        retrieve: function(params) {\r\n            return this._get(params);\r\n        },\r\n\r\n        create: function(params) {\r\n            return this._post(params);\r\n        },\r\n\r\n        update: function(params) {\r\n            return this._put(params);\r\n        },\r\n\r\n        delete: function(params) {\r\n            // HTTP request : DELETE http://center.utilhub.com/registry/v1/apps/{appid}\r\n            return this._delete(params);\r\n        },\r\n\r\n        patch: function(params) {\r\n           // HTTP request : PATCH http://center.utilhub.com/registry/v1/apps/{appid}\r\n            return this._patch(params);\r\n        },\r\n        init: function(params) {\r\n            mixin(this,params);\r\n //           this._xhr = XHRx();\r\n       }\r\n    });\r\n\r\n    return Restful;\r\n});\ndefine('skylark-langx/Stateful',[\r\n\t\"./Evented\",\r\n  \"./strings\",\r\n  \"./objects\"\r\n],function(Evented,strings,objects){\r\n    var isEqual = objects.isEqual,\r\n        mixin = objects.mixin,\r\n        result = objects.result,\r\n        isEmptyObject = objects.isEmptyObject,\r\n        clone = objects.clone,\r\n        uniqueId = strings.uniqueId;\r\n\r\n    var Stateful = Evented.inherit({\r\n        _construct : function(attributes, options) {\r\n            var attrs = attributes || {};\r\n            options || (options = {});\r\n            this.cid = uniqueId(this.cidPrefix);\r\n            this.attributes = {};\r\n            if (options.collection) this.collection = options.collection;\r\n            if (options.parse) attrs = this.parse(attrs, options) || {};\r\n            var defaults = result(this, 'defaults');\r\n            attrs = mixin({}, defaults, attrs);\r\n            this.set(attrs, options);\r\n            this.changed = {};\r\n        },\r\n\r\n        // A hash of attributes whose current and previous value differ.\r\n        changed: null,\r\n\r\n        // The value returned during the last failed validation.\r\n        validationError: null,\r\n\r\n        // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\r\n        // CouchDB users may want to set this to `\"_id\"`.\r\n        idAttribute: 'id',\r\n\r\n        // The prefix is used to create the client id which is used to identify models locally.\r\n        // You may want to override this if you're experiencing name clashes with model ids.\r\n        cidPrefix: 'c',\r\n\r\n\r\n        // Return a copy of the model's `attributes` object.\r\n        toJSON: function(options) {\r\n          return clone(this.attributes);\r\n        },\r\n\r\n\r\n        // Get the value of an attribute.\r\n        get: function(attr) {\r\n          return this.attributes[attr];\r\n        },\r\n\r\n        // Returns `true` if the attribute contains a value that is not null\r\n        // or undefined.\r\n        has: function(attr) {\r\n          return this.get(attr) != null;\r\n        },\r\n\r\n        // Set a hash of model attributes on the object, firing `\"change\"`. This is\r\n        // the core primitive operation of a model, updating the data and notifying\r\n        // anyone who needs to know about the change in state. The heart of the beast.\r\n        set: function(key, val, options) {\r\n          if (key == null) return this;\r\n\r\n          // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n          var attrs;\r\n          if (typeof key === 'object') {\r\n            attrs = key;\r\n            options = val;\r\n          } else {\r\n            (attrs = {})[key] = val;\r\n          }\r\n\r\n          options || (options = {});\r\n\r\n          // Run validation.\r\n          if (!this._validate(attrs, options)) return false;\r\n\r\n          // Extract attributes and options.\r\n          var unset      = options.unset;\r\n          var silent     = options.silent;\r\n          var changes    = [];\r\n          var changing   = this._changing;\r\n          this._changing = true;\r\n\r\n          if (!changing) {\r\n            this._previousAttributes = clone(this.attributes);\r\n            this.changed = {};\r\n          }\r\n\r\n          var current = this.attributes;\r\n          var changed = this.changed;\r\n          var prev    = this._previousAttributes;\r\n\r\n          // For each `set` attribute, update or delete the current value.\r\n          for (var attr in attrs) {\r\n            val = attrs[attr];\r\n            if (!isEqual(current[attr], val)) changes.push(attr);\r\n            if (!isEqual(prev[attr], val)) {\r\n              changed[attr] = val;\r\n            } else {\r\n              delete changed[attr];\r\n            }\r\n            unset ? delete current[attr] : current[attr] = val;\r\n          }\r\n\r\n          // Update the `id`.\r\n          if (this.idAttribute in attrs) this.id = this.get(this.idAttribute);\r\n\r\n          // Trigger all relevant attribute changes.\r\n          if (!silent) {\r\n            if (changes.length) this._pending = options;\r\n            for (var i = 0; i < changes.length; i++) {\r\n              this.trigger('change:' + changes[i], this, current[changes[i]], options);\r\n            }\r\n          }\r\n\r\n          // You might be wondering why there's a `while` loop here. Changes can\r\n          // be recursively nested within `\"change\"` events.\r\n          if (changing) return this;\r\n          if (!silent) {\r\n            while (this._pending) {\r\n              options = this._pending;\r\n              this._pending = false;\r\n              this.trigger('change', this, options);\r\n            }\r\n          }\r\n          this._pending = false;\r\n          this._changing = false;\r\n          return this;\r\n        },\r\n\r\n        // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\r\n        // if the attribute doesn't exist.\r\n        unset: function(attr, options) {\r\n          return this.set(attr, void 0, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Clear all attributes on the model, firing `\"change\"`.\r\n        clear: function(options) {\r\n          var attrs = {};\r\n          for (var key in this.attributes) attrs[key] = void 0;\r\n          return this.set(attrs, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Determine if the model has changed since the last `\"change\"` event.\r\n        // If you specify an attribute name, determine if that attribute has changed.\r\n        hasChanged: function(attr) {\r\n          if (attr == null) return !isEmptyObject(this.changed);\r\n          return this.changed[attr] !== undefined;\r\n        },\r\n\r\n        // Return an object containing all the attributes that have changed, or\r\n        // false if there are no changed attributes. Useful for determining what\r\n        // parts of a view need to be updated and/or what attributes need to be\r\n        // persisted to the server. Unset attributes will be set to undefined.\r\n        // You can also pass an attributes object to diff against the model,\r\n        // determining if there *would be* a change.\r\n        changedAttributes: function(diff) {\r\n          if (!diff) return this.hasChanged() ? clone(this.changed) : false;\r\n          var old = this._changing ? this._previousAttributes : this.attributes;\r\n          var changed = {};\r\n          for (var attr in diff) {\r\n            var val = diff[attr];\r\n            if (isEqual(old[attr], val)) continue;\r\n            changed[attr] = val;\r\n          }\r\n          return !isEmptyObject(changed) ? changed : false;\r\n        },\r\n\r\n        // Get the previous value of an attribute, recorded at the time the last\r\n        // `\"change\"` event was fired.\r\n        previous: function(attr) {\r\n          if (attr == null || !this._previousAttributes) return null;\r\n          return this._previousAttributes[attr];\r\n        },\r\n\r\n        // Get all of the attributes of the model at the time of the previous\r\n        // `\"change\"` event.\r\n        previousAttributes: function() {\r\n          return clone(this._previousAttributes);\r\n        },\r\n\r\n        // Create a new model with identical attributes to this one.\r\n        clone: function() {\r\n          return new this.constructor(this.attributes);\r\n        },\r\n\r\n        // A model is new if it has never been saved to the server, and lacks an id.\r\n        isNew: function() {\r\n          return !this.has(this.idAttribute);\r\n        },\r\n\r\n        // Check if the model is currently in a valid state.\r\n        isValid: function(options) {\r\n          return this._validate({}, mixin({}, options, {validate: true}));\r\n        },\r\n\r\n        // Run validation against the next complete set of model attributes,\r\n        // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\r\n        _validate: function(attrs, options) {\r\n          if (!options.validate || !this.validate) return true;\r\n          attrs = mixin({}, this.attributes, attrs);\r\n          var error = this.validationError = this.validate(attrs, options) || null;\r\n          if (!error) return true;\r\n          this.trigger('invalid', this, error, mixin(options, {validationError: error}));\r\n          return false;\r\n        }\r\n    });\r\n\r\n\treturn Stateful;\r\n});\ndefine('skylark-langx/topic',[\r\n\t\"./Evented\"\r\n],function(Evented){\r\n\tvar hub = new Evented();\r\n\r\n\treturn {\r\n\t    publish: function(name, arg1,argn) {\r\n\t        var data = [].slice.call(arguments, 1);\r\n\r\n\t        return hub.trigger({\r\n\t            type : name,\r\n\t            data : data\r\n\t        });\r\n\t    },\r\n\r\n        subscribe: function(name, listener,ctx) {\r\n        \tvar handler = function(e){\r\n                listener.apply(ctx,e.data);\r\n            };\r\n            hub.on(name, handler);\r\n            return {\r\n            \tremove : function(){\r\n            \t\thub.off(name,handler);\r\n            \t}\r\n            }\r\n\r\n        }\r\n\r\n\t}\r\n});\ndefine('skylark-langx/langx',[\r\n    \"./skylark\",\r\n    \"./arrays\",\r\n    \"./ArrayStore\",\r\n    \"./aspect\",\r\n    \"./async\",\r\n    \"./datetimes\",\r\n    \"./Deferred\",\r\n    \"./Evented\",\r\n    \"./funcs\",\r\n    \"./hoster\",\r\n    \"./klass\",\r\n    \"./numbers\",\r\n    \"./objects\",\r\n    \"./Restful\",\r\n    \"./Stateful\",\r\n    \"./strings\",\r\n    \"./topic\",\r\n    \"./types\",\r\n    \"./Xhr\"\r\n], function(skylark,arrays,ArrayStore,aspect,async,datetimes,Deferred,Evented,funcs,hoster,klass,numbers,objects,Restful,Stateful,strings,topic,types,Xhr) {\r\n    \"use strict\";\r\n    var toString = {}.toString,\r\n        concat = Array.prototype.concat,\r\n        indexOf = Array.prototype.indexOf,\r\n        slice = Array.prototype.slice,\r\n        filter = Array.prototype.filter,\r\n        mixin = objects.mixin,\r\n        safeMixin = objects.safeMixin,\r\n        isFunction = types.isFunction;\r\n\r\n\r\n    function createEvent(type, props) {\r\n        var e = new CustomEvent(type, props);\r\n\r\n        return safeMixin(e, props);\r\n    }\r\n    \r\n\r\n    function funcArg(context, arg, idx, payload) {\r\n        return isFunction(arg) ? arg.call(context, idx, payload) : arg;\r\n    }\r\n\r\n    function getQueryParams(url) {\r\n        var url = url || window.location.href,\r\n            segs = url.split(\"?\"),\r\n            params = {};\r\n\r\n        if (segs.length > 1) {\r\n            segs[1].split(\"&\").forEach(function(queryParam) {\r\n                var nv = queryParam.split('=');\r\n                params[nv[0]] = nv[1];\r\n            });\r\n        }\r\n        return params;\r\n    }\r\n\r\n\r\n    function toPixel(value) {\r\n        // style values can be floats, client code may want\r\n        // to round for integer pixels.\r\n        return parseFloat(value) || 0;\r\n    }\r\n\r\n\r\n    var _uid = 1;\r\n\r\n    function uid(obj) {\r\n        return obj._uid || (obj._uid = _uid++);\r\n    }\r\n\r\n    function langx() {\r\n        return langx;\r\n    }\r\n\r\n    mixin(langx, {\r\n        createEvent : createEvent,\r\n\r\n        funcArg: funcArg,\r\n\r\n        getQueryParams: getQueryParams,\r\n\r\n        toPixel: toPixel,\r\n\r\n        uid: uid,\r\n\r\n        URL: typeof window !== \"undefined\" ? window.URL || window.webkitURL : null\r\n\r\n    });\r\n\r\n\r\n    mixin(langx, arrays,aspect,datetimes,funcs,numbers,objects,strings,types,{\r\n        ArrayStore : ArrayStore,\r\n\r\n        async : async,\r\n        \r\n        Deferred: Deferred,\r\n\r\n        Evented: Evented,\r\n\r\n        hoster : hoster,\r\n\r\n        klass : klass,\r\n\r\n        Restful: Restful,\r\n        \r\n        Stateful: Stateful,\r\n\r\n        topic : topic,\r\n\r\n        Xhr: Xhr\r\n\r\n    });\r\n\r\n    return skylark.langx = langx;\r\n});\ndefine('skylark-utils-dom/langx',[\r\n    \"skylark-langx/langx\"\r\n], function(langx) {\r\n    return langx;\r\n});\r\n\ndefine('skylark-domx-layout/layouts',[\r\n    \"skylark-utils-dom/skylark\",\r\n    \"skylark-utils-dom/langx\"\r\n], function(skylark, langx) {\r\n\t\r\n\tvar layouts = skylark.layouts = {\r\n\t};\r\n\r\n\r\n\treturn layouts;\r\n});\ndefine('skylark-utils-dom/dom',[\"./skylark\"], function(skylark) {\r\n\treturn skylark.dom = skylark.attach(\"utils.dom\",{});\r\n});\r\n\ndefine('skylark-utils-dom/browser',[\r\n    \"./dom\",\r\n    \"./langx\"\r\n], function(dom,langx) {\r\n    \"use strict\";\r\n\r\n    var browser = langx.hoster.browser;\r\n \r\n    var checkedCssProperties = {\r\n            \"transitionproperty\": \"TransitionProperty\",\r\n        },\r\n        transEndEventNames = {\r\n          WebkitTransition : 'webkitTransitionEnd',\r\n          MozTransition    : 'transitionend',\r\n          OTransition      : 'oTransitionEnd otransitionend',\r\n          transition       : 'transitionend'\r\n        },\r\n        transEndEventName = null;\r\n\r\n\r\n    var css3PropPrefix = \"\",\r\n        css3StylePrefix = \"\",\r\n        css3EventPrefix = \"\",\r\n\r\n        cssStyles = {},\r\n        cssProps = {},\r\n\r\n        vendorPrefix,\r\n        vendorPrefixRE,\r\n        vendorPrefixesRE = /^(Webkit|webkit|O|Moz|moz|ms)(.*)$/,\r\n\r\n        document = window.document,\r\n        testEl = document.createElement(\"div\"),\r\n\r\n        matchesSelector = testEl.webkitMatchesSelector ||\r\n                          testEl.mozMatchesSelector ||\r\n                          testEl.oMatchesSelector ||\r\n                          testEl.matchesSelector,\r\n\r\n        requestFullScreen = testEl.requestFullscreen || \r\n                            testEl.webkitRequestFullscreen || \r\n                            testEl.mozRequestFullScreen || \r\n                            testEl.msRequestFullscreen,\r\n\r\n        exitFullScreen =  document.exitFullscreen ||\r\n                          document.webkitCancelFullScreen ||\r\n                          document.mozCancelFullScreen ||\r\n                          document.msExitFullscreen,\r\n\r\n        testStyle = testEl.style;\r\n\r\n    for (var name in testStyle) {\r\n        var matched = name.match(vendorPrefixRE || vendorPrefixesRE);\r\n        if (matched) {\r\n            if (!vendorPrefixRE) {\r\n                vendorPrefix = matched[1];\r\n                vendorPrefixRE = new RegExp(\"^(\" + vendorPrefix + \")(.*)$\");\r\n\r\n                css3StylePrefix = vendorPrefix;\r\n                css3PropPrefix = '-' + vendorPrefix.toLowerCase() + '-';\r\n                css3EventPrefix = vendorPrefix.toLowerCase();\r\n            }\r\n\r\n            cssStyles[langx.lowerFirst(matched[2])] = name;\r\n            var cssPropName = langx.dasherize(matched[2]);\r\n            cssProps[cssPropName] = css3PropPrefix + cssPropName;\r\n\r\n            if (transEndEventNames[name]) {\r\n              transEndEventName = transEndEventNames[name];\r\n            }\r\n        }\r\n    }\r\n\r\n    if (!transEndEventName) {\r\n        if (testStyle[\"transition\"] !== undefined) {\r\n            transEndEventName = transEndEventNames[\"transition\"];\r\n        }\r\n    }\r\n\r\n    function normalizeCssEvent(name) {\r\n        return css3EventPrefix ? css3EventPrefix + name : name.toLowerCase();\r\n    }\r\n\r\n    function normalizeCssProperty(name) {\r\n        return cssProps[name] || name;\r\n    }\r\n\r\n    function normalizeStyleProperty(name) {\r\n        return cssStyles[name] || name;\r\n    }\r\n\r\n    langx.mixin(browser, {\r\n        css3PropPrefix: css3PropPrefix,\r\n\r\n        isIE : !!/msie/i.exec( window.navigator.userAgent ),\r\n\r\n        normalizeStyleProperty: normalizeStyleProperty,\r\n\r\n        normalizeCssProperty: normalizeCssProperty,\r\n\r\n        normalizeCssEvent: normalizeCssEvent,\r\n\r\n        matchesSelector: matchesSelector,\r\n\r\n        requestFullScreen : requestFullScreen,\r\n\r\n        exitFullscreen : requestFullScreen,\r\n\r\n        location: function() {\r\n            return window.location;\r\n        },\r\n\r\n        support : {\r\n\r\n        }\r\n\r\n    });\r\n\r\n    if  (transEndEventName) {\r\n        browser.support.transition = {\r\n            end : transEndEventName\r\n        };\r\n    }\r\n\r\n    testEl = null;\r\n\r\n    return dom.browser = browser;\r\n});\r\n\ndefine('skylark-utils-dom/styler',[\r\n    \"./dom\",\r\n    \"./langx\"\r\n], function(dom, langx) {\r\n    var every = Array.prototype.every,\r\n        forEach = Array.prototype.forEach,\r\n        camelCase = langx.camelCase,\r\n        dasherize = langx.dasherize;\r\n\r\n    function maybeAddPx(name, value) {\r\n        return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\r\n    }\r\n\r\n    var cssNumber = {\r\n            'column-count': 1,\r\n            'columns': 1,\r\n            'font-weight': 1,\r\n            'line-height': 1,\r\n            'opacity': 1,\r\n            'z-index': 1,\r\n            'zoom': 1\r\n        },\r\n        classReCache = {\r\n\r\n        };\r\n\r\n    function classRE(name) {\r\n        return name in classReCache ?\r\n            classReCache[name] : (classReCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'));\r\n    }\r\n\r\n    // access className property while respecting SVGAnimatedString\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} value\r\n     */\r\n    function className(node, value) {\r\n        var klass = node.className || '',\r\n            svg = klass && klass.baseVal !== undefined\r\n\r\n        if (value === undefined) return svg ? klass.baseVal : klass\r\n        svg ? (klass.baseVal = value) : (node.className = value)\r\n    }\r\n\r\n    function disabled(elm, value ) {\r\n        if (arguments.length < 2) {\r\n            return !!this.dom.disabled;\r\n        }\r\n\r\n        elm.disabled = value;\r\n\r\n        return this;\r\n    }\r\n\r\n    var elementDisplay = {};\r\n\r\n    function defaultDisplay(nodeName) {\r\n        var element, display\r\n        if (!elementDisplay[nodeName]) {\r\n            element = document.createElement(nodeName)\r\n            document.body.appendChild(element)\r\n            display = getStyles(element).getPropertyValue(\"display\")\r\n            element.parentNode.removeChild(element)\r\n            display == \"none\" && (display = \"block\")\r\n            elementDisplay[nodeName] = display\r\n        }\r\n        return elementDisplay[nodeName]\r\n    }\r\n    /*\r\n     * Display the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function show(elm) {\r\n        styler.css(elm, \"display\", \"\");\r\n        if (styler.css(elm, \"display\") == \"none\") {\r\n            styler.css(elm, \"display\", defaultDisplay(elm.nodeName));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isInvisible(elm) {\r\n        return styler.css(elm, \"display\") == \"none\" || styler.css(elm, \"opacity\") == 0;\r\n    }\r\n\r\n    /*\r\n     * Hide the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function hide(elm) {\r\n        styler.css(elm, \"display\", \"none\");\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function addClass(elm, name) {\r\n        if (!name) return this\r\n        var cls = className(elm),\r\n            names;\r\n        if (langx.isString(name)) {\r\n            names = name.split(/\\s+/g);\r\n        } else {\r\n            names = name;\r\n        }\r\n        names.forEach(function(klass) {\r\n            var re = classRE(klass);\r\n            if (!cls.match(re)) {\r\n                cls += (cls ? \" \" : \"\") + klass;\r\n            }\r\n        });\r\n\r\n        className(elm, cls);\r\n\r\n        return this;\r\n    }\r\n\r\n    function getStyles( elem ) {\r\n\r\n        // Support: IE <=11 only, Firefox <=30 (#15098, #14150)\r\n        // IE throws on elements created in popups\r\n        // FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\r\n        var view = elem.ownerDocument.defaultView;\r\n\r\n        if ( !view || !view.opener ) {\r\n            view = window;\r\n        }\r\n\r\n        return view.getComputedStyle( elem);\r\n    }\r\n\r\n\r\n    /*\r\n     * Get the value of a computed style property for the first element in the set of matched elements or set one or more CSS properties for every matched element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} property\r\n     * @param {Any} value\r\n     */\r\n    function css(elm, property, value) {\r\n        if (arguments.length < 3) {\r\n            var computedStyle,\r\n                computedStyle = getStyles(elm)\r\n            if (langx.isString(property)) {\r\n                return elm.style[camelCase(property)] || computedStyle.getPropertyValue(dasherize(property))\r\n            } else if (langx.isArrayLike(property)) {\r\n                var props = {}\r\n                forEach.call(property, function(prop) {\r\n                    props[prop] = (elm.style[camelCase(prop)] || computedStyle.getPropertyValue(dasherize(prop)))\r\n                })\r\n                return props\r\n            }\r\n        }\r\n\r\n        var css = '';\r\n        if (typeof(property) == 'string') {\r\n            if (!value && value !== 0) {\r\n                elm.style.removeProperty(dasherize(property));\r\n            } else {\r\n                css = dasherize(property) + \":\" + maybeAddPx(property, value)\r\n            }\r\n        } else {\r\n            for (key in property) {\r\n                if (property[key] === undefined) {\r\n                    continue;\r\n                }\r\n                if (!property[key] && property[key] !== 0) {\r\n                    elm.style.removeProperty(dasherize(key));\r\n                } else {\r\n                    css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\r\n                }\r\n            }\r\n        }\r\n\r\n        elm.style.cssText += ';' + css;\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Determine whether any of the matched elements are assigned the given class.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function hasClass(elm, name) {\r\n        var re = classRE(name);\r\n        return elm.className && elm.className.match(re);\r\n    }\r\n\r\n    /*\r\n     * Remove a single class, multiple classes, or all classes from each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function removeClass(elm, name) {\r\n        if (name) {\r\n            var cls = className(elm),\r\n                names;\r\n\r\n            if (langx.isString(name)) {\r\n                names = name.split(/\\s+/g);\r\n            } else {\r\n                names = name;\r\n            }\r\n\r\n            names.forEach(function(klass) {\r\n                var re = classRE(klass);\r\n                if (cls.match(re)) {\r\n                    cls = cls.replace(re, \" \");\r\n                }\r\n            });\r\n\r\n            className(elm, cls.trim());\r\n        } else {\r\n            className(elm, \"\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Add or remove one or more classes from the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     * @param {} when\r\n     */\r\n    function toggleClass(elm, name, when) {\r\n        var self = this;\r\n        name.split(/\\s+/g).forEach(function(klass) {\r\n            if (when === undefined) {\r\n                when = !self.hasClass(elm, klass);\r\n            }\r\n            if (when) {\r\n                self.addClass(elm, klass);\r\n            } else {\r\n                self.removeClass(elm, klass)\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    var styler = function() {\r\n        return styler;\r\n    };\r\n\r\n    langx.mixin(styler, {\r\n        autocssfix: false,\r\n        cssHooks: {\r\n\r\n        },\r\n\r\n        addClass: addClass,\r\n        className: className,\r\n        css: css,\r\n        disabled : disabled,        \r\n        hasClass: hasClass,\r\n        hide: hide,\r\n        isInvisible: isInvisible,\r\n        removeClass: removeClass,\r\n        show: show,\r\n        toggleClass: toggleClass\r\n    });\r\n\r\n    return dom.styler = styler;\r\n});\ndefine('skylark-utils-dom/noder',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./styler\"\r\n], function(dom, langx, browser, styler) {\r\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\r\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        rootNodeRE = /^(?:body|html)$/i,\r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    function ensureNodes(nodes, copyByClone) {\r\n        if (!langx.isArrayLike(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return langx.flatten(nodes);\r\n    }\r\n\r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\r\n\r\n    function activeElement(doc) {\r\n        doc = doc || document;\r\n        var el;\r\n\r\n        // Support: IE 9 only\r\n        // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\r\n        try {\r\n            el = doc.activeElement;\r\n        } catch ( error ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        // Support: IE 9 - 11 only\r\n        // IE may return null instead of an element\r\n        // Interestingly, this only seems to occur when NOT in an iframe\r\n        if ( !el ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        // Support: IE 11 only\r\n        // IE11 returns a seemingly empty object in some cases when accessing\r\n        // document.activeElement from an <iframe>\r\n        if ( !el.nodeName ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        return el;\r\n    };\r\n\r\n    function after(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function append(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function before(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Get the children of the specified node, including text and comment nodes.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\r\n    /*   \r\n     * Create a element and set attributes on it.\r\n     * @param {HTMLElement} tag\r\n     * @param {props} props\r\n     * @param } parent\r\n     */\r\n    function createElement(tag, props, parent) {\r\n        var node = document.createElement(tag);\r\n        if (props) {\r\n            for (var name in props) {\r\n                node.setAttribute(name, props[name]);\r\n            }\r\n        }\r\n        if (parent) {\r\n            append(parent, node);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    /*   \r\n     * Create a DocumentFragment from the HTML fragment.\r\n     * @param {String} html\r\n     */\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        html = langx.trim(html);\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        }\r\n\r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = \"\" + html;\r\n        dom = slice.call(container.childNodes);\r\n\r\n        dom.forEach(function(node) {\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n    /*   \r\n     * Create a deep copy of the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {Boolean} deep\r\n     */\r\n    function clone(node, deep) {\r\n        var self = this,\r\n            clone;\r\n\r\n        // TODO: Add feature detection here in the future\r\n        if (!isIE || node.nodeType !== 1 || deep) {\r\n            return node.cloneNode(deep);\r\n        }\r\n\r\n        // Make a HTML5 safe shallow copy\r\n        if (!deep) {\r\n            clone = document.createElement(node.nodeName);\r\n\r\n            // Copy attribs\r\n            each(self.getAttribs(node), function(attr) {\r\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\r\n            });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node .\r\n     * @param {String} node\r\n     * @param {Node} child\r\n     */\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\r\n    /*   \r\n     * Create a new Text node.\r\n     * @param {String} text\r\n     * @param {Node} child\r\n     */\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n    /*   \r\n     * Get the current document object.\r\n     */\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n    /*   \r\n     * Remove all child nodes of the set of matched elements from the DOM.\r\n     * @param {Object} node\r\n     */\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    var fulledEl = null;\r\n\r\n    function fullScreen(el) {\r\n        if (el === false) {\r\n            browser.exitFullScreen.apply(document);\r\n        } else if (el) {\r\n            browser.requestFullScreen.apply(el);\r\n            fulledEl = el;\r\n        } else {\r\n            return (\r\n                document.fullscreenElement ||\r\n                document.webkitFullscreenElement ||\r\n                document.mozFullScreenElement ||\r\n                document.msFullscreenElement\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    // Selectors\r\n    function focusable( element, hasTabindex ) {\r\n        var map, mapName, img, focusableIfVisible, fieldset,\r\n            nodeName = element.nodeName.toLowerCase();\r\n\r\n        if ( \"area\" === nodeName ) {\r\n            map = element.parentNode;\r\n            mapName = map.name;\r\n            if ( !element.href || !mapName || map.nodeName.toLowerCase() !== \"map\" ) {\r\n                return false;\r\n            }\r\n            img = $( \"img[usemap='#\" + mapName + \"']\" );\r\n            return img.length > 0 && img.is( \":visible\" );\r\n        }\r\n\r\n        if ( /^(input|select|textarea|button|object)$/.test( nodeName ) ) {\r\n            focusableIfVisible = !element.disabled;\r\n\r\n            if ( focusableIfVisible ) {\r\n\r\n                // Form controls within a disabled fieldset are disabled.\r\n                // However, controls within the fieldset's legend do not get disabled.\r\n                // Since controls generally aren't placed inside legends, we skip\r\n                // this portion of the check.\r\n                fieldset = $( element ).closest( \"fieldset\" )[ 0 ];\r\n                if ( fieldset ) {\r\n                    focusableIfVisible = !fieldset.disabled;\r\n                }\r\n            }\r\n        } else if ( \"a\" === nodeName ) {\r\n            focusableIfVisible = element.href || hasTabindex;\r\n        } else {\r\n            focusableIfVisible = hasTabindex;\r\n        }\r\n\r\n        return focusableIfVisible && $( element ).is( \":visible\" ) && visible( $( element ) );\r\n    };\r\n\r\n\r\n   var rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi;\r\n \r\n    /*   \r\n     * Get the HTML contents of the first element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} html\r\n     */\r\n    function html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            this.empty(node);\r\n            html = html || \"\";\r\n            if (langx.isString(html)) {\r\n                html = html.replace( rxhtmlTag, \"<$1></$2>\" );\r\n            }\r\n            if (langx.isString(html) || langx.isNumber(html)) {               \r\n                node.innerHTML = html;\r\n            } else if (langx.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node.\r\n     * @param {Node} node\r\n     * @param {Node} parent\r\n     * @param {Node} directly\r\n     */\r\n    function isChildOf(node, parent, directly) {\r\n        if (directly) {\r\n            return node.parentNode === parent;\r\n        }\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a document.\r\n     * @param {Node} node\r\n     */\r\n    function isDocument(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is in the document\r\n     * @param {Node} node\r\n     */\r\n    function isInDocument(node) {\r\n      return (node === document.body) ? true : document.body.contains(node);\r\n    }        \r\n\r\n    /*   \r\n     * Get the owner document object for the specified element.\r\n     * @param {Node} elm\r\n     */\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function ownerWindow(elm) {\r\n        var doc = ownerDoc(elm);\r\n        return doc.defaultView || doc.parentWindow;\r\n    }\r\n\r\n    /*   \r\n     * insert one or more nodes as the first children of the specified node.\r\n     * @param {Node} node\r\n     * @param {Node or ArrayLike} placing\r\n     * @param {Boolean Optional} copyByClone\r\n     */\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && styler.css(parent, \"position\") == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     * @param {Node} params\r\n     */\r\n    function overlay(elm, params) {\r\n        var overlayDiv = createElement(\"div\", params);\r\n        styler.css(overlayDiv, {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            zIndex: 0x7FFFFFFF,\r\n            opacity: 0.7\r\n        });\r\n        elm.appendChild(overlayDiv);\r\n        return overlayDiv;\r\n\r\n    }\r\n\r\n    /*   \r\n     * Remove the set of matched elements from the DOM.\r\n     * @param {Node} node\r\n     */\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            try {\r\n                node.parentNode.removeChild(node);\r\n            } catch (e) {\r\n                console.warn(\"The node is already removed\", e);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function removeChild(node,children) {\r\n        if (!langx.isArrayLike(children)) {\r\n            children = [children];\r\n        }\r\n        for (var i=0;i<children.length;i++) {\r\n            node.removeChild(children[i]);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function scrollParent( elm, includeHidden ) {\r\n        var position = styler.css(elm,\"position\" ),\r\n            excludeStaticParent = position === \"absolute\",\r\n            overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/,\r\n            scrollParent = this.parents().filter( function() {\r\n                var parent = $( this );\r\n                if ( excludeStaticParent && parent.css( \"position\" ) === \"static\" ) {\r\n                    return false;\r\n                }\r\n                return overflowRegex.test( parent.css( \"overflow\" ) + parent.css( \"overflow-y\" ) +\r\n                    parent.css( \"overflow-x\" ) );\r\n            } ).eq( 0 );\r\n\r\n        return position === \"fixed\" || !scrollParent.length ?\r\n            $( this[ 0 ].ownerDocument || document ) :\r\n            scrollParent;\r\n    };\r\n\r\n        /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {Node} node\r\n     * @param {Node} oldNode\r\n     */\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {HTMLElement} elm\r\n     * @param {Node} params\r\n     */\r\n    function throb(elm, params) {\r\n        params = params || {};\r\n        var self = this,\r\n            text = params.text,\r\n            style = params.style,\r\n            time = params.time,\r\n            callback = params.callback,\r\n            timer,\r\n\r\n            throbber = this.createElement(\"div\", {\r\n                \"class\": params.className || \"throbber\"\r\n            }),\r\n            _overlay = overlay(throbber, {\r\n                \"class\": 'overlay fade'\r\n            }),\r\n            throb = this.createElement(\"div\", {\r\n                \"class\": \"throb\"\r\n            }),\r\n            textNode = this.createTextNode(text || \"\"),\r\n            remove = function() {\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                if (throbber) {\r\n                    self.remove(throbber);\r\n                    throbber = null;\r\n                }\r\n            },\r\n            update = function(params) {\r\n                if (params && params.text && throbber) {\r\n                    textNode.nodeValue = params.text;\r\n                }\r\n            };\r\n        if (params.style) {\r\n            styler.css(throbber,params.style);\r\n        }\r\n        throb.appendChild(textNode);\r\n        throbber.appendChild(throb);\r\n        elm.appendChild(throbber);\r\n        var end = function() {\r\n            remove();\r\n            if (callback) callback();\r\n        };\r\n        if (time) {\r\n            timer = setTimeout(end, time);\r\n        }\r\n\r\n        return {\r\n            remove: remove,\r\n            update: update\r\n        };\r\n    }\r\n\r\n\r\n    /*   \r\n     * traverse the specified node and its descendants, perform the callback function on each\r\n     * @param {Node} node\r\n     * @param {Function} fn\r\n     */\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} node\r\n     */\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around each element in the set of matched elements.\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapper(node, wrapperNode) {\r\n        if (langx.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around the content of each element in the set of matched\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Remove the parents of the set of matched elements from the DOM, leaving the matched\r\n     * @param {Node} node\r\n     */\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (this.isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    langx.mixin(noder, {\r\n        active  : activeElement,\r\n\r\n        blur : function(el) {\r\n            el.blur();\r\n        },\r\n\r\n        body: function() {\r\n            return document.body;\r\n        },\r\n\r\n        clone: clone,\r\n        contents: contents,\r\n\r\n        createElement: createElement,\r\n\r\n        createFragment: createFragment,\r\n\r\n        contains: contains,\r\n\r\n        createTextNode: createTextNode,\r\n\r\n        doc: doc,\r\n\r\n        empty: empty,\r\n\r\n        fullScreen: fullScreen,\r\n\r\n        focusable: focusable,\r\n\r\n        html: html,\r\n\r\n        isChildOf: isChildOf,\r\n\r\n        isDocument: isDocument,\r\n\r\n        isInDocument: isInDocument,\r\n\r\n        isWindow: langx.isWindow,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        ownerDoc: ownerDoc,\r\n\r\n        ownerWindow: ownerWindow,\r\n\r\n        after: after,\r\n\r\n        before: before,\r\n\r\n        prepend: prepend,\r\n\r\n        append: append,\r\n\r\n        remove: remove,\r\n\r\n        removeChild : removeChild,\r\n\r\n        replace: replace,\r\n\r\n        throb: throb,\r\n\r\n        traverse: traverse,\r\n\r\n        reverse: reverse,\r\n\r\n        wrapper: wrapper,\r\n\r\n        wrapperInner: wrapperInner,\r\n\r\n        unwrap: unwrap\r\n    });\r\n\r\n    return dom.noder = noder;\r\n});\ndefine('skylark-utils-dom/finder',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./noder\"\r\n], function(dom, langx, browser, noder, velm) {\r\n    var local = {},\r\n        filter = Array.prototype.filter,\r\n        slice = Array.prototype.slice,\r\n        nativeMatchesSelector = browser.matchesSelector;\r\n\r\n    /*\r\n    ---\r\n    name: Slick.Parser\r\n    description: Standalone CSS3 Selector parser\r\n    provides: Slick.Parser\r\n    ...\r\n    */\r\n    ;\r\n    (function() {\r\n\r\n        var parsed,\r\n            separatorIndex,\r\n            combinatorIndex,\r\n            reversed,\r\n            cache = {},\r\n            reverseCache = {},\r\n            reUnescape = /\\\\/g;\r\n\r\n        var parse = function(expression, isReversed) {\r\n            if (expression == null) return null;\r\n            if (expression.Slick === true) return expression;\r\n            expression = ('' + expression).replace(/^\\s+|\\s+$/g, '');\r\n            reversed = !!isReversed;\r\n            var currentCache = (reversed) ? reverseCache : cache;\r\n            if (currentCache[expression]) return currentCache[expression];\r\n            parsed = {\r\n                Slick: true,\r\n                expressions: [],\r\n                raw: expression,\r\n                reverse: function() {\r\n                    return parse(this.raw, true);\r\n                }\r\n            };\r\n            separatorIndex = -1;\r\n            while (expression != (expression = expression.replace(regexp, parser)));\r\n            parsed.length = parsed.expressions.length;\r\n            return currentCache[parsed.raw] = (reversed) ? reverse(parsed) : parsed;\r\n        };\r\n\r\n        var reverseCombinator = function(combinator) {\r\n            if (combinator === '!') return ' ';\r\n            else if (combinator === ' ') return '!';\r\n            else if ((/^!/).test(combinator)) return combinator.replace(/^!/, '');\r\n            else return '!' + combinator;\r\n        };\r\n\r\n        var reverse = function(expression) {\r\n            var expressions = expression.expressions;\r\n            for (var i = 0; i < expressions.length; i++) {\r\n                var exp = expressions[i];\r\n                var last = {\r\n                    parts: [],\r\n                    tag: '*',\r\n                    combinator: reverseCombinator(exp[0].combinator)\r\n                };\r\n\r\n                for (var j = 0; j < exp.length; j++) {\r\n                    var cexp = exp[j];\r\n                    if (!cexp.reverseCombinator) cexp.reverseCombinator = ' ';\r\n                    cexp.combinator = cexp.reverseCombinator;\r\n                    delete cexp.reverseCombinator;\r\n                }\r\n\r\n                exp.reverse().push(last);\r\n            }\r\n            return expression;\r\n        };\r\n\r\n        var escapeRegExp = (function() {\r\n            // Credit: XRegExp 0.6.1 (c) 2007-2008 Steven Levithan <http://stevenlevithan.com/regex/xregexp/> MIT License\r\n            var from = /(?=[\\-\\[\\]{}()*+?.\\\\\\^$|,#\\s])/g,\r\n                to = '\\\\';\r\n            return function(string) {\r\n                return string.replace(from, to)\r\n            }\r\n        }())\r\n\r\n        var regexp = new RegExp(\r\n            \"^(?:\\\\s*(,)\\\\s*|\\\\s*(<combinator>+)\\\\s*|(\\\\s+)|(<unicode>+|\\\\*)|\\\\#(<unicode>+)|\\\\.(<unicode>+)|\\\\[\\\\s*(<unicode1>+)(?:\\\\s*([*^$!~|]?=)(?:\\\\s*(?:([\\\"']?)(.*?)\\\\9)))?\\\\s*\\\\](?!\\\\])|(:+)(<unicode>+)(?:\\\\((?:(?:([\\\"'])([^\\\\13]*)\\\\13)|((?:\\\\([^)]+\\\\)|[^()]*)+))\\\\))?)\"\r\n            .replace(/<combinator>/, '[' + escapeRegExp(\">+~`!@$%^&={}\\\\;</\") + ']')\r\n            .replace(/<unicode>/g, '(?:[\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n            .replace(/<unicode1>/g, '(?:[:\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n        );\r\n\r\n        function parser(\r\n            rawMatch,\r\n\r\n            separator,\r\n            combinator,\r\n            combinatorChildren,\r\n\r\n            tagName,\r\n            id,\r\n            className,\r\n\r\n            attributeKey,\r\n            attributeOperator,\r\n            attributeQuote,\r\n            attributeValue,\r\n\r\n            pseudoMarker,\r\n            pseudoClass,\r\n            pseudoQuote,\r\n            pseudoClassQuotedValue,\r\n            pseudoClassValue\r\n        ) {\r\n            if (separator || separatorIndex === -1) {\r\n                parsed.expressions[++separatorIndex] = [];\r\n                combinatorIndex = -1;\r\n                if (separator) return '';\r\n            }\r\n\r\n            if (combinator || combinatorChildren || combinatorIndex === -1) {\r\n                combinator = combinator || ' ';\r\n                var currentSeparator = parsed.expressions[separatorIndex];\r\n                if (reversed && currentSeparator[combinatorIndex])\r\n                    currentSeparator[combinatorIndex].reverseCombinator = reverseCombinator(combinator);\r\n                currentSeparator[++combinatorIndex] = {\r\n                    combinator: combinator,\r\n                    tag: '*'\r\n                };\r\n            }\r\n\r\n            var currentParsed = parsed.expressions[separatorIndex][combinatorIndex];\r\n\r\n            if (tagName) {\r\n                currentParsed.tag = tagName.replace(reUnescape, '');\r\n\r\n            } else if (id) {\r\n                currentParsed.id = id.replace(reUnescape, '');\r\n\r\n            } else if (className) {\r\n                className = className.replace(reUnescape, '');\r\n\r\n                if (!currentParsed.classList) currentParsed.classList = [];\r\n                if (!currentParsed.classes) currentParsed.classes = [];\r\n                currentParsed.classList.push(className);\r\n                currentParsed.classes.push({\r\n                    value: className,\r\n                    regexp: new RegExp('(^|\\\\s)' + escapeRegExp(className) + '(\\\\s|$)')\r\n                });\r\n\r\n            } else if (pseudoClass) {\r\n                pseudoClassValue = pseudoClassValue || pseudoClassQuotedValue;\r\n                pseudoClassValue = pseudoClassValue ? pseudoClassValue.replace(reUnescape, '') : null;\r\n\r\n                if (!currentParsed.pseudos) currentParsed.pseudos = [];\r\n                currentParsed.pseudos.push({\r\n                    key: pseudoClass.replace(reUnescape, ''),\r\n                    value: pseudoClassValue,\r\n                    type: pseudoMarker.length == 1 ? 'class' : 'element'\r\n                });\r\n\r\n            } else if (attributeKey) {\r\n                attributeKey = attributeKey.replace(reUnescape, '');\r\n                attributeValue = (attributeValue || '').replace(reUnescape, '');\r\n\r\n                var test, regexp;\r\n\r\n                switch (attributeOperator) {\r\n                    case '^=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue));\r\n                        break;\r\n                    case '$=':\r\n                        regexp = new RegExp(escapeRegExp(attributeValue) + '$');\r\n                        break;\r\n                    case '~=':\r\n                        regexp = new RegExp('(^|\\\\s)' + escapeRegExp(attributeValue) + '(\\\\s|$)');\r\n                        break;\r\n                    case '|=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue) + '(-|$)');\r\n                        break;\r\n                    case '=':\r\n                        test = function(value) {\r\n                            return attributeValue == value;\r\n                        };\r\n                        break;\r\n                    case '*=':\r\n                        test = function(value) {\r\n                            return value && value.indexOf(attributeValue) > -1;\r\n                        };\r\n                        break;\r\n                    case '!=':\r\n                        test = function(value) {\r\n                            return attributeValue != value;\r\n                        };\r\n                        break;\r\n                    default:\r\n                        test = function(value) {\r\n                            return !!value;\r\n                        };\r\n                }\r\n\r\n                if (attributeValue == '' && (/^[*$^]=$/).test(attributeOperator)) test = function() {\r\n                    return false;\r\n                };\r\n\r\n                if (!test) test = function(value) {\r\n                    return value && regexp.test(value);\r\n                };\r\n\r\n                if (!currentParsed.attributes) currentParsed.attributes = [];\r\n                currentParsed.attributes.push({\r\n                    key: attributeKey,\r\n                    operator: attributeOperator,\r\n                    value: attributeValue,\r\n                    test: test\r\n                });\r\n\r\n            }\r\n\r\n            return '';\r\n        };\r\n\r\n        // Slick NS\r\n\r\n        var Slick = (this.Slick || {});\r\n\r\n        Slick.parse = function(expression) {\r\n            return parse(expression);\r\n        };\r\n\r\n        Slick.escapeRegExp = escapeRegExp;\r\n\r\n        if (!this.Slick) this.Slick = Slick;\r\n\r\n    }).apply(local);\r\n\r\n\r\n    var simpleClassSelectorRE = /^\\.([\\w-]*)$/,\r\n        simpleIdSelectorRE = /^#([\\w-]*)$/,\r\n        rinputs = /^(?:input|select|textarea|button)$/i,\r\n        rheader = /^h\\d$/i,\r\n        slice = Array.prototype.slice;\r\n\r\n\r\n    local.parseSelector = local.Slick.parse;\r\n\r\n\r\n    var pseudos = local.pseudos = {\r\n        // custom pseudos\r\n        \"button\": function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === \"button\" || name === \"button\";\r\n        },\r\n\r\n        'checked': function(elm) {\r\n            return !!elm.checked;\r\n        },\r\n\r\n        'contains': function(elm, idx, nodes, text) {\r\n            if ($(this).text().indexOf(text) > -1) return this\r\n        },\r\n\r\n        'disabled': function(elm) {\r\n            return !!elm.disabled;\r\n        },\r\n\r\n        'enabled': function(elm) {\r\n            return !elm.disabled;\r\n        },\r\n\r\n        'eq': function(elm, idx, nodes, value) {\r\n            return (idx == value);\r\n        },\r\n\r\n        'even': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 0;\r\n        },\r\n\r\n        'focus': function(elm) {\r\n            return document.activeElement === elm && (elm.href || elm.type || elm.tabindex);\r\n        },\r\n\r\n        'focusable': function( elm ) {\r\n            return noder.focusable(elm, elm.tabindex != null );\r\n        },\r\n\r\n        'first': function(elm, idx) {\r\n            return (idx === 0);\r\n        },\r\n\r\n        'gt': function(elm, idx, nodes, value) {\r\n            return (idx > value);\r\n        },\r\n\r\n        'has': function(elm, idx, nodes, sel) {\r\n            return find(elm, sel);\r\n        },\r\n\r\n        // Element/input types\r\n        \"header\": function(elem) {\r\n            return rheader.test(elem.nodeName);\r\n        },\r\n\r\n        'hidden': function(elm) {\r\n            return !local.pseudos[\"visible\"](elm);\r\n        },\r\n\r\n        \"input\": function(elem) {\r\n            return rinputs.test(elem.nodeName);\r\n        },\r\n\r\n        'last': function(elm, idx, nodes) {\r\n            return (idx === nodes.length - 1);\r\n        },\r\n\r\n        'lt': function(elm, idx, nodes, value) {\r\n            return (idx < value);\r\n        },\r\n\r\n        'not': function(elm, idx, nodes, sel) {\r\n            return !matches(elm, sel);\r\n        },\r\n\r\n        'odd': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 1;\r\n        },\r\n\r\n        /*   \r\n         * Get the parent of each element in the current set of matched elements.\r\n         * @param {Object} elm\r\n         */\r\n        'parent': function(elm) {\r\n            return !!elm.parentNode;\r\n        },\r\n\r\n        'selected': function(elm) {\r\n            return !!elm.selected;\r\n        },\r\n\r\n        'tabbable': function(elm) {\r\n            var tabIndex = elm.tabindex,\r\n                hasTabindex = tabIndex != null;\r\n            return ( !hasTabindex || tabIndex >= 0 ) && noder.focusable( element, hasTabindex );\r\n        },\r\n\r\n        'text': function(elm) {\r\n            return elm.type === \"text\";\r\n        },\r\n\r\n        'visible': function(elm) {\r\n            return elm.offsetWidth && elm.offsetWidth\r\n        }\r\n    };\r\n\r\n    [\"first\", \"eq\", \"last\"].forEach(function(item) {\r\n        pseudos[item].isArrayFilter = true;\r\n    });\r\n\r\n\r\n\r\n    pseudos[\"nth\"] = pseudos[\"eq\"];\r\n\r\n    function createInputPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === type;\r\n        };\r\n    }\r\n\r\n    function createButtonPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return (name === \"input\" || name === \"button\") && elem.type === type;\r\n        };\r\n    }\r\n\r\n    // Add button/input type pseudos\r\n    for (i in {\r\n        radio: true,\r\n        checkbox: true,\r\n        file: true,\r\n        password: true,\r\n        image: true\r\n    }) {\r\n        pseudos[i] = createInputPseudo(i);\r\n    }\r\n    for (i in {\r\n        submit: true,\r\n        reset: true\r\n    }) {\r\n        pseudos[i] = createButtonPseudo(i);\r\n    }\r\n\r\n\r\n    local.divide = function(cond) {\r\n        var nativeSelector = \"\",\r\n            customPseudos = [],\r\n            tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos;\r\n\r\n\r\n        if (id = cond.id) {\r\n            nativeSelector += (\"#\" + id);\r\n        }\r\n        if (classes = cond.classes) {\r\n            for (var i = classes.length; i--;) {\r\n                nativeSelector += (\".\" + classes[i].value);\r\n            }\r\n        }\r\n        if (attributes = cond.attributes) {\r\n            for (var i = 0; i < attributes.length; i++) {\r\n                if (attributes[i].operator) {\r\n                    nativeSelector += (\"[\" + attributes[i].key + attributes[i].operator + JSON.stringify(attributes[i].value) + \"]\");\r\n                } else {\r\n                    nativeSelector += (\"[\" + attributes[i].key + \"]\");\r\n                }\r\n            }\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (this.pseudos[part.key]) {\r\n                    customPseudos.push(part);\r\n                } else {\r\n                    if (part.value !== undefined) {\r\n                        nativeSelector += (\":\" + part.key + \"(\" + JSON.stringify(part))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (tag = cond.tag) {\r\n            if (tag !== \"*\") {\r\n                nativeSelector = tag.toUpperCase() + nativeSelector;\r\n            }\r\n        }\r\n\r\n        if (!nativeSelector) {\r\n            nativeSelector = \"*\";\r\n        }\r\n\r\n        return {\r\n            nativeSelector: nativeSelector,\r\n            customPseudos: customPseudos\r\n        }\r\n\r\n    };\r\n\r\n    local.check = function(node, cond, idx, nodes, arrayFilte) {\r\n        var tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos,\r\n\r\n            i, part, cls, pseudo;\r\n\r\n        if (!arrayFilte) {\r\n            if (tag = cond.tag) {\r\n                var nodeName = node.nodeName.toUpperCase();\r\n                if (tag == '*') {\r\n                    if (nodeName < '@') return false; // Fix for comment nodes and closed nodes\r\n                } else {\r\n                    if (nodeName != (tag || \"\").toUpperCase()) return false;\r\n                }\r\n            }\r\n\r\n            if (id = cond.id) {\r\n                if (node.getAttribute('id') != id) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n\r\n            if (classes = cond.classes) {\r\n                for (i = classes.length; i--;) {\r\n                    cls = node.getAttribute('class');\r\n                    if (!(cls && classes[i].regexp.test(cls))) return false;\r\n                }\r\n            }\r\n\r\n            if (attributes = cond.attributes) {\r\n                for (i = attributes.length; i--;) {\r\n                    part = attributes[i];\r\n                    if (part.operator ? !part.test(node.getAttribute(part.key)) : !node.hasAttribute(part.key)) return false;\r\n                }\r\n            }\r\n\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (pseudo = this.pseudos[part.key]) {\r\n                    if ((arrayFilte && pseudo.isArrayFilter) || (!arrayFilte && !pseudo.isArrayFilter)) {\r\n                        if (!pseudo(node, idx, nodes, part.value)) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (!arrayFilte && !nativeMatchesSelector.call(node, part.key)) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    local.match = function(node, selector) {\r\n\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            parsed = selector;\r\n        }\r\n\r\n        if (!parsed) {\r\n            return true;\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            simpleExpCounter = 0,\r\n            i,\r\n            currentExpression;\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n                if (this.check(node, exp)) {\r\n                    return true;\r\n                }\r\n                simpleExpCounter++;\r\n            }\r\n        }\r\n\r\n        if (simpleExpCounter == parsed.length) {\r\n            return false;\r\n        }\r\n\r\n        var nodes = this.query(document, parsed),\r\n            item;\r\n        for (i = 0; item = nodes[i++];) {\r\n            if (item === node) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    local.filterSingle = function(nodes, exp) {\r\n        var matchs = filter.call(nodes, function(node, idx) {\r\n            return local.check(node, exp, idx, nodes, false);\r\n        });\r\n\r\n        matchs = filter.call(matchs, function(node, idx) {\r\n            return local.check(node, exp, idx, matchs, true);\r\n        });\r\n        return matchs;\r\n    };\r\n\r\n    local.filter = function(nodes, selector) {\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            return local.filterSingle(nodes, selector);\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            i,\r\n            currentExpression,\r\n            ret = [];\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n\r\n                var matchs = local.filterSingle(nodes, exp);\r\n\r\n                ret = langx.uniq(ret.concat(matchs));\r\n            } else {\r\n                throw new Error(\"not supported selector:\" + selector);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n\r\n    };\r\n\r\n    local.combine = function(elm, bit) {\r\n        var op = bit.combinator,\r\n            cond = bit,\r\n            node1,\r\n            nodes = [];\r\n\r\n        switch (op) {\r\n            case '>': // direct children\r\n                nodes = children(elm, cond);\r\n                break;\r\n            case '+': // next sibling\r\n                node1 = nextSibling(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '^': // first child\r\n                node1 = firstChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '~': // next siblings\r\n                nodes = nextSiblings(elm, cond);\r\n                break;\r\n            case '++': // next sibling and previous sibling\r\n                var prev = previousSibling(elm, cond, true),\r\n                    next = nextSibling(elm, cond, true);\r\n                if (prev) {\r\n                    nodes.push(prev);\r\n                }\r\n                if (next) {\r\n                    nodes.push(next);\r\n                }\r\n                break;\r\n            case '~~': // next siblings and previous siblings\r\n                nodes = siblings(elm, cond);\r\n                break;\r\n            case '!': // all parent nodes up to document\r\n                nodes = ancestors(elm, cond);\r\n                break;\r\n            case '!>': // direct parent (one level)\r\n                node1 = parent(elm, cond);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!+': // previous sibling\r\n                nodes = previousSibling(elm, cond, true);\r\n                break;\r\n            case '!^': // last child\r\n                node1 = lastChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!~': // previous siblings\r\n                nodes = previousSiblings(elm, cond);\r\n                break;\r\n            default:\r\n                var divided = this.divide(bit);\r\n                nodes = slice.call(elm.querySelectorAll(divided.nativeSelector));\r\n                if (divided.customPseudos) {\r\n                    for (var i = divided.customPseudos.length - 1; i >= 0; i--) {\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, false)\r\n                        });\r\n\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, true)\r\n                        });\r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    local.query = function(node, selector, single) {\r\n\r\n\r\n        var parsed = this.Slick.parse(selector);\r\n\r\n        var\r\n            founds = [],\r\n            currentExpression, currentBit,\r\n            expressions = parsed.expressions;\r\n\r\n        for (var i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            var currentItems = [node],\r\n                found;\r\n            for (var j = 0;\r\n                (currentBit = currentExpression[j]); j++) {\r\n                found = langx.map(currentItems, function(item, i) {\r\n                    return local.combine(item, currentBit)\r\n                });\r\n                if (found) {\r\n                    currentItems = found;\r\n                }\r\n            }\r\n            if (found) {\r\n                founds = founds.concat(found);\r\n            }\r\n        }\r\n\r\n        return founds;\r\n    }\r\n\r\n    /*\r\n     * Get the nearest ancestor of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestor(node, selector, root) {\r\n        var rootIsSelector = root && langx.isString(root);\r\n        while (node = node.parentNode) {\r\n            if (matches(node, selector)) {\r\n                return node;\r\n            }\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the ancestors of the specitied element , optionally filtered by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestors(node, selector, root) {\r\n        var ret = [],\r\n            rootIsSelector = root && langx.isString(root);\r\n        while ((node = node.parentNode) && (node.nodeType !== 9)) {\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (langx.isArrayLike(root)) {\r\n                    if (langx.inArray(node,root)>-1) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n            ret.push(node); // TODO\r\n        }\r\n\r\n        if (selector) {\r\n            ret = local.filter(ret, selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Returns a element by its ID.\r\n     * @param {string} id\r\n     */\r\n    function byId(id, doc) {\r\n        doc = doc || noder.doc();\r\n        return doc.getElementById(id);\r\n    }\r\n\r\n    /*\r\n     * Get the children of the specified element , optionally filtered by a selector.\r\n     * @param {string} node\r\n     * @param {String optionlly} selector\r\n     */\r\n    function children(node, selector) {\r\n        var childNodes = node.childNodes,\r\n            ret = [];\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            var node = childNodes[i];\r\n            if (node.nodeType == 1) {\r\n                ret.push(node);\r\n            }\r\n        }\r\n        if (selector) {\r\n            ret = local.filter(ret, selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function closest(node, selector) {\r\n        while (node && !(matches(node, selector))) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    /*\r\n     * Get the decendant of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendants(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return slice.call(elm.querySelectorAll(selector));\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        return local.query(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the nearest decendent of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendant(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return elm.querySelector(selector);\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        var nodes = local.query(elm, selector);\r\n        if (nodes.length > 0) {\r\n            return nodes[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the descendants of each element in the current set of matched elements, filtered by a selector, jQuery object, or element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function find(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        if (matches(elm, selector)) {\r\n            return elm;\r\n        } else {\r\n            return descendant(elm, selector);\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the findAll of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function findAll(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        return descendants(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the first child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String} first\r\n     */\r\n    function firstChild(elm, selector, first) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[0];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (first) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the last child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String } last\r\n     */\r\n    function lastChild(elm, selector, last) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[childNodes.length - 1];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (last) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Check the specified element against a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function matches(elm, selector) {\r\n        if (!selector || !elm || elm.nodeType !== 1) {\r\n            return false\r\n        }\r\n\r\n        if (langx.isString(selector)) {\r\n            try {\r\n                return nativeMatchesSelector.call(elm, selector.replace(/\\[([^=]+)=\\s*([^'\"\\]]+?)\\s*\\]/g, '[$1=\"$2\"]'));\r\n            } catch (matchError) {\r\n                //console.log(matchError);\r\n            }\r\n            return local.match(elm, selector);\r\n        } else if (langx.isArrayLike(selector)) {\r\n            return langx.inArray(elm, selector) > -1;\r\n        } else if (langx.isPlainObject(selector)) {\r\n            return local.check(elm, selector);\r\n        } else {\r\n            return elm === selector;\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Get the nearest next sibing of the specitied element , optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional} adjacent\r\n     */\r\n    function nextSibling(elm, selector, adjacent) {\r\n        var node = elm.nextSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the next siblings of the specified element , optional filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function nextSiblings(elm, selector) {\r\n        var node = elm.nextSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Get the parent element of the specified element. if a selector is provided, it retrieves the parent element only if it matches that selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function parent(elm, selector) {\r\n        var node = elm.parentNode;\r\n        if (node && (!selector || matches(node, selector))) {\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get hte nearest previous sibling of the specified element ,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional } adjacent\r\n     */\r\n    function previousSibling(elm, selector, adjacent) {\r\n        var node = elm.previousSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get all preceding siblings of each element in the set of matched elements, optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function previousSiblings(elm, selector) {\r\n        var node = elm.previousSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Selects all sibling elements that follow after the “prev” element, have the same parent, and match the filtering “siblings” selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function siblings(elm, selector) {\r\n        var node = elm.parentNode.firstChild,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1 && node !== elm) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    var finder = function() {\r\n        return finder;\r\n    };\r\n\r\n    langx.mixin(finder, {\r\n\r\n        ancestor: ancestor,\r\n\r\n        ancestors: ancestors,\r\n\r\n        byId: byId,\r\n\r\n        children: children,\r\n\r\n        closest: closest,\r\n\r\n        descendant: descendant,\r\n\r\n        descendants: descendants,\r\n\r\n        find: find,\r\n\r\n        findAll: findAll,\r\n\r\n        firstChild: firstChild,\r\n\r\n        lastChild: lastChild,\r\n\r\n        matches: matches,\r\n\r\n        nextSibling: nextSibling,\r\n\r\n        nextSiblings: nextSiblings,\r\n\r\n        parent: parent,\r\n\r\n        previousSibling,\r\n\r\n        previousSiblings,\r\n\r\n        pseudos: local.pseudos,\r\n\r\n        siblings: siblings\r\n    });\r\n\r\n    return dom.finder = finder;\r\n});\ndefine('skylark-utils-dom/datax',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./finder\"\r\n], function(dom, langx, finder) {\r\n    var map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        camelCase = langx.camelCase,\r\n        deserializeValue = langx.deserializeValue,\r\n\r\n        capitalRE = /([A-Z])/g,\r\n        propMap = {\r\n            'tabindex': 'tabIndex',\r\n            'readonly': 'readOnly',\r\n            'for': 'htmlFor',\r\n            'class': 'className',\r\n            'maxlength': 'maxLength',\r\n            'cellspacing': 'cellSpacing',\r\n            'cellpadding': 'cellPadding',\r\n            'rowspan': 'rowSpan',\r\n            'colspan': 'colSpan',\r\n            'usemap': 'useMap',\r\n            'frameborder': 'frameBorder',\r\n            'contenteditable': 'contentEditable'\r\n        };\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function setAttribute(elm, name, value) {\r\n        if (value == null) {\r\n            elm.removeAttribute(name);\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n        }\r\n    }\r\n\r\n    function aria(elm, name, value) {\r\n        return this.attr(elm, \"aria-\" + name, value);\r\n    }\r\n\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function attr(elm, name, value) {\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var attrName in name) {\r\n                    attr(elm, attrName, name[attrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                if (elm.hasAttribute && elm.hasAttribute(name)) {\r\n                    return elm.getAttribute(name);\r\n                }\r\n            }\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n\r\n    /*\r\n     *  Read all \"data-*\" attributes from a node\r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function _attributeData(elm) {\r\n        var store = {}\r\n        langx.each(elm.attributes || [], function(i, attr) {\r\n            if (attr.name.indexOf('data-') == 0) {\r\n                store[camelCase(attr.name.replace('data-', ''))] = deserializeValue(attr.value);\r\n            }\r\n        })\r\n        return store;\r\n    }\r\n\r\n    function _store(elm, confirm) {\r\n        var store = elm[\"_$_store\"];\r\n        if (!store && confirm) {\r\n            store = elm[\"_$_store\"] = _attributeData(elm);\r\n        }\r\n        return store;\r\n    }\r\n\r\n    function _getData(elm, name) {\r\n        if (name === undefined) {\r\n            return _store(elm, true);\r\n        } else {\r\n            var store = _store(elm);\r\n            if (store) {\r\n                if (name in store) {\r\n                    return store[name];\r\n                }\r\n                var camelName = camelCase(name);\r\n                if (camelName in store) {\r\n                    return store[camelName];\r\n                }\r\n            }\r\n            var attrName = 'data-' + name.replace(capitalRE, \"-$1\").toLowerCase()\r\n            return attr(elm, attrName);\r\n        }\r\n\r\n    }\r\n\r\n    function _setData(elm, name, value) {\r\n        var store = _store(elm, true);\r\n        store[camelCase(name)] = value;\r\n    }\r\n\r\n\r\n    /*\r\n     * xxx\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function data(elm, name, value) {\r\n\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var dataAttrName in name) {\r\n                    _setData(elm, dataAttrName, name[dataAttrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return _getData(elm, name);\r\n            }\r\n        } else {\r\n            _setData(elm, name, value);\r\n            return this;\r\n        }\r\n    } \r\n    /*\r\n     * Remove from the element all items that have not yet been run. \r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function cleanData(elm) {\r\n        if (elm[\"_$_store\"]) {\r\n            delete elm[\"_$_store\"];\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Remove a previously-stored piece of data. \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function removeData(elm, names) {\r\n        if (names) {\r\n            if (langx.isString(names)) {\r\n                names = names.split(/\\s+/);\r\n            }\r\n            var store = _store(elm, true);\r\n            names.forEach(function(name) {\r\n                delete store[name];\r\n            });            \r\n        } else {\r\n            cleanData(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * xxx \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function pluck(nodes, property) {\r\n        return map.call(nodes, function(elm) {\r\n            return elm[property];\r\n        });\r\n    }\r\n\r\n    /*\r\n     * Get or set the value of an property for the specified element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function prop(elm, name, value) {\r\n        name = propMap[name] || name;\r\n        if (value === undefined) {\r\n            return elm[name];\r\n        } else {\r\n            elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * remove Attributes  \r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeAttr(elm, name) {\r\n        name.split(' ').forEach(function(attr) {\r\n            setAttribute(elm, attr);\r\n        });\r\n        return this;\r\n    }\r\n\r\n\r\n    /*\r\n     * Remove the value of a property for the first element in the set of matched elements or set one or more properties for every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeProp(elm, name) {\r\n        name.split(' ').forEach(function(prop) {\r\n            delete elm[prop];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Get the combined text contents of each element in the set of matched elements, including their descendants, or set the text contents of the matched elements.  \r\n     * @param {Object} elm  \r\n     * @param {String} txt\r\n     */\r\n    function text(elm, txt) {\r\n        if (txt === undefined) {\r\n            return elm.textContent;\r\n        } else {\r\n            elm.textContent = txt == null ? '' : '' + txt;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Get the current value of the first element in the set of matched elements or set the value of every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} value\r\n     */\r\n    function val(elm, value) {\r\n        if (value === undefined) {\r\n            if (elm.multiple) {\r\n                // select multiple values\r\n                var selectedOptions = filter.call(finder.find(elm, \"option\"), (function(option) {\r\n                    return option.selected;\r\n                }));\r\n                return pluck(selectedOptions, \"value\");\r\n            } else {\r\n                return elm.value;\r\n            }\r\n        } else {\r\n            elm.value = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n\r\n    finder.pseudos.data = function( elem, i, match,dataName ) {\r\n        return !!data( elem, dataName || match[3]);\r\n    };\r\n   \r\n\r\n    function datax() {\r\n        return datax;\r\n    }\r\n\r\n    langx.mixin(datax, {\r\n        aria: aria,\r\n\r\n        attr: attr,\r\n\r\n        cleanData: cleanData,\r\n\r\n        data: data,\r\n\r\n        pluck: pluck,\r\n\r\n        prop: prop,\r\n\r\n        removeAttr: removeAttr,\r\n\r\n        removeData: removeData,\r\n\r\n        removeProp: removeProp,\r\n\r\n        text: text,\r\n\r\n        val: val\r\n    });\r\n\r\n    return dom.datax = datax;\r\n});\ndefine('skylark-utils-dom/eventer',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./finder\",\r\n    \"./noder\",\r\n    \"./datax\"\r\n], function(dom, langx, browser, finder, noder, datax) {\r\n    var mixin = langx.mixin,\r\n        each = langx.each,\r\n        slice = Array.prototype.slice,\r\n        uid = langx.uid,\r\n        ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\r\n        eventMethods = {\r\n            preventDefault: \"isDefaultPrevented\",\r\n            stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n            stopPropagation: \"isPropagationStopped\"\r\n        },\r\n        readyRE = /complete|loaded|interactive/;\r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            langx.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = langx.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = langx.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            type: segs[0],\r\n            ns: segs.slice(1).sort().join(\" \")\r\n        };\r\n    }\r\n\r\n    //create a custom dom event\r\n    var createEvent = (function() {\r\n        var EventCtors = [\r\n                window[\"CustomEvent\"], // 0 default\r\n                window[\"CompositionEvent\"], // 1\r\n                window[\"DragEvent\"], // 2\r\n                window[\"Event\"], // 3\r\n                window[\"FocusEvent\"], // 4\r\n                window[\"KeyboardEvent\"], // 5\r\n                window[\"MessageEvent\"], // 6\r\n                window[\"MouseEvent\"], // 7\r\n                window[\"MouseScrollEvent\"], // 8\r\n                window[\"MouseWheelEvent\"], // 9\r\n                window[\"MutationEvent\"], // 10\r\n                window[\"ProgressEvent\"], // 11\r\n                window[\"TextEvent\"], // 12\r\n                window[\"TouchEvent\"], // 13\r\n                window[\"UIEvent\"], // 14\r\n                window[\"WheelEvent\"], // 15\r\n                window[\"ClipboardEvent\"] // 16\r\n            ],\r\n            NativeEvents = {\r\n                \"compositionstart\": 1, // CompositionEvent\r\n                \"compositionend\": 1, // CompositionEvent\r\n                \"compositionupdate\": 1, // CompositionEvent\r\n\r\n                \"beforecopy\": 16, // ClipboardEvent\r\n                \"beforecut\": 16, // ClipboardEvent\r\n                \"beforepaste\": 16, // ClipboardEvent\r\n                \"copy\": 16, // ClipboardEvent\r\n                \"cut\": 16, // ClipboardEvent\r\n                \"paste\": 16, // ClipboardEvent\r\n\r\n                \"drag\": 2, // DragEvent\r\n                \"dragend\": 2, // DragEvent\r\n                \"dragenter\": 2, // DragEvent\r\n                \"dragexit\": 2, // DragEvent\r\n                \"dragleave\": 2, // DragEvent\r\n                \"dragover\": 2, // DragEvent\r\n                \"dragstart\": 2, // DragEvent\r\n                \"drop\": 2, // DragEvent\r\n\r\n                \"abort\": 3, // Event\r\n                \"change\": 3, // Event\r\n                \"error\": 3, // Event\r\n                \"selectionchange\": 3, // Event\r\n                \"submit\": 3, // Event\r\n                \"reset\": 3, // Event\r\n\r\n                \"focus\": 4, // FocusEvent\r\n                \"blur\": 4, // FocusEvent\r\n                \"focusin\": 4, // FocusEvent\r\n                \"focusout\": 4, // FocusEvent\r\n\r\n                \"keydown\": 5, // KeyboardEvent\r\n                \"keypress\": 5, // KeyboardEvent\r\n                \"keyup\": 5, // KeyboardEvent\r\n\r\n                \"message\": 6, // MessageEvent\r\n\r\n                \"click\": 7, // MouseEvent\r\n                \"contextmenu\": 7, // MouseEvent\r\n                \"dblclick\": 7, // MouseEvent\r\n                \"mousedown\": 7, // MouseEvent\r\n                \"mouseup\": 7, // MouseEvent\r\n                \"mousemove\": 7, // MouseEvent\r\n                \"mouseover\": 7, // MouseEvent\r\n                \"mouseout\": 7, // MouseEvent\r\n                \"mouseenter\": 7, // MouseEvent\r\n                \"mouseleave\": 7, // MouseEvent\r\n\r\n\r\n                \"textInput\": 12, // TextEvent\r\n\r\n                \"touchstart\": 13, // TouchEvent\r\n                \"touchmove\": 13, // TouchEvent\r\n                \"touchend\": 13, // TouchEvent\r\n\r\n                \"load\": 14, // UIEvent\r\n                \"resize\": 14, // UIEvent\r\n                \"select\": 14, // UIEvent\r\n                \"scroll\": 14, // UIEvent\r\n                \"unload\": 14, // UIEvent,\r\n\r\n                \"wheel\": 15 // WheelEvent\r\n            };\r\n\r\n        function getEventCtor(type) {\r\n            var idx = NativeEvents[type];\r\n            if (!idx) {\r\n                idx = 0;\r\n            }\r\n            return EventCtors[idx];\r\n        }\r\n\r\n        return function(type, props) {\r\n            //create a custom dom event\r\n\r\n            if (langx.isString(type)) {\r\n                props = props || {};\r\n            } else {\r\n                props = type || {};\r\n                type = props.type || \"\";\r\n            }\r\n            var parsed = parse(type);\r\n            type = parsed.type;\r\n\r\n            props = langx.mixin({\r\n                bubbles: true,\r\n                cancelable: true\r\n            }, props);\r\n\r\n            if (parsed.ns) {\r\n                props.namespace = parsed.ns;\r\n            }\r\n\r\n            var ctor = getEventCtor(type),\r\n                e = new ctor(type, props);\r\n\r\n            langx.safeMixin(e, props);\r\n\r\n            return compatible(e);\r\n        };\r\n    })();\r\n\r\n    function createProxy(src, props) {\r\n        var key,\r\n            proxy = {\r\n                originalEvent: src\r\n            };\r\n        for (key in src) {\r\n            if (key !== \"keyIdentifier\" && !ignoreProperties.test(key) && src[key] !== undefined) {\r\n                proxy[key] = src[key];\r\n            }\r\n        }\r\n        if (props) {\r\n            langx.mixin(proxy, props);\r\n        }\r\n        return compatible(proxy, src);\r\n    }\r\n\r\n    var\r\n        specialEvents = {},\r\n        focusinSupported = \"onfocusin\" in window,\r\n        focus = { focus: \"focusin\", blur: \"focusout\" },\r\n        hover = { mouseenter: \"mouseover\", mouseleave: \"mouseout\" },\r\n        realEvent = function(type) {\r\n            return hover[type] || (focusinSupported && focus[type]) || type;\r\n        },\r\n        handlers = {},\r\n        EventBindings = langx.klass({\r\n            init: function(target, event) {\r\n                this._target = target;\r\n                this._event = event;\r\n                this._bindings = [];\r\n            },\r\n\r\n            add: function(fn, options) {\r\n                var bindings = this._bindings,\r\n                    binding = {\r\n                        fn: fn,\r\n                        options: langx.mixin({}, options)\r\n                    };\r\n\r\n                bindings.push(binding);\r\n\r\n                var self = this;\r\n                if (!self._listener) {\r\n                    self._listener = function(domEvt) {\r\n                        var elm = this,\r\n                            e = createProxy(domEvt),\r\n                            args = domEvt._args,\r\n                            bindings = self._bindings,\r\n                            ns = e.namespace;\r\n\r\n                        if (langx.isDefined(args)) {\r\n                            args = [e].concat(args);\r\n                        } else {\r\n                            args = [e];\r\n                        }\r\n\r\n                        langx.each(bindings, function(idx, binding) {\r\n                            var match = elm;\r\n                            if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                                return false;\r\n                            }\r\n                            var fn = binding.fn,\r\n                                options = binding.options || {},\r\n                                selector = options.selector,\r\n                                one = options.one,\r\n                                data = options.data;\r\n\r\n                            if (ns && ns != options.ns && options.ns.indexOf(ns) === -1) {\r\n                                return;\r\n                            }\r\n                            if (selector) {\r\n                                match = finder.closest(e.target, selector);\r\n                                if (match && match !== elm) {\r\n                                    langx.mixin(e, {\r\n                                        currentTarget: match,\r\n                                        liveFired: elm\r\n                                    });\r\n                                } else {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            var originalEvent = self._event;\r\n                            if (originalEvent in hover) {\r\n                                var related = e.relatedTarget;\r\n                                if (related && (related === match || noder.contains(match, related))) {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            if (langx.isDefined(data)) {\r\n                                e.data = data;\r\n                            }\r\n\r\n                            if (one) {\r\n                                self.remove(fn, options);\r\n                            }\r\n\r\n                            var result = fn.apply(match, args);\r\n\r\n                            if (result === false) {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                            }\r\n                        });;\r\n                    };\r\n\r\n                    var event = self._event;\r\n                    /*\r\n                                        if (event in hover) {\r\n                                            var l = self._listener;\r\n                                            self._listener = function(e) {\r\n                                                var related = e.relatedTarget;\r\n                                                if (!related || (related !== this && !noder.contains(this, related))) {\r\n                                                    return l.apply(this, arguments);\r\n                                                }\r\n                                            }\r\n                                        }\r\n                    */\r\n\r\n                    if (self._target.addEventListener) {\r\n                        self._target.addEventListener(realEvent(event), self._listener, false);\r\n                    } else {\r\n                        console.warn(\"invalid eventer object\", self._target);\r\n                    }\r\n                }\r\n\r\n            },\r\n            remove: function(fn, options) {\r\n                options = langx.mixin({}, options);\r\n\r\n                function matcherFor(ns) {\r\n                    return new RegExp(\"(?:^| )\" + ns.replace(\" \", \" .* ?\") + \"(?: |$)\");\r\n                }\r\n                var matcher;\r\n                if (options.ns) {\r\n                    matcher = matcherFor(options.ns);\r\n                }\r\n\r\n                this._bindings = this._bindings.filter(function(binding) {\r\n                    var removing = (!fn || fn === binding.fn) &&\r\n                        (!matcher || matcher.test(binding.options.ns)) &&\r\n                        (!options.selector || options.selector == binding.options.selector);\r\n\r\n                    return !removing;\r\n                });\r\n                if (this._bindings.length == 0) {\r\n                    if (this._target.removeEventListener) {\r\n                        this._target.removeEventListener(realEvent(this._event), this._listener, false);\r\n                    }\r\n                    this._listener = null;\r\n                }\r\n            }\r\n        }),\r\n        EventsHandler = langx.klass({\r\n            init: function(elm) {\r\n                this._target = elm;\r\n                this._handler = {};\r\n            },\r\n\r\n            // add a event listener\r\n            // selector Optional\r\n            register: function(event, callback, options) {\r\n                // Seperate the event from the namespace\r\n                var parsed = parse(event),\r\n                    event = parsed.type,\r\n                    specialEvent = specialEvents[event],\r\n                    bindingEvent = specialEvent && (specialEvent.bindType || specialEvent.bindEventName);\r\n\r\n                var events = this._handler;\r\n\r\n                // Check if there is already a handler for this event\r\n                if (events[event] === undefined) {\r\n                    events[event] = new EventBindings(this._target, bindingEvent || event);\r\n                }\r\n\r\n                // Register the new callback function\r\n                events[event].add(callback, langx.mixin({\r\n                    ns: parsed.ns\r\n                }, options)); // options:{selector:xxx}\r\n            },\r\n\r\n            // remove a event listener\r\n            unregister: function(event, fn, options) {\r\n                // Check for parameter validtiy\r\n                var events = this._handler,\r\n                    parsed = parse(event);\r\n                event = parsed.type;\r\n\r\n                if (event) {\r\n                    var listener = events[event];\r\n\r\n                    if (listener) {\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                } else {\r\n                    //remove all events\r\n                    for (event in events) {\r\n                        var listener = events[event];\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                }\r\n            }\r\n        }),\r\n\r\n        findHandler = function(elm) {\r\n            var id = uid(elm),\r\n                handler = handlers[id];\r\n            if (!handler) {\r\n                handler = handlers[id] = new EventsHandler(elm);\r\n            }\r\n            return handler;\r\n        };\r\n\r\n    /*   \r\n     * Remove an event handler for one or more events from the specified element.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional } selector\r\n     * @param {Function} callback\r\n     */\r\n    function off(elm, events, selector, callback) {\r\n        var $this = this\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                off(elm, type, selector, fn);\r\n            })\r\n            return $this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback) && callback !== false) {\r\n            callback = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        if (events) events.forEach(function(event) {\r\n\r\n            handler.unregister(event, callback, {\r\n                selector: selector,\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach an event handler function for one or more events to the selected elements.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     * @param {Boolean　Optional} one\r\n     */\r\n    function on(elm, events, selector, data, callback, one) {\r\n\r\n        var autoRemove, delegator;\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                on(elm, type, selector, data, fn, one);\r\n            });\r\n            return this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        events.forEach(function(event) {\r\n            if (event == \"ready\") {\r\n                return ready(callback);\r\n            }\r\n            handler.register(event, callback, {\r\n                data: data,\r\n                selector: selector,\r\n                one: !!one\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach a handler to an event for the elements. The handler is executed at most once per \r\n     * @param {HTMLElement} elm  \r\n     * @param {String} event\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     */\r\n    function one(elm, events, selector, data, callback) {\r\n        on(elm, events, selector, data, callback, 1);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Prevents propagation and clobbers the default action of the passed event. The same as calling event.preventDefault() and event.stopPropagation(). \r\n     * @param {String} event\r\n     */\r\n    function stop(event) {\r\n        if (window.document.all) {\r\n            event.keyCode = 0;\r\n        }\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Execute all handlers and behaviors attached to the matched elements for the given event  \r\n     * @param {String} evented\r\n     * @param {String} type\r\n     * @param {Array or PlainObject } args\r\n     */\r\n    function trigger(evented, type, args) {\r\n        var e;\r\n        if (type instanceof Event) {\r\n            e = type;\r\n        } else {\r\n            e = createEvent(type, args);\r\n        }\r\n        e._args = args;\r\n\r\n        var fn = (evented.dispatchEvent || evented.trigger);\r\n        if (fn) {\r\n            fn.call(evented, e);\r\n        } else {\r\n            console.warn(\"The evented parameter is not a eventable object\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n    /*   \r\n     * Specify a function to execute when the DOM is fully loaded.  \r\n     * @param {Function} callback\r\n     */\r\n    function ready(callback) {\r\n        // need to check if document.body exists for IE as that browser reports\r\n        // document ready when it hasn't yet created the body elm\r\n        if (readyRE.test(document.readyState) && document.body) {\r\n            langx.defer(callback);\r\n        } else {\r\n            document.addEventListener('DOMContentLoaded', callback, false);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    var keyCodeLookup = {\r\n        \"backspace\": 8,\r\n        \"comma\": 188,\r\n        \"delete\": 46,\r\n        \"down\": 40,\r\n        \"end\": 35,\r\n        \"enter\": 13,\r\n        \"escape\": 27,\r\n        \"home\": 36,\r\n        \"left\": 37,\r\n        \"page_down\": 34,\r\n        \"page_up\": 33,\r\n        \"period\": 190,\r\n        \"right\": 39,\r\n        \"space\": 32,\r\n        \"tab\": 9,\r\n        \"up\": 38\r\n    };\r\n    //example:\r\n    //shortcuts(elm).add(\"CTRL+ALT+SHIFT+X\",function(){console.log(\"test!\")});\r\n    function shortcuts(elm) {\r\n\r\n        var registry = datax.data(elm, \"shortcuts\");\r\n        if (!registry) {\r\n            registry = {};\r\n            datax.data(elm, \"shortcuts\", registry);\r\n            var run = function(shortcut, event) {\r\n                var n = event.metaKey || event.ctrlKey;\r\n                if (shortcut.ctrl == n && shortcut.alt == event.altKey && shortcut.shift == event.shiftKey) {\r\n                    if (event.keyCode == shortcut.keyCode || event.charCode && event.charCode == shortcut.charCode) {\r\n                        event.preventDefault();\r\n                        if (\"keydown\" == event.type) {\r\n                            shortcut.fn(event);\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n            };\r\n            on(elm, \"keyup keypress keydown\", function(event) {\r\n                if (!(/INPUT|TEXTAREA/.test(event.target.nodeName))) {\r\n                    for (var key in registry) {\r\n                        run(registry[key], event);\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        return {\r\n            add: function(pattern, fn) {\r\n                var shortcutKeys;\r\n                if (pattern.indexOf(\",\") > -1) {\r\n                    shortcutKeys = pattern.toLowerCase().split(\",\");\r\n                } else {\r\n                    shortcutKeys = pattern.toLowerCase().split(\" \");\r\n                }\r\n                shortcutKeys.forEach(function(shortcutKey) {\r\n                    var setting = {\r\n                        fn: fn,\r\n                        alt: false,\r\n                        ctrl: false,\r\n                        shift: false\r\n                    };\r\n                    shortcutKey.split(\"+\").forEach(function(key) {\r\n                        switch (key) {\r\n                            case \"alt\":\r\n                            case \"ctrl\":\r\n                            case \"shift\":\r\n                                setting[key] = true;\r\n                                break;\r\n                            default:\r\n                                setting.charCode = key.charCodeAt(0);\r\n                                setting.keyCode = keyCodeLookup[key] || key.toUpperCase().charCodeAt(0);\r\n                        }\r\n                    });\r\n                    var regKey = (setting.ctrl ? \"ctrl\" : \"\") + \",\" + (setting.alt ? \"alt\" : \"\") + \",\" + (setting.shift ? \"shift\" : \"\") + \",\" + setting.keyCode;\r\n                    registry[regKey] = setting;\r\n                })\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    if (browser.support.transition) {\r\n        specialEvents.transitionEnd = {\r\n//          handle: function (e) {\r\n//            if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments)\r\n//          },\r\n          bindType: browser.support.transition.end,\r\n          delegateType: browser.support.transition.end\r\n        }        \r\n    }\r\n\r\n    function eventer() {\r\n        return eventer;\r\n    }\r\n\r\n    langx.mixin(eventer, {\r\n        create: createEvent,\r\n\r\n        keys: keyCodeLookup,\r\n\r\n        off: off,\r\n\r\n        on: on,\r\n\r\n        one: one,\r\n\r\n        proxy: createProxy,\r\n\r\n        ready: ready,\r\n\r\n        shortcuts: shortcuts,\r\n\r\n        special: specialEvents,\r\n\r\n        stop: stop,\r\n\r\n        trigger: trigger\r\n\r\n    });\r\n\r\n    return dom.eventer = eventer;\r\n});\ndefine('skylark-utils-dom/geom',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./styler\"\r\n], function(dom, langx, noder, styler) {\r\n    var rootNodeRE = /^(?:body|html)$/i,\r\n        px = langx.toPixel,\r\n        offsetParent = noder.offsetParent,\r\n        cachedScrollbarWidth;\r\n\r\n    function scrollbarWidth() {\r\n        if (cachedScrollbarWidth !== undefined) {\r\n            return cachedScrollbarWidth;\r\n        }\r\n        var w1, w2,\r\n            div = noder.createFragment(\"<div style=\" +\r\n                \"'display:block;position:absolute;width:200px;height:200px;overflow:hidden;'>\" +\r\n                \"<div style='height:300px;width:auto;'></div></div>\")[0],\r\n            innerDiv = div.childNodes[0];\r\n\r\n        noder.append(document.body, div);\r\n\r\n        w1 = innerDiv.offsetWidth;\r\n\r\n        styler.css(div, \"overflow\", \"scroll\");\r\n\r\n        w2 = innerDiv.offsetWidth;\r\n\r\n        if (w1 === w2) {\r\n            w2 = div[0].clientWidth;\r\n        }\r\n\r\n        noder.remove(div);\r\n\r\n        return (cachedScrollbarWidth = w1 - w2);\r\n    }\r\n    /*\r\n     * Get the widths of each border of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function borderExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.borderLeftWidth, elm),\r\n            top: px(s.borderTopWidth, elm),\r\n            right: px(s.borderRightWidth, elm),\r\n            bottom: px(s.borderBottomWidth, elm)\r\n        }\r\n    }\r\n\r\n    //viewport coordinate\r\n    /*\r\n     * Get or set the viewport position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingPosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            return rootNodeRE.test(elm.nodeName) ? { top: 0, left: 0 } : elm.getBoundingClientRect();\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the viewport rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            return elm.getBoundingClientRect()\r\n        } else {\r\n            boundingPosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the height of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function clientHeight(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).height;\r\n        } else {\r\n            return clientSize(elm, {\r\n                height: value\r\n            });\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the size of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientSize(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            return {\r\n                width: elm.clientWidth,\r\n                height: elm.clientHeight\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom;\r\n                }\r\n            } else {\r\n                var bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width + bex.left + bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height + bex.top + bex.bottom;\r\n                }\r\n\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n        return {\r\n            width: elm.clientWidth,\r\n            height: elm.clientHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get or set the width of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientWidth(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).width;\r\n        } else {\r\n            clientSize(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the rect of the specified element content box.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contentRect(elm) {\r\n        var cs = clientSize(elm),\r\n            pex = paddingExtents(elm);\r\n\r\n\r\n        //// On Opera, offsetLeft includes the parent's border\r\n        //if(has(\"opera\")){\r\n        //    pe.l += be.l;\r\n        //    pe.t += be.t;\r\n        //}\r\n        return {\r\n            left: pex.left,\r\n            top: pex.top,\r\n            width: cs.width - pex.left - pex.right,\r\n            height: cs.height - pex.top - pex.bottom\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLDocument} doc\r\n     */\r\n    function getDocumentSize(doc) {\r\n        var documentElement = doc.documentElement,\r\n            body = doc.body,\r\n            max = Math.max,\r\n            scrollWidth = max(documentElement.scrollWidth, body.scrollWidth),\r\n            clientWidth = max(documentElement.clientWidth, body.clientWidth),\r\n            offsetWidth = max(documentElement.offsetWidth, body.offsetWidth),\r\n            scrollHeight = max(documentElement.scrollHeight, body.scrollHeight),\r\n            clientHeight = max(documentElement.clientHeight, body.clientHeight),\r\n            offsetHeight = max(documentElement.offsetHeight, body.offsetHeight);\r\n\r\n        return {\r\n            width: scrollWidth < offsetWidth ? clientWidth : scrollWidth,\r\n            height: scrollHeight < offsetHeight ? clientHeight : scrollHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function height(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).height;\r\n        } else {\r\n            size(elm, {\r\n                height: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each margin of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function marginExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.marginLeft),\r\n            top: px(s.marginTop),\r\n            right: px(s.marginRight),\r\n            bottom: px(s.marginBottom),\r\n        }\r\n    }\r\n\r\n\r\n    function marginRect(elm) {\r\n        var obj = relativeRect(elm),\r\n            me = marginExtents(elm);\r\n\r\n        return {\r\n            left: obj.left,\r\n            top: obj.top,\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n\r\n    function marginSize(elm) {\r\n        var obj = size(elm),\r\n            me = marginExtents(elm);\r\n\r\n        return {\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each padding of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function paddingExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.paddingLeft),\r\n            top: px(s.paddingTop),\r\n            right: px(s.paddingRight),\r\n            bottom: px(s.paddingBottom),\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    //coordinate to the document\r\n    function pagePosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset\r\n            }\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = pagePosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function pageRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset,\r\n                width: Math.round(obj.width),\r\n                height: Math.round(obj.height)\r\n            }\r\n        } else {\r\n            pagePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the position of the specified element border box , relative to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    // coordinate relative to it's parent\r\n    function relativePosition(elm, coords) {\r\n        if (coords == undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingPosition(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left\r\n            }\r\n        } else {\r\n            var props = {\r\n                top: coords.top,\r\n                left: coords.left\r\n            }\r\n\r\n            if (styler.css(elm, \"position\") == \"static\") {\r\n                props['position'] = \"relative\";\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the rect of the specified element border box , relatived to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function relativeRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingRect(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left,\r\n                width: offset.width,\r\n                height: offset.height\r\n            }\r\n        } else {\r\n            relativePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Scroll the specified element into view.\r\n     * @param {HTMLElement} elm\r\n     * @param {} align\r\n     */\r\n    function scrollIntoView(elm, align) {\r\n        function getOffset(elm, rootElm) {\r\n            var x, y, parent = elm;\r\n\r\n            x = y = 0;\r\n            while (parent && parent != rootElm && parent.nodeType) {\r\n                x += parent.offsetLeft || 0;\r\n                y += parent.offsetTop || 0;\r\n                parent = parent.offsetParent;\r\n            }\r\n\r\n            return { x: x, y: y };\r\n        }\r\n\r\n        var parentElm = elm.parentNode;\r\n        var x, y, width, height, parentWidth, parentHeight;\r\n        var pos = getOffset(elm, parentElm);\r\n\r\n        x = pos.x;\r\n        y = pos.y;\r\n        width = elm.offsetWidth;\r\n        height = elm.offsetHeight;\r\n        parentWidth = parentElm.clientWidth;\r\n        parentHeight = parentElm.clientHeight;\r\n\r\n        if (align == \"end\") {\r\n            x -= parentWidth - width;\r\n            y -= parentHeight - height;\r\n        } else if (align == \"center\") {\r\n            x -= (parentWidth / 2) - (width / 2);\r\n            y -= (parentHeight / 2) - (height / 2);\r\n        }\r\n\r\n        parentElm.scrollLeft = x;\r\n        parentElm.scrollTop = y;\r\n\r\n        return this;\r\n    }\r\n    /*\r\n     * Get or set the current horizontal position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollLeft(elm, value) {\r\n        if (elm.nodeType === 9) {\r\n            elm = elm.defaultView;\r\n        }\r\n        var hasScrollLeft = \"scrollLeft\" in elm;\r\n        if (value === undefined) {\r\n            return hasScrollLeft ? elm.scrollLeft : elm.pageXOffset\r\n        } else {\r\n            if (hasScrollLeft) {\r\n                elm.scrollLeft = value;\r\n            } else {\r\n                elm.scrollTo(value, elm.scrollY);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or the current vertical position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollTop(elm, value) {\r\n        if (elm.nodeType === 9) {\r\n            elm = elm.defaultView;\r\n        }\r\n        var hasScrollTop = \"scrollTop\" in elm;\r\n\r\n        if (value === undefined) {\r\n            return hasScrollTop ? elm.scrollTop : elm.pageYOffset\r\n        } else {\r\n            if (hasScrollTop) {\r\n                elm.scrollTop = value;\r\n            } else {\r\n                elm.scrollTo(elm.scrollX, value);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject}dimension\r\n     */\r\n    function size(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            if (langx.isWindow(elm)) {\r\n                return {\r\n                    width: elm.innerWidth,\r\n                    height: elm.innerHeight\r\n                }\r\n\r\n            } else if (langx.isDocument(elm)) {\r\n                return getDocumentSize(document);\r\n            } else {\r\n                return {\r\n                    width: elm.offsetWidth,\r\n                    height: elm.offsetHeight\r\n                }\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm),\r\n                    bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined && props.width !== \"\" && props.width !== null) {\r\n                    props.width = props.width - pex.left - pex.right - bex.left - bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined && props.height !== \"\" && props.height !== null) {\r\n                    props.height = props.height - pex.top - pex.bottom - bex.top - bex.bottom;\r\n                }\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function width(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).width;\r\n        } else {\r\n            size(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function geom() {\r\n        return geom;\r\n    }\r\n\r\n    langx.mixin(geom, {\r\n        borderExtents: borderExtents,\r\n        //viewport coordinate\r\n        boundingPosition: boundingPosition,\r\n\r\n        boundingRect: boundingRect,\r\n\r\n        clientHeight: clientHeight,\r\n\r\n        clientSize: clientSize,\r\n\r\n        clientWidth: clientWidth,\r\n\r\n        contentRect: contentRect,\r\n\r\n        getDocumentSize: getDocumentSize,\r\n\r\n        height: height,\r\n\r\n        marginExtents: marginExtents,\r\n\r\n        marginRect: marginRect,\r\n\r\n        marginSize: marginSize,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        paddingExtents: paddingExtents,\r\n\r\n        //coordinate to the document\r\n        pagePosition: pagePosition,\r\n\r\n        pageRect: pageRect,\r\n\r\n        // coordinate relative to it's parent\r\n        relativePosition: relativePosition,\r\n\r\n        relativeRect: relativeRect,\r\n\r\n        scrollbarWidth: scrollbarWidth,\r\n\r\n        scrollIntoView: scrollIntoView,\r\n\r\n        scrollLeft: scrollLeft,\r\n\r\n        scrollTop: scrollTop,\r\n\r\n        size: size,\r\n\r\n        width: width\r\n    });\r\n\r\n    ( function() {\r\n        var max = Math.max,\r\n            abs = Math.abs,\r\n            rhorizontal = /left|center|right/,\r\n            rvertical = /top|center|bottom/,\r\n            roffset = /[\\+\\-]\\d+(\\.[\\d]+)?%?/,\r\n            rposition = /^\\w+/,\r\n            rpercent = /%$/;\r\n\r\n        function getOffsets( offsets, width, height ) {\r\n            return [\r\n                parseFloat( offsets[ 0 ] ) * ( rpercent.test( offsets[ 0 ] ) ? width / 100 : 1 ),\r\n                parseFloat( offsets[ 1 ] ) * ( rpercent.test( offsets[ 1 ] ) ? height / 100 : 1 )\r\n            ];\r\n        }\r\n\r\n        function parseCss( element, property ) {\r\n            return parseInt( styler.css( element, property ), 10 ) || 0;\r\n        }\r\n\r\n        function getDimensions( raw ) {\r\n            if ( raw.nodeType === 9 ) {\r\n                return {\r\n                    size: size(raw),\r\n                    offset: { top: 0, left: 0 }\r\n                };\r\n            }\r\n            if ( noder.isWindow( raw ) ) {\r\n                return {\r\n                    size: size(raw),\r\n                    offset: { \r\n                        top: scrollTop(raw), \r\n                        left: scrollLeft(raw) \r\n                    }\r\n                };\r\n            }\r\n            if ( raw.preventDefault ) {\r\n                return {\r\n                    size : {\r\n                        width: 0,\r\n                        height: 0\r\n                    },\r\n                    offset: { \r\n                        top: raw.pageY, \r\n                        left: raw.pageX \r\n                    }\r\n                };\r\n            }\r\n            return {\r\n                size: size(raw),\r\n                offset: pagePosition(raw)\r\n            };\r\n        }\r\n\r\n        function getScrollInfo( within ) {\r\n            var overflowX = within.isWindow || within.isDocument ? \"\" :\r\n                    styler.css(within.element,\"overflow-x\" ),\r\n                overflowY = within.isWindow || within.isDocument ? \"\" :\r\n                    styler.css(within.element,\"overflow-y\" ),\r\n                hasOverflowX = overflowX === \"scroll\" ||\r\n                    ( overflowX === \"auto\" && within.width < scrollWidth(within.element) ),\r\n                hasOverflowY = overflowY === \"scroll\" ||\r\n                    ( overflowY === \"auto\" && within.height < scrollHeight(within.element));\r\n            return {\r\n                width: hasOverflowY ? scrollbarWidth() : 0,\r\n                height: hasOverflowX ? scrollbarWidth() : 0\r\n            };\r\n        }\r\n\r\n        function getWithinInfo( element ) {\r\n            var withinElement = element || window,\r\n                isWindow = noder.isWindow( withinElement),\r\n                isDocument = !!withinElement && withinElement.nodeType === 9,\r\n                hasOffset = !isWindow && !isDocument,\r\n                msize = marginSize(withinElement);\r\n            return {\r\n                element: withinElement,\r\n                isWindow: isWindow,\r\n                isDocument: isDocument,\r\n                offset: hasOffset ? pagePosition(element) : { left: 0, top: 0 },\r\n                scrollLeft: scrollLeft(withinElement),\r\n                scrollTop: scrollTop(withinElement),\r\n                width: msize.width,\r\n                height: msize.height\r\n            };\r\n        }\r\n\r\n        function posit(elm,options ) {\r\n            // Make a copy, we don't want to modify arguments\r\n            options = langx.extend( {}, options );\r\n\r\n            var atOffset, targetWidth, targetHeight, targetOffset, basePosition, dimensions,\r\n                target = options.of,\r\n                within = getWithinInfo( options.within ),\r\n                scrollInfo = getScrollInfo( within ),\r\n                collision = ( options.collision || \"flip\" ).split( \" \" ),\r\n                offsets = {};\r\n\r\n            dimensions = getDimensions( target );\r\n            if ( target.preventDefault ) {\r\n\r\n                // Force left top to allow flipping\r\n                options.at = \"left top\";\r\n            }\r\n            targetWidth = dimensions.size.width;\r\n            targetHeight = dimensions.size.height;\r\n            targetOffset = dimensions.offset;\r\n\r\n            // Clone to reuse original targetOffset later\r\n            basePosition = langx.extend( {}, targetOffset );\r\n\r\n            // Force my and at to have valid horizontal and vertical positions\r\n            // if a value is missing or invalid, it will be converted to center\r\n            langx.each( [ \"my\", \"at\" ], function() {\r\n                var pos = ( options[ this ] || \"\" ).split( \" \" ),\r\n                    horizontalOffset,\r\n                    verticalOffset;\r\n\r\n                if ( pos.length === 1 ) {\r\n                    pos = rhorizontal.test( pos[ 0 ] ) ?\r\n                        pos.concat( [ \"center\" ] ) :\r\n                        rvertical.test( pos[ 0 ] ) ?\r\n                            [ \"center\" ].concat( pos ) :\r\n                            [ \"center\", \"center\" ];\r\n                }\r\n                pos[ 0 ] = rhorizontal.test( pos[ 0 ] ) ? pos[ 0 ] : \"center\";\r\n                pos[ 1 ] = rvertical.test( pos[ 1 ] ) ? pos[ 1 ] : \"center\";\r\n\r\n                // Calculate offsets\r\n                horizontalOffset = roffset.exec( pos[ 0 ] );\r\n                verticalOffset = roffset.exec( pos[ 1 ] );\r\n                offsets[ this ] = [\r\n                    horizontalOffset ? horizontalOffset[ 0 ] : 0,\r\n                    verticalOffset ? verticalOffset[ 0 ] : 0\r\n                ];\r\n\r\n                // Reduce to just the positions without the offsets\r\n                options[ this ] = [\r\n                    rposition.exec( pos[ 0 ] )[ 0 ],\r\n                    rposition.exec( pos[ 1 ] )[ 0 ]\r\n                ];\r\n            } );\r\n\r\n            // Normalize collision option\r\n            if ( collision.length === 1 ) {\r\n                collision[ 1 ] = collision[ 0 ];\r\n            }\r\n\r\n            if ( options.at[ 0 ] === \"right\" ) {\r\n                basePosition.left += targetWidth;\r\n            } else if ( options.at[ 0 ] === \"center\" ) {\r\n                basePosition.left += targetWidth / 2;\r\n            }\r\n\r\n            if ( options.at[ 1 ] === \"bottom\" ) {\r\n                basePosition.top += targetHeight;\r\n            } else if ( options.at[ 1 ] === \"center\" ) {\r\n                basePosition.top += targetHeight / 2;\r\n            }\r\n\r\n            atOffset = getOffsets( offsets.at, targetWidth, targetHeight );\r\n            basePosition.left += atOffset[ 0 ];\r\n            basePosition.top += atOffset[ 1 ];\r\n\r\n            return ( function(elem) {\r\n                var collisionPosition, using,\r\n                    msize = marginSize(elem),\r\n                    elemWidth = msize.width,\r\n                    elemHeight = msize.height,\r\n                    marginLeft = parseCss( elem, \"marginLeft\" ),\r\n                    marginTop = parseCss( elem, \"marginTop\" ),\r\n                    collisionWidth = elemWidth + marginLeft + parseCss( elem, \"marginRight\" ) +\r\n                        scrollInfo.width,\r\n                    collisionHeight = elemHeight + marginTop + parseCss( elem, \"marginBottom\" ) +\r\n                        scrollInfo.height,\r\n                    position = langx.extend( {}, basePosition ),\r\n                    myOffset = getOffsets( offsets.my, msize.width, msize.height);\r\n\r\n                if ( options.my[ 0 ] === \"right\" ) {\r\n                    position.left -= elemWidth;\r\n                } else if ( options.my[ 0 ] === \"center\" ) {\r\n                    position.left -= elemWidth / 2;\r\n                }\r\n\r\n                if ( options.my[ 1 ] === \"bottom\" ) {\r\n                    position.top -= elemHeight;\r\n                } else if ( options.my[ 1 ] === \"center\" ) {\r\n                    position.top -= elemHeight / 2;\r\n                }\r\n\r\n                position.left += myOffset[ 0 ];\r\n                position.top += myOffset[ 1 ];\r\n\r\n                collisionPosition = {\r\n                    marginLeft: marginLeft,\r\n                    marginTop: marginTop\r\n                };\r\n\r\n                langx.each( [ \"left\", \"top\" ], function( i, dir ) {\r\n                    if ( positions[ collision[ i ] ] ) {\r\n                        positions[ collision[ i ] ][ dir ]( position, {\r\n                            targetWidth: targetWidth,\r\n                            targetHeight: targetHeight,\r\n                            elemWidth: elemWidth,\r\n                            elemHeight: elemHeight,\r\n                            collisionPosition: collisionPosition,\r\n                            collisionWidth: collisionWidth,\r\n                            collisionHeight: collisionHeight,\r\n                            offset: [ atOffset[ 0 ] + myOffset[ 0 ], atOffset [ 1 ] + myOffset[ 1 ] ],\r\n                            my: options.my,\r\n                            at: options.at,\r\n                            within: within,\r\n                            elem: elem\r\n                        } );\r\n                    }\r\n                } );\r\n\r\n                if ( options.using ) {\r\n\r\n                    // Adds feedback as second argument to using callback, if present\r\n                    using = function( props ) {\r\n                        var left = targetOffset.left - position.left,\r\n                            right = left + targetWidth - elemWidth,\r\n                            top = targetOffset.top - position.top,\r\n                            bottom = top + targetHeight - elemHeight,\r\n                            feedback = {\r\n                                target: {\r\n                                    element: target,\r\n                                    left: targetOffset.left,\r\n                                    top: targetOffset.top,\r\n                                    width: targetWidth,\r\n                                    height: targetHeight\r\n                                },\r\n                                element: {\r\n                                    element: elem,\r\n                                    left: position.left,\r\n                                    top: position.top,\r\n                                    width: elemWidth,\r\n                                    height: elemHeight\r\n                                },\r\n                                horizontal: right < 0 ? \"left\" : left > 0 ? \"right\" : \"center\",\r\n                                vertical: bottom < 0 ? \"top\" : top > 0 ? \"bottom\" : \"middle\"\r\n                            };\r\n                        if ( targetWidth < elemWidth && abs( left + right ) < targetWidth ) {\r\n                            feedback.horizontal = \"center\";\r\n                        }\r\n                        if ( targetHeight < elemHeight && abs( top + bottom ) < targetHeight ) {\r\n                            feedback.vertical = \"middle\";\r\n                        }\r\n                        if ( max( abs( left ), abs( right ) ) > max( abs( top ), abs( bottom ) ) ) {\r\n                            feedback.important = \"horizontal\";\r\n                        } else {\r\n                            feedback.important = \"vertical\";\r\n                        }\r\n                        options.using.call( this, props, feedback );\r\n                    };\r\n                }\r\n\r\n                pagePosition(elem, langx.extend( position, { using: using } ));\r\n            })(elm);\r\n        }\r\n\r\n        var positions = {\r\n            fit: {\r\n                left: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.isWindow ? within.scrollLeft : within.offset.left,\r\n                        outerWidth = within.width,\r\n                        collisionPosLeft = position.left - data.collisionPosition.marginLeft,\r\n                        overLeft = withinOffset - collisionPosLeft,\r\n                        overRight = collisionPosLeft + data.collisionWidth - outerWidth - withinOffset,\r\n                        newOverRight;\r\n\r\n                    // Element is wider than within\r\n                    if ( data.collisionWidth > outerWidth ) {\r\n\r\n                        // Element is initially over the left side of within\r\n                        if ( overLeft > 0 && overRight <= 0 ) {\r\n                            newOverRight = position.left + overLeft + data.collisionWidth - outerWidth -\r\n                                withinOffset;\r\n                            position.left += overLeft - newOverRight;\r\n\r\n                        // Element is initially over right side of within\r\n                        } else if ( overRight > 0 && overLeft <= 0 ) {\r\n                            position.left = withinOffset;\r\n\r\n                        // Element is initially over both left and right sides of within\r\n                        } else {\r\n                            if ( overLeft > overRight ) {\r\n                                position.left = withinOffset + outerWidth - data.collisionWidth;\r\n                            } else {\r\n                                position.left = withinOffset;\r\n                            }\r\n                        }\r\n\r\n                    // Too far left -> align with left edge\r\n                    } else if ( overLeft > 0 ) {\r\n                        position.left += overLeft;\r\n\r\n                    // Too far right -> align with right edge\r\n                    } else if ( overRight > 0 ) {\r\n                        position.left -= overRight;\r\n\r\n                    // Adjust based on position and margin\r\n                    } else {\r\n                        position.left = max( position.left - collisionPosLeft, position.left );\r\n                    }\r\n                },\r\n                top: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.isWindow ? within.scrollTop : within.offset.top,\r\n                        outerHeight = data.within.height,\r\n                        collisionPosTop = position.top - data.collisionPosition.marginTop,\r\n                        overTop = withinOffset - collisionPosTop,\r\n                        overBottom = collisionPosTop + data.collisionHeight - outerHeight - withinOffset,\r\n                        newOverBottom;\r\n\r\n                    // Element is taller than within\r\n                    if ( data.collisionHeight > outerHeight ) {\r\n\r\n                        // Element is initially over the top of within\r\n                        if ( overTop > 0 && overBottom <= 0 ) {\r\n                            newOverBottom = position.top + overTop + data.collisionHeight - outerHeight -\r\n                                withinOffset;\r\n                            position.top += overTop - newOverBottom;\r\n\r\n                        // Element is initially over bottom of within\r\n                        } else if ( overBottom > 0 && overTop <= 0 ) {\r\n                            position.top = withinOffset;\r\n\r\n                        // Element is initially over both top and bottom of within\r\n                        } else {\r\n                            if ( overTop > overBottom ) {\r\n                                position.top = withinOffset + outerHeight - data.collisionHeight;\r\n                            } else {\r\n                                position.top = withinOffset;\r\n                            }\r\n                        }\r\n\r\n                    // Too far up -> align with top\r\n                    } else if ( overTop > 0 ) {\r\n                        position.top += overTop;\r\n\r\n                    // Too far down -> align with bottom edge\r\n                    } else if ( overBottom > 0 ) {\r\n                        position.top -= overBottom;\r\n\r\n                    // Adjust based on position and margin\r\n                    } else {\r\n                        position.top = max( position.top - collisionPosTop, position.top );\r\n                    }\r\n                }\r\n            },\r\n            flip: {\r\n                left: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.offset.left + within.scrollLeft,\r\n                        outerWidth = within.width,\r\n                        offsetLeft = within.isWindow ? within.scrollLeft : within.offset.left,\r\n                        collisionPosLeft = position.left - data.collisionPosition.marginLeft,\r\n                        overLeft = collisionPosLeft - offsetLeft,\r\n                        overRight = collisionPosLeft + data.collisionWidth - outerWidth - offsetLeft,\r\n                        myOffset = data.my[ 0 ] === \"left\" ?\r\n                            -data.elemWidth :\r\n                            data.my[ 0 ] === \"right\" ?\r\n                                data.elemWidth :\r\n                                0,\r\n                        atOffset = data.at[ 0 ] === \"left\" ?\r\n                            data.targetWidth :\r\n                            data.at[ 0 ] === \"right\" ?\r\n                                -data.targetWidth :\r\n                                0,\r\n                        offset = -2 * data.offset[ 0 ],\r\n                        newOverRight,\r\n                        newOverLeft;\r\n\r\n                    if ( overLeft < 0 ) {\r\n                        newOverRight = position.left + myOffset + atOffset + offset + data.collisionWidth -\r\n                            outerWidth - withinOffset;\r\n                        if ( newOverRight < 0 || newOverRight < abs( overLeft ) ) {\r\n                            position.left += myOffset + atOffset + offset;\r\n                        }\r\n                    } else if ( overRight > 0 ) {\r\n                        newOverLeft = position.left - data.collisionPosition.marginLeft + myOffset +\r\n                            atOffset + offset - offsetLeft;\r\n                        if ( newOverLeft > 0 || abs( newOverLeft ) < overRight ) {\r\n                            position.left += myOffset + atOffset + offset;\r\n                        }\r\n                    }\r\n                },\r\n                top: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.offset.top + within.scrollTop,\r\n                        outerHeight = within.height,\r\n                        offsetTop = within.isWindow ? within.scrollTop : within.offset.top,\r\n                        collisionPosTop = position.top - data.collisionPosition.marginTop,\r\n                        overTop = collisionPosTop - offsetTop,\r\n                        overBottom = collisionPosTop + data.collisionHeight - outerHeight - offsetTop,\r\n                        top = data.my[ 1 ] === \"top\",\r\n                        myOffset = top ?\r\n                            -data.elemHeight :\r\n                            data.my[ 1 ] === \"bottom\" ?\r\n                                data.elemHeight :\r\n                                0,\r\n                        atOffset = data.at[ 1 ] === \"top\" ?\r\n                            data.targetHeight :\r\n                            data.at[ 1 ] === \"bottom\" ?\r\n                                -data.targetHeight :\r\n                                0,\r\n                        offset = -2 * data.offset[ 1 ],\r\n                        newOverTop,\r\n                        newOverBottom;\r\n                    if ( overTop < 0 ) {\r\n                        newOverBottom = position.top + myOffset + atOffset + offset + data.collisionHeight -\r\n                            outerHeight - withinOffset;\r\n                        if ( newOverBottom < 0 || newOverBottom < abs( overTop ) ) {\r\n                            position.top += myOffset + atOffset + offset;\r\n                        }\r\n                    } else if ( overBottom > 0 ) {\r\n                        newOverTop = position.top - data.collisionPosition.marginTop + myOffset + atOffset +\r\n                            offset - offsetTop;\r\n                        if ( newOverTop > 0 || abs( newOverTop ) < overBottom ) {\r\n                            position.top += myOffset + atOffset + offset;\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            flipfit: {\r\n                left: function() {\r\n                    positions.flip.left.apply( this, arguments );\r\n                    positions.fit.left.apply( this, arguments );\r\n                },\r\n                top: function() {\r\n                    positions.flip.top.apply( this, arguments );\r\n                    positions.fit.top.apply( this, arguments );\r\n                }\r\n            }\r\n        };\r\n\r\n        geom.posit = posit;\r\n    })();\r\n\r\n    return dom.geom = geom;\r\n});\ndefine('skylark-utils-dom/fx',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./eventer\"\r\n], function(dom, langx, browser, geom, styler, eventer) {\r\n    var animationName,\r\n        animationDuration,\r\n        animationTiming,\r\n        animationDelay,\r\n        transitionProperty,\r\n        transitionDuration,\r\n        transitionTiming,\r\n        transitionDelay,\r\n\r\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\r\n        transitionEnd = browser.normalizeCssEvent('TransitionEnd'),\r\n\r\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\r\n        transform = browser.css3PropPrefix + \"transform\",\r\n        cssReset = {};\r\n\r\n\r\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\r\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\r\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\r\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\r\n\r\n    cssReset[transitionProperty = browser.normalizeCssProperty(\"transition-property\")] =\r\n        cssReset[transitionDuration = browser.normalizeCssProperty(\"transition-duration\")] =\r\n        cssReset[transitionDelay = browser.normalizeCssProperty(\"transition-delay\")] =\r\n        cssReset[transitionTiming = browser.normalizeCssProperty(\"transition-timing-function\")] = \"\";\r\n\r\n\r\n\r\n    /*   \r\n     * Perform a custom animation of a set of CSS properties.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} properties\r\n     * @param {String} ease\r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     * @param {Number or String} delay\r\n     */\r\n    function animate(elm, properties, duration, ease, callback, delay) {\r\n        var key,\r\n            cssValues = {},\r\n            cssProperties = [],\r\n            transforms = \"\",\r\n            that = this,\r\n            endEvent,\r\n            wrappedCallback,\r\n            fired = false,\r\n            hasScrollTop = false,\r\n            resetClipAuto = false;\r\n\r\n        if (langx.isPlainObject(duration)) {\r\n            ease = duration.easing;\r\n            callback = duration.complete;\r\n            delay = duration.delay;\r\n            duration = duration.duration;\r\n        }\r\n\r\n        if (langx.isString(duration)) {\r\n            duration = fx.speeds[duration];\r\n        }\r\n        if (duration === undefined) {\r\n            duration = fx.speeds.normal;\r\n        }\r\n        duration = duration / 1000;\r\n        if (fx.off) {\r\n            duration = 0;\r\n        }\r\n\r\n        if (langx.isFunction(ease)) {\r\n            callback = ease;\r\n            eace = \"swing\";\r\n        } else {\r\n            ease = ease || \"swing\";\r\n        }\r\n\r\n        if (delay) {\r\n            delay = delay / 1000;\r\n        } else {\r\n            delay = 0;\r\n        }\r\n\r\n        if (langx.isString(properties)) {\r\n            // keyframe animation\r\n            cssValues[animationName] = properties;\r\n            cssValues[animationDuration] = duration + \"s\";\r\n            cssValues[animationTiming] = ease;\r\n            endEvent = animationEnd;\r\n        } else {\r\n            // CSS transitions\r\n            for (key in properties) {\r\n                var v = properties[key];\r\n                if (supportedTransforms.test(key)) {\r\n                    transforms += key + \"(\" + v + \") \";\r\n                } else {\r\n                    if (key === \"scrollTop\") {\r\n                        hasScrollTop = true;\r\n                    }\r\n                    if (key == \"clip\" && langx.isPlainObject(v)) {\r\n                        cssValues[key] = \"rect(\" + v.top+\"px,\"+ v.right +\"px,\"+ v.bottom +\"px,\"+ v.left+\"px)\";\r\n                        if (styler.css(elm,\"clip\") == \"auto\") {\r\n                            var size = geom.size(elm);\r\n                            styler.css(elm,\"clip\",\"rect(\"+\"0px,\"+ size.width +\"px,\"+ size.height +\"px,\"+\"0px)\");  \r\n                            resetClipAuto = true;\r\n                        }\r\n\r\n                    } else {\r\n                        cssValues[key] = v;\r\n                    }\r\n                    cssProperties.push(langx.dasherize(key));\r\n                }\r\n            }\r\n            endEvent = transitionEnd;\r\n        }\r\n\r\n        if (transforms) {\r\n            cssValues[transform] = transforms;\r\n            cssProperties.push(transform);\r\n        }\r\n\r\n        if (duration > 0 && langx.isPlainObject(properties)) {\r\n            cssValues[transitionProperty] = cssProperties.join(\", \");\r\n            cssValues[transitionDuration] = duration + \"s\";\r\n            cssValues[transitionDelay] = delay + \"s\";\r\n            cssValues[transitionTiming] = ease;\r\n        }\r\n\r\n        wrappedCallback = function(event) {\r\n            fired = true;\r\n            if (event) {\r\n                if (event.target !== event.currentTarget) {\r\n                    return // makes sure the event didn't bubble from \"below\"\r\n                }\r\n                eventer.off(event.target, endEvent, wrappedCallback)\r\n            } else {\r\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\r\n            }\r\n            styler.css(elm, cssReset);\r\n            if (resetClipAuto) {\r\n //               styler.css(elm,\"clip\",\"auto\");\r\n            }\r\n            callback && callback.call(this);\r\n        };\r\n\r\n        if (duration > 0) {\r\n            eventer.on(elm, endEvent, wrappedCallback);\r\n            // transitionEnd is not always firing on older Android phones\r\n            // so make sure it gets fired\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, ((duration + delay) * 1000) + 25)();\r\n        }\r\n\r\n        // trigger page reflow so new elements can animate\r\n        elm.clientLeft;\r\n\r\n        styler.css(elm, cssValues);\r\n\r\n        if (duration <= 0) {\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, 0)();\r\n        }\r\n\r\n        if (hasScrollTop) {\r\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display an element.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function show(elm, speed, callback) {\r\n        styler.show(elm);\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            styler.css(elm, \"opacity\", 0)\r\n            animate(elm, { opacity: 1, scale: \"1,1\" }, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Hide an element.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function hide(elm, speed, callback) {\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            animate(elm, { opacity: 0, scale: \"0,0\" }, speed, function() {\r\n                styler.hide(elm);\r\n                if (callback) {\r\n                    callback.call(elm);\r\n                }\r\n            });\r\n        } else {\r\n            styler.hide(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Set the vertical position of the scroll bar for an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} pos\r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function scrollToTop(elm, pos, speed, callback) {\r\n        var scrollFrom = parseInt(elm.scrollTop),\r\n            i = 0,\r\n            runEvery = 5, // run every 5ms\r\n            freq = speed * 1000 / runEvery,\r\n            scrollTo = parseInt(pos);\r\n\r\n        var interval = setInterval(function() {\r\n            i++;\r\n\r\n            if (i <= freq) elm.scrollTop = (scrollTo - scrollFrom) / freq * i + scrollFrom;\r\n\r\n            if (i >= freq + 1) {\r\n                clearInterval(interval);\r\n                if (callback) langx.debounce(callback, 1000)();\r\n            }\r\n        }, runEvery);\r\n    }\r\n\r\n    /*   \r\n     * Display or hide an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function toggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            show(elm, speed, callback);\r\n        } else {\r\n            hide(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Adjust the opacity of an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Number or String} opacity\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeTo(elm, speed, opacity, easing, callback) {\r\n        animate(elm, { opacity: opacity }, speed, easing, callback);\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Display an element by fading them to opaque.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeIn(elm, speed, easing, callback) {\r\n        var target = styler.css(elm, \"opacity\");\r\n        if (target > 0) {\r\n            styler.css(elm, \"opacity\", 0);\r\n        } else {\r\n            target = 1;\r\n        }\r\n        styler.show(elm);\r\n\r\n        fadeTo(elm, speed, target, easing, callback);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Hide an element by fading them to transparent.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeOut(elm, speed, easing, callback) {\r\n        var _elm = elm,\r\n            complete,\r\n            opacity = styler.css(elm,\"opacity\"),\r\n            options = {};\r\n\r\n        if (langx.isPlainObject(speed)) {\r\n            options.easing = speed.easing;\r\n            options.duration = speed.duration;\r\n            complete = speed.complete;\r\n        } else {\r\n            options.duration = speed;\r\n            if (callback) {\r\n                complete = callback;\r\n                options.easing = easing;\r\n            } else {\r\n                complete = easing;\r\n            }\r\n        }\r\n        options.complete = function() {\r\n            styler.css(elm,\"opacity\",opacity);\r\n            styler.hide(elm);\r\n            if (complete) {\r\n                complete.call(elm);\r\n            }\r\n        }\r\n\r\n        fadeTo(elm, options, 0);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display or hide an element by animating its opacity.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} ceasing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeToggle(elm, speed, ceasing, allback) {\r\n        if (styler.isInvisible(elm)) {\r\n            fadeIn(elm, speed, easing, callback);\r\n        } else {\r\n            fadeOut(elm, speed, easing, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideDown(elm, duration, callback) {\r\n\r\n        // get the element position to restore it then\r\n        var position = styler.css(elm, 'position');\r\n\r\n        // show element if it is hidden\r\n        show(elm);\r\n\r\n        // place it so it displays as usually but hidden\r\n        styler.css(elm, {\r\n            position: 'absolute',\r\n            visibility: 'hidden'\r\n        });\r\n\r\n        // get naturally height, margin, padding\r\n        var marginTop = styler.css(elm, 'margin-top');\r\n        var marginBottom = styler.css(elm, 'margin-bottom');\r\n        var paddingTop = styler.css(elm, 'padding-top');\r\n        var paddingBottom = styler.css(elm, 'padding-bottom');\r\n        var height = styler.css(elm, 'height');\r\n\r\n        // set initial css for animation\r\n        styler.css(elm, {\r\n            position: position,\r\n            visibility: 'visible',\r\n            overflow: 'hidden',\r\n            height: 0,\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0\r\n        });\r\n\r\n        // animate to gotten height, margin and padding\r\n        animate(elm, {\r\n            height: height,\r\n            marginTop: marginTop,\r\n            marginBottom: marginBottom,\r\n            paddingTop: paddingTop,\r\n            paddingBottom: paddingBottom\r\n        }, {\r\n            duration: duration,\r\n            complete: function() {\r\n                if (callback) {\r\n                    callback.apply(elm);\r\n                }\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideUp(elm, duration, callback) {\r\n        // active the function only if the element is visible\r\n        if (geom.height(elm) > 0) {\r\n\r\n            // get the element position to restore it then\r\n            var position = styler.css(elm, 'position');\r\n\r\n            // get the element height, margin and padding to restore them then\r\n            var height = styler.css(elm, 'height');\r\n            var marginTop = styler.css(elm, 'margin-top');\r\n            var marginBottom = styler.css(elm, 'margin-bottom');\r\n            var paddingTop = styler.css(elm, 'padding-top');\r\n            var paddingBottom = styler.css(elm, 'padding-bottom');\r\n\r\n            // set initial css for animation\r\n            styler.css(elm, {\r\n                visibility: 'visible',\r\n                overflow: 'hidden',\r\n                height: height,\r\n                marginTop: marginTop,\r\n                marginBottom: marginBottom,\r\n                paddingTop: paddingTop,\r\n                paddingBottom: paddingBottom\r\n            });\r\n\r\n            // animate element height, margin and padding to zero\r\n            animate(elm, {\r\n                height: 0,\r\n                marginTop: 0,\r\n                marginBottom: 0,\r\n                paddingTop: 0,\r\n                paddingBottom: 0\r\n            }, {\r\n                // callback : restore the element position, height, margin and padding to original values\r\n                duration: duration,\r\n                queue: false,\r\n                complete: function() {\r\n                    hide(elm);\r\n                    styler.css(elm, {\r\n                        visibility: 'visible',\r\n                        overflow: 'hidden',\r\n                        height: height,\r\n                        marginTop: marginTop,\r\n                        marginBottom: marginBottom,\r\n                        paddingTop: paddingTop,\r\n                        paddingBottom: paddingBottom\r\n                    });\r\n                    if (callback) {\r\n                        callback.apply(elm);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Display or hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideToggle(elm, duration, callback) {\r\n\r\n        // if the element is hidden, slideDown !\r\n        if (geom.height(elm) == 0) {\r\n            slideDown(elm, duration, callback);\r\n        }\r\n        // if the element is visible, slideUp !\r\n        else {\r\n            slideUp(elm, duration, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function emulateTransitionEnd(elm,duration) {\r\n        var called = false;\r\n        eventer.one(elm,'transitionEnd', function () { \r\n            called = true;\r\n        })\r\n        var callback = function () { \r\n            if (!called) {\r\n                eventer.trigger(elm,'transitionEnd') \r\n            }\r\n        };\r\n        setTimeout(callback, duration);\r\n        \r\n        return this;\r\n    } \r\n\r\n    function fx() {\r\n        return fx;\r\n    }\r\n\r\n    langx.mixin(fx, {\r\n        off: false,\r\n\r\n        speeds: {\r\n            normal: 400,\r\n            fast: 200,\r\n            slow: 600\r\n        },\r\n\r\n        animate,\r\n        emulateTransitionEnd,\r\n        fadeIn,\r\n        fadeOut,\r\n        fadeTo,\r\n        fadeToggle,\r\n        hide,\r\n        scrollToTop,\r\n\r\n        slideDown,\r\n        slideToggle,\r\n        slideUp,\r\n        show,\r\n        toggle\r\n    });\r\n\r\n    return dom.fx = fx;\r\n});\ndefine('skylark-utils-dom/query',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./fx\"\r\n], function(dom, langx, noder, datax, eventer, finder, geom, styler, fx) {\r\n    var some = Array.prototype.some,\r\n        push = Array.prototype.push,\r\n        every = Array.prototype.every,\r\n        concat = Array.prototype.concat,\r\n        slice = Array.prototype.slice,\r\n        map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        forEach = Array.prototype.forEach,\r\n        indexOf = Array.prototype.indexOf,\r\n        sort = Array.prototype.sort,\r\n        isQ;\r\n\r\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\r\n\r\n    var funcArg = langx.funcArg,\r\n        isArrayLike = langx.isArrayLike,\r\n        isString = langx.isString,\r\n        uniq = langx.uniq,\r\n        isFunction = langx.isFunction;\r\n\r\n    var type = langx.type,\r\n        isArray = langx.isArray,\r\n\r\n        isWindow = langx.isWindow,\r\n\r\n        isDocument = langx.isDocument,\r\n\r\n        isObject = langx.isObject,\r\n\r\n        isPlainObject = langx.isPlainObject,\r\n\r\n        compact = langx.compact,\r\n\r\n        flatten = langx.flatten,\r\n\r\n        camelCase = langx.camelCase,\r\n\r\n        dasherize = langx.dasherize,\r\n        children = finder.children;\r\n\r\n    function wrapper_map(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = langx.map(self, function(elem, idx) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n            return query(uniq(result));\r\n        }\r\n    }\r\n\r\n    function wrapper_selector(func, context, last) {\r\n        return function(selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                //if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem] : [elem, selector]);\r\n                //}\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper_selector_until(func, context, last) {\r\n        return function(util, selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            //if (selector === undefined) { //TODO : needs confirm?\r\n            //    selector = util;\r\n            //    util = undefined;\r\n            //}\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) { // TODO\r\n                //if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem, util] : [elem, selector, util]);\r\n                //}\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function wrapper_every_act(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            this.each(function(idx,node) {\r\n                func.apply(context, [this].concat(params));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\r\n        return function(arg1) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            forEach.call(self, function(elem, idx) {\r\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\r\n                func.apply(context, [elem, arg1].concat(params.slice(1)));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_some_chk(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            return some.call(self, function(elem) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapper_name_value(func, context, oldValueFunc) {\r\n        return function(name, value) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n\r\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem, name));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem].concat(params));\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0], name]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function wrapper_value(func, context, oldValueFunc) {\r\n        return function(value) {\r\n            var self = this;\r\n\r\n            if (langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem, newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0]]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var NodeList = langx.klass({\r\n        klassName: \"SkNodeList\",\r\n        init: function(selector, context) {\r\n            var self = this,\r\n                match, nodes, node, props;\r\n\r\n            if (selector) {\r\n                self.context = context = context || noder.doc();\r\n\r\n                if (isString(selector)) {\r\n                    // a html string or a css selector is expected\r\n                    self.selector = selector;\r\n\r\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\r\n                        match = [null, selector, null];\r\n                    } else {\r\n                        match = rquickExpr.exec(selector);\r\n                    }\r\n\r\n                    if (match) {\r\n                        if (match[1]) {\r\n                            // if selector is html\r\n                            nodes = noder.createFragment(selector);\r\n\r\n                            if (langx.isPlainObject(context)) {\r\n                                props = context;\r\n                            }\r\n\r\n                        } else {\r\n                            node = finder.byId(match[2], noder.ownerDoc(context));\r\n\r\n                            if (node) {\r\n                                // if selector is id\r\n                                nodes = [node];\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        // if selector is css selector\r\n                        if (langx.isString(context)) {\r\n                            context = finder.find(context);\r\n                        }\r\n\r\n                        nodes = finder.descendants(context, selector);\r\n                    }\r\n                } else {\r\n                    if (selector !== window && isArrayLike(selector)) {\r\n                        // a dom node array is expected\r\n                        nodes = selector;\r\n                    } else {\r\n                        // a dom node is expected\r\n                        nodes = [selector];\r\n                    }\r\n                    //self.add(selector, false);\r\n                }\r\n            }\r\n\r\n\r\n            if (nodes) {\r\n\r\n                push.apply(self, nodes);\r\n\r\n                if (props) {\r\n                    for ( var name  in props ) {\r\n                        // Properties of context are called as methods if possible\r\n                        if ( langx.isFunction( this[ name ] ) ) {\r\n                            this[ name ]( props[ name ] );\r\n                        } else {\r\n                            this.attr( name, props[ name ] );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return self;\r\n        }\r\n    });\r\n\r\n    var query = (function() {\r\n        isQ = function(object) {\r\n            return object instanceof NodeList;\r\n        }\r\n        init = function(selector, context) {\r\n            return new NodeList(selector, context);\r\n        }\r\n\r\n        var $ = function(selector, context) {\r\n            if (isFunction(selector)) {\r\n                eventer.ready(function() {\r\n                    selector($);\r\n                });\r\n            } else if (isQ(selector)) {\r\n                return selector;\r\n            } else {\r\n                if (context && isQ(context) && isString(selector)) {\r\n                    return context.find(selector);\r\n                }\r\n                return init(selector, context);\r\n            }\r\n        };\r\n\r\n        $.fn = NodeList.prototype;\r\n        langx.mixin($.fn, {\r\n            // `map` and `slice` in the jQuery API work differently\r\n            // from their array counterparts\r\n            length : 0,\r\n\r\n            map: function(fn) {\r\n                return $(uniq(langx.map(this, function(el, i) {\r\n                    return fn.call(el, i, el)\r\n                })));\r\n            },\r\n\r\n            slice: function() {\r\n                return $(slice.apply(this, arguments))\r\n            },\r\n\r\n            forEach: function() {\r\n                return forEach.apply(this,arguments);\r\n            },\r\n\r\n            get: function(idx) {\r\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n            },\r\n\r\n            indexOf: function() {\r\n                return indexOf.apply(this,arguments);\r\n            },\r\n\r\n            sort : function() {\r\n                return sort.apply(this,arguments);\r\n            },\r\n\r\n            toArray: function() {\r\n                return slice.call(this);\r\n            },\r\n\r\n            size: function() {\r\n                return this.length\r\n            },\r\n\r\n            remove: wrapper_every_act(noder.remove, noder),\r\n\r\n            each: function(callback) {\r\n                langx.each(this, callback);\r\n                return this;\r\n            },\r\n\r\n            filter: function(selector) {\r\n                if (isFunction(selector)) return this.not(this.not(selector))\r\n                return $(filter.call(this, function(element) {\r\n                    return finder.matches(element, selector)\r\n                }))\r\n            },\r\n\r\n            add: function(selector, context) {\r\n                return $(uniq(this.toArray().concat($(selector, context).toArray())));\r\n            },\r\n\r\n            is: function(selector) {\r\n                if (this.length > 0) {\r\n                    var self = this;\r\n                    if (langx.isString(selector)) {\r\n                        return some.call(self,function(elem) {\r\n                            return finder.matches(elem, selector);\r\n                        });\r\n                    } else if (langx.isArrayLike(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return langx.inArray(elem, selector) > -1;\r\n                        });\r\n                    } else if (langx.isHtmlNode(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return elem ==  selector;\r\n                        });\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n            \r\n            not: function(selector) {\r\n                var nodes = []\r\n                if (isFunction(selector) && selector.call !== undefined)\r\n                    this.each(function(idx,node) {\r\n                        if (!selector.call(this, idx,node)) nodes.push(this)\r\n                    })\r\n                else {\r\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n                    this.forEach(function(el) {\r\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\r\n                    })\r\n                }\r\n                return $(nodes)\r\n            },\r\n\r\n            has: function(selector) {\r\n                return this.filter(function() {\r\n                    return isObject(selector) ?\r\n                        noder.contains(this, selector) :\r\n                        $(this).find(selector).size()\r\n                })\r\n            },\r\n\r\n            eq: function(idx) {\r\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\r\n            },\r\n\r\n            first: function() {\r\n                return this.eq(0);\r\n            },\r\n\r\n            last: function() {\r\n                return this.eq(-1);\r\n            },\r\n\r\n            find: wrapper_selector(finder.descendants, finder),\r\n\r\n            closest: wrapper_selector(finder.closest, finder),\r\n            /*\r\n                        closest: function(selector, context) {\r\n                            var node = this[0],\r\n                                collection = false\r\n                            if (typeof selector == 'object') collection = $(selector)\r\n                            while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\r\n                                node = node !== context && !isDocument(node) && node.parentNode\r\n                            return $(node)\r\n                        },\r\n            */\r\n\r\n\r\n            parents: wrapper_selector(finder.ancestors, finder),\r\n\r\n            parentsUntil: wrapper_selector_until(finder.ancestors, finder),\r\n\r\n\r\n            parent: wrapper_selector(finder.parent, finder),\r\n\r\n            children: wrapper_selector(finder.children, finder),\r\n\r\n            contents: wrapper_map(noder.contents, noder),\r\n\r\n            empty: wrapper_every_act(noder.empty, noder),\r\n\r\n            // `pluck` is borrowed from Prototype.js\r\n            pluck: function(property) {\r\n                return langx.map(this, function(el) {\r\n                    return el[property]\r\n                })\r\n            },\r\n\r\n            pushStack : function(elms) {\r\n                var ret = $(elms);\r\n                ret.prevObject = this;\r\n                return ret;\r\n            },\r\n            \r\n            replaceWith: function(newContent) {\r\n                return this.before(newContent).remove();\r\n            },\r\n\r\n            wrap: function(structure) {\r\n                var func = isFunction(structure)\r\n                if (this[0] && !func)\r\n                    var dom = $(structure).get(0),\r\n                        clone = dom.parentNode || this.length > 1\r\n\r\n                return this.each(function(index,node) {\r\n                    $(this).wrapAll(\r\n                        func ? structure.call(this, index,node) :\r\n                        clone ? dom.cloneNode(true) : dom\r\n                    )\r\n                })\r\n            },\r\n\r\n            wrapAll: function(wrappingElement) {\r\n                if (this[0]) {\r\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\r\n                    var children;\r\n                    // drill down to the inmost element\r\n                    while ((children = wrappingElement.children()).length) {\r\n                        wrappingElement = children.first();\r\n                    }\r\n                    $(wrappingElement).append(this);\r\n                }\r\n                return this\r\n            },\r\n\r\n            wrapInner: function(wrappingElement) {\r\n                var func = isFunction(wrappingElement)\r\n                return this.each(function(index,node) {\r\n                    var self = $(this),\r\n                        contents = self.contents(),\r\n                        dom = func ? wrappingElement.call(this, index,node) : wrappingElement\r\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n                })\r\n            },\r\n\r\n            unwrap: function(selector) {\r\n                if (this.parent().children().length === 0) {\r\n                    // remove dom without text\r\n                    this.parent(selector).not(\"body\").each(function() {\r\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\r\n                    });\r\n                } else {\r\n                    this.parent().each(function() {\r\n                        $(this).replaceWith($(this).children())\r\n                    });\r\n                }\r\n                return this\r\n            },\r\n\r\n            clone: function() {\r\n                return this.map(function() {\r\n                    return this.cloneNode(true)\r\n                })\r\n            },\r\n\r\n            hide: wrapper_every_act(fx.hide, fx),\r\n\r\n            toggle: function(setting) {\r\n                return this.each(function() {\r\n                    var el = $(this);\r\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show(): el.hide()\r\n                })\r\n            },\r\n\r\n            prev: function(selector) {\r\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            prevAll: wrapper_selector(finder.previousSiblings, finder),\r\n\r\n            next: function(selector) {\r\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            nextAll: wrapper_selector(finder.nextSiblings, finder),\r\n\r\n            siblings: wrapper_selector(finder.siblings, finder),\r\n\r\n            html: wrapper_value(noder.html, noder, noder.html),\r\n\r\n            text: wrapper_value(datax.text, datax, datax.text),\r\n\r\n            attr: wrapper_name_value(datax.attr, datax, datax.attr),\r\n\r\n            removeAttr: wrapper_every_act(datax.removeAttr, datax),\r\n\r\n            prop: wrapper_name_value(datax.prop, datax, datax.prop),\r\n\r\n            removeProp: wrapper_every_act(datax.removeProp, datax),\r\n\r\n            data: wrapper_name_value(datax.data, datax, datax.data),\r\n\r\n            removeData: wrapper_every_act(datax.removeData, datax),\r\n\r\n            val: wrapper_value(datax.val, datax, datax.val),\r\n\r\n            offset: wrapper_value(geom.pagePosition, geom, geom.pagePosition),\r\n\r\n            style: wrapper_name_value(styler.css, styler),\r\n\r\n            css: wrapper_name_value(styler.css, styler),\r\n\r\n            index: function(elem) {\r\n                if (elem) {\r\n                    return this.indexOf($(elem)[0]);\r\n                } else {\r\n                    return this.parent().children().indexOf(this[0]);\r\n                }\r\n            },\r\n\r\n            //hasClass(name)\r\n            hasClass: wrapper_some_chk(styler.hasClass, styler),\r\n\r\n            //addClass(name)\r\n            addClass: wrapper_every_act_firstArgFunc(styler.addClass, styler, styler.className),\r\n\r\n            //removeClass(name)\r\n            removeClass: wrapper_every_act_firstArgFunc(styler.removeClass, styler, styler.className),\r\n\r\n            //toogleClass(name,when)\r\n            toggleClass: wrapper_every_act_firstArgFunc(styler.toggleClass, styler, styler.className),\r\n\r\n            scrollTop: wrapper_value(geom.scrollTop, geom),\r\n\r\n            scrollLeft: wrapper_value(geom.scrollLeft, geom),\r\n\r\n            position: function(options) {\r\n                if (!this.length) return\r\n\r\n                if (options) {\r\n                    if (options.of && options.of.length) {\r\n                        options = langx.clone(options);\r\n                        options.of = options.of[0];\r\n                    }\r\n                    return this.each( function() {\r\n                        geom.posit(this,options);\r\n                    });\r\n                } else {\r\n                    var elem = this[0];\r\n\r\n                    return geom.relativePosition(elem);\r\n\r\n                }             \r\n            },\r\n\r\n            offsetParent: wrapper_map(geom.offsetParent, geom)\r\n        });\r\n\r\n        // for now\r\n        $.fn.detach = $.fn.remove;\r\n\r\n        $.fn.hover = function(fnOver, fnOut) {\r\n            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\r\n        };\r\n\r\n        $.fn.size = wrapper_value(geom.size, geom);\r\n\r\n        $.fn.width = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.height = wrapper_value(geom.height, geom, geom.height);\r\n\r\n        $.fn.clientSize = wrapper_value(geom.clientSize, geom.clientSize);\r\n\r\n        ['width', 'height'].forEach(function(dimension) {\r\n            var offset, Dimension = dimension.replace(/./, function(m) {\r\n                return m[0].toUpperCase()\r\n            });\r\n\r\n            $.fn['outer' + Dimension] = function(margin, value) {\r\n                if (arguments.length) {\r\n                    if (typeof margin !== 'boolean') {\r\n                        value = margin;\r\n                        margin = false;\r\n                    }\r\n                } else {\r\n                    margin = false;\r\n                    value = undefined;\r\n                }\r\n\r\n                if (value === undefined) {\r\n                    var el = this[0];\r\n                    if (!el) {\r\n                        return undefined;\r\n                    }\r\n                    var cb = geom.size(el);\r\n                    if (margin) {\r\n                        var me = geom.marginExtents(el);\r\n                        cb.width = cb.width + me.left + me.right;\r\n                        cb.height = cb.height + me.top + me.bottom;\r\n                    }\r\n                    return dimension === \"width\" ? cb.width : cb.height;\r\n                } else {\r\n                    return this.each(function(idx, el) {\r\n                        var mb = {};\r\n                        var me = geom.marginExtents(el);\r\n                        if (dimension === \"width\") {\r\n                            mb.width = value;\r\n                            if (margin) {\r\n                                mb.width = mb.width - me.left - me.right\r\n                            }\r\n                        } else {\r\n                            mb.height = value;\r\n                            if (margin) {\r\n                                mb.height = mb.height - me.top - me.bottom;\r\n                            }\r\n                        }\r\n                        geom.size(el, mb);\r\n                    })\r\n\r\n                }\r\n            };\r\n        })\r\n\r\n        $.fn.innerWidth = wrapper_value(geom.clientWidth, geom, geom.clientWidth);\r\n\r\n        $.fn.innerHeight = wrapper_value(geom.clientHeight, geom, geom.clientHeight);\r\n\r\n        var traverseNode = noder.traverse;\r\n\r\n        function wrapper_node_operation(func, context, oldValueFunc) {\r\n            return function(html) {\r\n                var argType, nodes = langx.map(arguments, function(arg) {\r\n                    argType = type(arg)\r\n                    return argType == \"object\" || argType == \"array\" || arg == null ?\r\n                        arg : noder.createFragment(arg)\r\n                });\r\n                if (nodes.length < 1) {\r\n                    return this\r\n                }\r\n                this.each(function(idx) {\r\n                    func.apply(context, [this, nodes, idx > 0]);\r\n                });\r\n                return this;\r\n            }\r\n        }\r\n\r\n\r\n        $.fn.after = wrapper_node_operation(noder.after, noder);\r\n\r\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\r\n\r\n        $.fn.before = wrapper_node_operation(noder.before, noder);\r\n\r\n        $.fn.append = wrapper_node_operation(noder.append, noder);\r\n\r\n\r\n        langx.each( {\r\n            appendTo: \"append\",\r\n            prependTo: \"prepend\",\r\n            insertBefore: \"before\",\r\n            insertAfter: \"after\",\r\n            replaceAll: \"replaceWith\"\r\n        }, function( name, original ) {\r\n            $.fn[ name ] = function( selector ) {\r\n                var elems,\r\n                    ret = [],\r\n                    insert = $( selector ),\r\n                    last = insert.length - 1,\r\n                    i = 0;\r\n\r\n                for ( ; i <= last; i++ ) {\r\n                    elems = i === last ? this : this.clone( true );\r\n                    $( insert[ i ] )[ original ]( elems );\r\n\r\n                    // Support: Android <=4.0 only, PhantomJS 1 only\r\n                    // .get() because push.apply(_, arraylike) throws on ancient WebKit\r\n                    push.apply( ret, elems.get() );\r\n                }\r\n\r\n                return this.pushStack( ret );\r\n            };\r\n        } );\r\n\r\n/*\r\n        $.fn.insertAfter = function(html) {\r\n            $(html).after(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.insertBefore = function(html) {\r\n            $(html).before(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.appendTo = function(html) {\r\n            $(html).append(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.prependTo = function(html) {\r\n            $(html).prepend(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceAll = function(selector) {\r\n            $(selector).replaceWith(this);\r\n            return this;\r\n        };\r\n*/\r\n        return $;\r\n    })();\r\n\r\n    (function($) {\r\n        $.fn.on = wrapper_every_act(eventer.on, eventer);\r\n\r\n        $.fn.off = wrapper_every_act(eventer.off, eventer);\r\n\r\n        $.fn.trigger = wrapper_every_act(eventer.trigger, eventer);\r\n\r\n        ('focusin focusout focus blur load resize scroll unload click dblclick ' +\r\n            'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\r\n            'change select keydown keypress keyup error transitionEnd').split(' ').forEach(function(event) {\r\n            $.fn[event] = function(data, callback) {\r\n                return (0 in arguments) ?\r\n                    this.on(event, data, callback) :\r\n                    this.trigger(event)\r\n            }\r\n        });\r\n\r\n        $.fn.one = function(event, selector, data, callback) {\r\n            if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n                callback = data;\r\n                data = selector;\r\n                selector = null;\r\n            }\r\n\r\n            if (langx.isFunction(data)) {\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            return this.on(event, selector, data, callback, 1)\r\n        };\r\n\r\n        $.fn.animate = wrapper_every_act(fx.animate, fx);\r\n        $.fn.emulateTransitionEnd = wrapper_every_act(fx.emulateTransitionEnd, fx);\r\n\r\n        $.fn.show = wrapper_every_act(fx.show, fx);\r\n        $.fn.hide = wrapper_every_act(fx.hide, fx);\r\n        $.fn.toogle = wrapper_every_act(fx.toogle, fx);\r\n        $.fn.fadeTo = wrapper_every_act(fx.fadeTo, fx);\r\n        $.fn.fadeIn = wrapper_every_act(fx.fadeIn, fx);\r\n        $.fn.fadeOut = wrapper_every_act(fx.fadeOut, fx);\r\n        $.fn.fadeToggle = wrapper_every_act(fx.fadeToggle, fx);\r\n\r\n        $.fn.slideDown = wrapper_every_act(fx.slideDown, fx);\r\n        $.fn.slideToggle = wrapper_every_act(fx.slideToggle, fx);\r\n        $.fn.slideUp = wrapper_every_act(fx.slideUp, fx);\r\n\r\n        $.fn.scrollParent = function( includeHidden ) {\r\n            var position = this.css( \"position\" ),\r\n                excludeStaticParent = position === \"absolute\",\r\n                overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/,\r\n                scrollParent = this.parents().filter( function() {\r\n                    var parent = $( this );\r\n                    if ( excludeStaticParent && parent.css( \"position\" ) === \"static\" ) {\r\n                        return false;\r\n                    }\r\n                    return overflowRegex.test( parent.css( \"overflow\" ) + parent.css( \"overflow-y\" ) +\r\n                        parent.css( \"overflow-x\" ) );\r\n                } ).eq( 0 );\r\n\r\n            return position === \"fixed\" || !scrollParent.length ?\r\n                $( this[ 0 ].ownerDocument || document ) :\r\n                scrollParent;\r\n        };\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.end = function() {\r\n            return this.prevObject || $()\r\n        }\r\n\r\n        $.fn.andSelf = function() {\r\n            return this.add(this.prevObject || $())\r\n        }\r\n\r\n        $.fn.addBack = function(selector) {\r\n            if (this.prevObject) {\r\n                if (selector) {\r\n                    return this.add(this.prevObject.filter(selector));\r\n                } else {\r\n                    return this.add(this.prevObject);\r\n                }\r\n            } else {\r\n                return this;\r\n            }\r\n        }\r\n\r\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings,prev,prevAll,next,nextAll'.split(',').forEach(function(property) {\r\n            var fn = $.fn[property]\r\n            $.fn[property] = function() {\r\n                var ret = fn.apply(this, arguments)\r\n                ret.prevObject = this\r\n                return ret\r\n            }\r\n        })\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.query = $.fn.find;\r\n\r\n        $.fn.place = function(refNode, position) {\r\n            // summary:\r\n            //      places elements of this node list relative to the first element matched\r\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\r\n            // queryOrNode:\r\n            //      may be a string representing any valid CSS3 selector or a DOM node.\r\n            //      In the selector case, only the first matching element will be used\r\n            //      for relative positioning.\r\n            // position:\r\n            //      can be one of:\r\n            //\r\n            //      -   \"last\" (default)\r\n            //      -   \"first\"\r\n            //      -   \"before\"\r\n            //      -   \"after\"\r\n            //      -   \"only\"\r\n            //      -   \"replace\"\r\n            //\r\n            //      or an offset in the childNodes\r\n            if (langx.isString(refNode)) {\r\n                refNode = finder.descendant(refNode);\r\n            } else if (isQ(refNode)) {\r\n                refNode = refNode[0];\r\n            }\r\n            return this.each(function(i, node) {\r\n                switch (position) {\r\n                    case \"before\":\r\n                        noder.before(refNode, node);\r\n                        break;\r\n                    case \"after\":\r\n                        noder.after(refNode, node);\r\n                        break;\r\n                    case \"replace\":\r\n                        noder.replace(refNode, node);\r\n                        break;\r\n                    case \"only\":\r\n                        noder.empty(refNode);\r\n                        noder.append(refNode, node);\r\n                        break;\r\n                    case \"first\":\r\n                        noder.prepend(refNode, node);\r\n                        break;\r\n                        // else fallthrough...\r\n                    default: // aka: last\r\n                        noder.append(refNode, node);\r\n                }\r\n            });\r\n        };\r\n\r\n        $.fn.addContent = function(content, position) {\r\n            if (content.template) {\r\n                content = langx.substitute(content.template, content);\r\n            }\r\n            return this.append(content);\r\n        };\r\n\r\n        $.fn.replaceClass = function(newClass, oldClass) {\r\n            this.removeClass(oldClass);\r\n            this.addClass(newClass);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceClass = function(newClass, oldClass) {\r\n            this.removeClass(oldClass);\r\n            this.addClass(newClass);\r\n            return this;\r\n        };\r\n\r\n        $.fn.disableSelection = ( function() {\r\n            var eventType = \"onselectstart\" in document.createElement( \"div\" ) ?\r\n                \"selectstart\" :\r\n                \"mousedown\";\r\n\r\n            return function() {\r\n                return this.on( eventType + \".ui-disableSelection\", function( event ) {\r\n                    event.preventDefault();\r\n                } );\r\n            };\r\n        } )();\r\n\r\n        $.fn.enableSelection = function() {\r\n            return this.off( \".ui-disableSelection\" );\r\n        };\r\n       \r\n\r\n    })(query);\r\n\r\n    query.fn.plugin = function(name,options) {\r\n        var args = slice.call( arguments, 1 ),\r\n            self = this,\r\n            returnValue = this;\r\n\r\n        this.each(function(){\r\n            returnValue = plugins.instantiate.apply(self,[this,name].concat(args));\r\n        });\r\n        return returnValue;\r\n    };\r\n\r\n    return dom.query = query;\r\n\r\n});\ndefine('skylark-domx-layout/Orientation',[\r\n    \"skylark-langx/langx\",\r\n    \"./layouts\"\r\n], function(langx,layouts) {\r\n\r\n    var Orientation = layout.Orientation = {\r\n    \t\"horz\" : 1, \r\n    \t\"vert\" : 2\r\n    };\r\n    return Orientation;\r\n});\r\n\ndefine('skylark-domx-layout/box',[\r\n    \"skylark-langx/langx\",\r\n    \"skylark-utils-dom/query\",\r\n    \"./layouts\",\r\n    \"./Orientation\"\r\n], function(langx, $, layouts, Orientation) {\r\n    // TODO : This module will be deleted.\r\n    var box = layouts.box = function(container,options) {\r\n        var options = langx.mixin({\r\n            items : \".item\", // children element selector for item\r\n            wspacing : 100, // width for spacing a child element\r\n            hspacing : 100, // height for spacing a child element\r\n            orientation : Orientation.vert // Laid out elements direction,\r\n        },options)\r\n\r\n\r\n        var size = $(container).clientSize(),\r\n            width = size.width,\r\n            height = size.height,\r\n            x = 0, \r\n            y = 0;\r\n            \r\n        var $items = $(container).children(options.items);        \r\n\r\n        $items.each(function(i){\r\n            // layouts inited item child\r\n            $(this).css({\r\n                \"left\" : x,\r\n                \"top\" : y,\r\n                \"position\" : \"absolute\",\r\n                \"display\" : \"inline-block\"\r\n            });\r\n\r\n            // 垂直排列\r\n            if (options.orientation == Orientation.vert) {\r\n                y += options.hspacing;\r\n                if (y >= (height - options.hspacing)) {\r\n                    y = 0; \r\n                    x += options.wspacing;\r\n                }\r\n            } else {\r\n                x += options.wspacing;\r\n                if (x >= (width - options.wspacing)) {\r\n                    x = 0; \r\n                    y += options.hspacing;\r\n                }\r\n            }\r\n\r\n        });\r\n    };\r\n    \r\n    return box;        \r\n    \r\n});\r\n\ndefine('skylark-domx-layout/bsgrid',[\r\n    \"skylark-langx/langx\",\r\n    \"./layouts\"\r\n], function(langx,layouts) {\r\n    // summary:\r\n    //  The bsgrid layouter is a bootstrap grid layout manager. \r\n\r\n    //TODO: \r\n    var bsgrid = layouts.bsgrid = function(container,options) {\r\n        throw new Error (\"This method is not implemented!\");\r\n    };\r\n\r\n    return bsgrid;\r\n});\r\n\ndefine('skylark-domx-layout/columns',[\r\n    \"skylark-langx/langx\",\r\n    \"skylark-utils-dom/query\",\r\n    \"./layouts\",\r\n], function(langx,$,layouts) {\r\n    // summary:\r\n    //  The bsgrid layouter is a layout manager that adds each child item to a separate column. \r\n\r\n    var columns = layouts.columns = function(container,options) {\r\n        var options = langx.mixin({\r\n            items : \".item\" // children element selector for item\r\n        },options)       \r\n        var $items = $(container).children(options.items);     \r\n        $items.css({\r\n            \"left\" : \"0px\",\r\n            \"top\" : \"0px\",\r\n            \"position\" : \"relative\",\r\n            \"display\" : \"table-cell\"\r\n        });\r\n    };\r\n    \r\n    return columns;    \r\n    \r\n});\r\n\ndefine('skylark-domx-layout/DockStyle',[\r\n    \"skylark-langx/langx\",\r\n    \"./layouts\",\r\n],function(langx,layouts) {\r\n\r\n\tvar DockStyle = layouts.DockStyle = {\r\n\t\t\"none\" : 1, \r\n\t\t\"left\" : 2, \r\n\t\t\"top\" : 3, \r\n\t\t\"right\" : 4, \r\n\t\t\"bottom\" : 5, \r\n\t\t\"client\" : 6\r\n\t};\r\n\r\n\treturn DockStyle;\r\n\r\n});\r\n\ndefine('skylark-domx-layout/dock',[\r\n    \"skylark-langx/langx\",\r\n    \"skylark-utils-dom/datax\",\r\n    \"skylark-utils-dom/finder\",\r\n    \"skylark-utils-dom/geom\",\r\n    \"./layouts\",\r\n\t\"./DockStyle\",\r\n], function(langx,datax,finder,geom,layouts,geom,DockStyle) {\r\n\r\n    var dock = layouts.dock = function(container,options) {\r\n        var options = langx.mixin({\r\n            items : \"[data-region]\" // children element selector for item\r\n        },options)       \r\n\r\n        var size = geom.clientSize(container),\r\n        \tdim = {\r\n        \t\tl : 0,\r\n        \t\tt : 0,\r\n        \t\tw : size.width,\r\n        \t\th : size.height,\r\n        \t},\r\n        \tchildren = finder.children(container,options.items);\r\n\r\n\t\tchildren = children.filter(function(item){ return datax.data(item,\"region\") != \"client\"; })\r\n\t\t\t.concat(children.filter(function(item){ return datax.data(item,\"region\") == \"client\"; }));\r\n\r\n\t\t// set positions/sizes\r\n\t\tchildren.forEach(function(item){\r\n\t\t\tvar region = datax.data(item,\"region\"),\r\n\t\t\t    childSize = geom.size(item);\r\n\r\n\t\t\tif(!region){\r\n\t\t\t\tthrow new Error(\"No dock setting for \" + item.id)\r\n\t\t\t}\r\n\r\n\t\t\t// set elem to upper left corner of unused space; may move it later\r\n\r\n\t\t\tstyler.css(elm,{\r\n\t\t\t\tposition : \"absolute\"\r\n\t\t\t});\r\n\r\n\t\t\t// Size adjustments to make to this child widget\r\n\t\t\tvar bounds = {\r\n\t\t\t\tleft : dim.l,\r\n\t\t\t\ttop : dim.t\r\n\t\t\t};\r\n\r\n\t\t\t// set size && adjust record of remaining space.\r\n\t\t\t// note that setting the width of a <div> may affect its height.\r\n\t\t\tif(region == \"top\" || region == \"bottom\"){\r\n\t\t\t\tbounds.width = dim.w;\r\n\t\t\t\tdim.h -= childSize.height;\r\n\t\t\t\tif(\"region\" == \"top\"){\r\n\t\t\t\t\tdim.t += childSize.height;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tbounds.top = dim.t + dim.h;\r\n\t\t\t\t}\r\n\t\t\t}else if(region == \"left\" || region == \"right\"){\r\n\t\t\t\tbounds.height = dim.h;\r\n\t\t\t\tdim.w -= childSize.width;\r\n\t\t\t\tif(pos == \"left\"){\r\n\t\t\t\t\tdim.l += childSize.width;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tbounds.left = dim.l + dim.w;\r\n\t\t\t\t}\r\n\t\t\t}else if(region == \"client\"){\r\n\t\t\t\tbounds.width = dim.w;\r\n\t\t\t\tbounds.height = dim.h;\r\n\t\t\t}\r\n\r\n\t\t\tgeom.relativeRect(item,bounds);\r\n\t\t});\r\n\r\n\r\n    };\r\n    \r\n    return dock;    \r\n\r\n});\r\n\ndefine('skylark-domx-layout/flow',[\r\n    \"skylark-langx/langx\",\r\n    \"skylark-utils-dom/query\",\r\n    \"./layouts\",\r\n], function(langx,$,layouts) {\r\n    // summary:\r\n    //  The flow layouter is a layout manager that adds items to the right sequentially from the left. \r\n    //  If it can not be added to the right side, it will be added back to the left one position to the left.\r\n    //  It does not change the size of the item added as a big feature of the flow layouter at all. \r\n    //  Therefore, it is placed as it is with the recommended size that the added item has or the explicitly specified size.\r\n\r\n    var flow = layouts.flow = function(container,options) {\r\n        var options = langx.mixin({\r\n            items : \".item\" // children element selector for item\r\n        },options)       \r\n        var $items = $(container).children(options.items);        \r\n        $items.css({\r\n            \"left\" : \"0px\",\r\n            \"top\" : \"0px\",\r\n            \"position\" : \"relative\",\r\n            \"display\" : \"inline-block\"\r\n        });\r\n    };\r\n    \r\n    return flow;\r\n    \r\n});\r\n\ndefine('skylark-domx-layout/grid',[\r\n    \"skylark-langx/langx\",\r\n    \"./layouts\"\r\n], function(langx,layouts) {\r\n    //TODO: \r\n    var grid = layouts.grid = function(container,options) {\r\n        throw new Error (\"This method is not implemented!\");\r\n    };\r\n\r\n    return grid;\r\n});\r\n\ndefine('skylark-domx-layout/masonry',[\r\n    \"skylark-langx/langx\",\r\n    \"skylark-utils-dom/finder\",\r\n    \"skylark-utils-dom/geom\",\r\n    \"skylark-utils-dom/styler\",\r\n    \"./layouts\"\r\n],function(langx,finder,geom,styler,layouts) {\r\n    // summary:\r\n    //  The masnory layouter is a masonry grid layout manager. \r\n   \r\n    var MasonryLayouter = langx.klass({\r\n        _measureColumns: function(children, bounds, container) {\r\n\r\n            var _ = this._,\r\n                calculated = _.calculated;\r\n            // if columnWidth is 0, default to outerWidth of first item\r\n            if (!_.columnWidth) {\r\n                var firstItem = children[0];\r\n                // columnWidth fall back to item of first element\r\n                calculated.columnWidth = firstItem && firstItem.bounds().extraWidth() || bounds.width;\r\n            } else {\r\n                calculated.columnWidth = _.columnWidth;\r\n            }\r\n\r\n            var columnWidth = calculated.columnWidth += _.gutter;\r\n\r\n            // calculate columns\r\n            var containerWidth = bounds.width + _.gutter;\r\n            var cols;\r\n            if (_.cols) {\r\n                cols = _.cols;\r\n            } else {\r\n                var cols = containerWidth / columnWidth;\r\n                // fix rounding errors, typically with gutters\r\n                var excess = columnWidth - containerWidth % columnWidth;\r\n                // if overshoot is less than a pixel, round up, otherwise floor it\r\n                var mathMethod = excess && excess < 1 ? 'round' : 'floor';\r\n                cols = Math[mathMethod](cols);\r\n            }\r\n            calculated.cols = Math.max(cols, 1);\r\n        },\r\n\r\n        _positionItem: function(item, x, y, isInstant) {\r\n            styler.css(item, {\r\n                position: \"absolute\" \r\n            });\r\n            if (isInstant) {\r\n                // if not transition, just set CSS\r\n                geom.relativePositionitem(item,{\r\n                    left : x,\r\n                    top : y\r\n                });\r\n            } else {\r\n                item[this._.animation] ? item[this._.animation](x, y) : item.moveto(x, y);\r\n            }\r\n        },\r\n        _getColGroup: function(colSpan) {\r\n            var _ = this._,\r\n                calculated = _.calculated;\r\n\r\n            if (colSpan < 2) {\r\n                // if brick spans only one column, use all the column Ys\r\n                return calculated.colYs;\r\n            }\r\n\r\n            var colGroup = [];\r\n            // how many different places could this brick fit horizontally\r\n            var groupCount = calculated.cols + 1 - colSpan;\r\n            // for each group potential horizontal position\r\n            for (var i = 0; i < groupCount; i++) {\r\n                // make an array of colY values for that one group\r\n                var groupColYs = calculated.colYs.slice(i, i + colSpan);\r\n                // and get the max value of the array\r\n                colGroup[i] = Math.max.apply(Math, groupColYs);\r\n            }\r\n            return colGroup;\r\n        },\r\n\r\n        _getItemLayoutPosition: function(item) {\r\n            var _ = this._,\r\n                calculated = _.calculated;\r\n\r\n            var itemSize = geom.marginSize(item);\r\n            // how many columns does this brick span\r\n            var remainder = itemSize.width % calculated.columnWidth;\r\n            var mathMethod = remainder && remainder < 1 ? 'round' : 'ceil';\r\n            // round if off by 1 pixel, otherwise use ceil\r\n            var colSpan = Math[mathMethod](itemSize.width / calculated.columnWidth);\r\n            colSpan = Math.min(colSpan, calculated.cols);\r\n\r\n            var colGroup = this._getColGroup(colSpan);\r\n            // get the minimum Y value from the columns\r\n            var minimumY = Math.min.apply(Math, colGroup);\r\n            var shortColIndex = colGroup.indexOf(minimumY);\r\n\r\n            // position the brick\r\n            var position = {\r\n                x: calculated.columnWidth * shortColIndex,\r\n                y: minimumY\r\n            };\r\n\r\n            // apply setHeight to necessary columns\r\n            var setHeight = minimumY + itemSize.height;\r\n            var setSpan = calculated.cols + 1 - colGroup.length;\r\n            for (var i = 0; i < setSpan; i++) {\r\n                calculated.colYs[shortColIndex + i] = setHeight;\r\n            }\r\n            return position;\r\n        },\r\n\r\n        \"_filterItems\": function(items) {\r\n            return items;\r\n        },\r\n\r\n        \"_resetLayout\": function(children, bounds, container) {\r\n            var _ = this._,\r\n                calculated = _.calculated;\r\n            this._measureColumns(children, bounds, container);\r\n\r\n            // reset column Y\r\n            calculated.colYs = [];\r\n            for (var i = 0; i < calculated.cols; i++) {\r\n                calculated.colYs.push(0);\r\n            }\r\n            calculated.maxY = 0;\r\n        },\r\n\r\n        \"_calcLayout\": function(children, bounds, container) {\r\n            this._resetLayout(children, bounds, container);\r\n            var calcInfos = [];\r\n\r\n            children.forEach(function(item) {\r\n                // get x/y object from method\r\n                var position = this._getItemLayoutPosition(item);\r\n                // enqueue\r\n                position.item = item;\r\n                //position.isInstant = isInstant || item.isLayoutInstant;\r\n                calcInfos.push(position);\r\n            }, this);\r\n            return calcInfos;\r\n        },\r\n\r\n        \"_postLayout\": function(calcInfos, container) {\r\n            var _ = this._;\r\n            if (_.autoFit) {\r\n                //var size = container.size;\r\n                //size.height = _.calculated.maxY;\r\n                //container.size = size;\r\n                //TODO: needs a better implementation\r\n                var calculated = _.calculated,\r\n                    maxY = Math.max.apply(Math, calculated.colYs);\r\n\r\n                container.domNode.style.height = maxY + \"px\";\r\n            }\r\n            calcInfos.forEach(function(calcInfo) {\r\n                this._positionItem(calcInfo.item, calcInfo.x, calcInfo.y, calcInfo.isInstant);\r\n            }, this);\r\n            //return children;\r\n        },\r\n\r\n        \"layout\": function() {\r\n            var _ = this._,\r\n                container = _.container,\r\n                children = finder.children(container,_.items),\r\n                bounds = geom.clientSize(container);\r\n                \r\n            var calcInfos = this._calcLayout(children,bounds,container);\r\n            this._postLayout(calcInfos,container);\r\n        },\r\n\r\n        \"init\": function(container,options) {\r\n            var _ = this._ =  langx.mixin ({\r\n                autoFit: true, //dd\r\n                columnWidth: 0, //dd\r\n                cols: 0, //d\r\n                gutter: 0, //\r\n                animation: \"moveto\", //dd\r\n                calculated: {\r\n                    colYs: null,\r\n                    columnWidth: 0,\r\n                    cols: 0\r\n                }\r\n            },options);\r\n            _.container = container;\r\n        }\r\n    });\r\n\r\n    \r\n    var masonry  = layouts.masonry = function(container,options) {\r\n        var layouter = new MasonryLayouter(container,options);\r\n        layouter.layout();\r\n    };\r\n\r\n    return masonry;\r\n});\r\n\ndefine('skylark-domx-layout/rows',[\r\n    \"skylark-langx/langx\",\r\n    \"skylark-utils-dom/query\",\r\n    \"./layouts\",\r\n], function(langx,$,layouts) {\r\n    // summary:\r\n    //  The bsgrid layouter is a layout manager that adds each child item to a separate row. \r\n\r\n    var rows = layouts.rows = function(container,options) {\r\n        var options = langx.mixin({\r\n            items : \".item\" // children element selector for item\r\n        },options)       \r\n        var $items = $(container).children(options.items);     \r\n        $items.css({\r\n            \"left\" : \"0px\",\r\n            \"top\" : \"0px\",\r\n            \"position\" : \"relative\",\r\n            \"display\" : \"list-item\"\r\n        });\r\n    };\r\n    \r\n    return rows;\r\n    \r\n});\r\n\ndefine('skylark-domx-layout/table',[\r\n    \"skylark-langx/langx\",\r\n    \"skylark-utils-dom/query\",\r\n    \"./layouts\",\r\n], function(langx,$,layouts) {\r\n\r\n    var table = layouts.table = function(container,options) {\r\n        var options = langx.mixin({\r\n            items : \".item\" // children element selector for item\r\n        },options)       \r\n        var $items = $(container).children(options.items);             \r\n\r\n        $items.css({\r\n            \"width\" : \"100%\",\r\n            \"display\" : \"table-row\"\r\n        });\r\n\r\n        $items.each(function(){\r\n            $(this).children().css({\r\n                \"display\" : \"table-cell\"\r\n            });\r\n        })\r\n    };\r\n    \r\n    return table;    \r\n\r\n});\r\n\ndefine('skylark-domx-layout/main',[\r\n    \"./layouts\",\r\n    \"./box\",\r\n    \"./bsgrid\",\r\n    \"./columns\",\r\n    \"./dock\",\r\n    \"./DockStyle\",\r\n    \"./flow\",\r\n    \"./grid\",\r\n    \"./masonry\",\r\n    \"./rows\",\r\n    \"./table\"\r\n], function(layouts) {\r\n\r\n\treturn layouts;\r\n});\ndefine('skylark-domx-layout', ['skylark-domx-layout/main'], function (main) { return main; });\n\n"]}