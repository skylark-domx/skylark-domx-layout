{"version":3,"sources":["skylark-utils-layout.js"],"names":["factory","globals","absolute","relative","base","stack","split","parts","pop","i","length","push","join","define","require","isAmd","amd","isCmd","exports","map","id","deps","dep","hasOwnProperty","Error","module","args","forEach","apply","window","skylarkjs","skylark","langx","layouts","maybeAddPx","name","value","cssNumber","dasherize","classRE","classReCache","RegExp","className","node","klass","svg","undefined","baseVal","defaultDisplay","nodeName","element","display","elementDisplay","document","createElement","body","appendChild","getComputedStyle","getPropertyValue","parentNode","removeChild","show","elm","styler","css","this","isInvisible","hide","addClass","names","cls","isString","re","match","property","arguments","computedStyle","style","camelCase","isArrayLike","props","call","prop","removeProperty","key","cssText","hasClass","removeClass","replace","trim","toggleClass","when","self","Array","prototype","every","column-count","columns","font-weight","line-height","opacity","z-index","zoom","mixin","autocssfix","cssHooks","ensureNodes","nodes","copyByClone","cloneNode","flatten","chkName","toLowerCase","after","placing","refNode","parent","nextSibling","insertBefore","append","before","contents","contentDocument","childNodes","tag","setAttribute","createFragment","html","singleTagRE","test","$1","fragmentRE","containers","container","innerHTML","dom","slice","clone","deep","isIE","nodeType","each","getAttribs","attr","setAttrib","getAttrib","contains","child","isChildOf","createTextNode","text","doc","empty","hasChildNodes","firstChild","isNumber","directly","documentElement","isDoc","DOCUMENT_NODE","ownerDoc","ownerDocument","ownerWindow","defaultView","parentWindow","prepend","offsetParent","rootNodeRE","overlay","params","overlayDiv","position","top","left","width","height","zIndex","remove","e","console","warn","oldNode","replaceChild","throb","timer","time","callback","throbber","textNode","clearTimeout","update","nodeValue","end","setTimeout","traverse","fn","len","reverse","children","wrapper","wrapperNode","wrapperInner","unwrap","noder","navigator","userAgent","div","table","tableBody","tableRow","tr","tbody","thead","tfoot","td","th","*","isWindow","normalizeCssEvent","css3EventPrefix","normalizeCssProperty","cssProps","normalizeStyleProperty","cssStyles","browser","vendorPrefix","vendorPrefixRE","css3PropPrefix","css3StylePrefix","vendorPrefixesRE","testEl","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","testStyle","matched","lowerFirst","cssPropName","location","support","velm","createInputPseudo","type","elem","createButtonPseudo","ancestor","selector","root","rootIsSelector","matches","ancestors","ret","local","filter","byId","getElementById","closest","descendants","querySelectorAll","matchError","query","descendant","querySelector","find","findAll","first","lastChild","last","previousSibling","nativeMatchesSelector","inArray","isPlainObject","check","adjacent","nextSiblings","previousSiblings","siblings","parser","rawMatch","separator","combinator","combinatorChildren","tagName","attributeKey","attributeOperator","attributeQuote","attributeValue","pseudoMarker","pseudoClass","pseudoQuote","pseudoClassQuotedValue","pseudoClassValue","separatorIndex","parsed","expressions","combinatorIndex","currentSeparator","reversed","reverseCombinator","currentParsed","reUnescape","classList","classes","regexp","escapeRegExp","pseudos","indexOf","attributes","operator","cache","reverseCache","parse","expression","isReversed","Slick","currentCache","raw","exp","j","cexp","from","to","string","rinputs","rheader","parseSelector","button","checked","idx","$","disabled","enabled","eq","even","focus","activeElement","href","tabindex","gt","has","sel","header","hidden","input","lt","not","odd","selected","visible","offsetWidth","item","isArrayFilter","radio","checkbox","file","password","image","submit","reset","divide","cond","nativeSelector","customPseudos","JSON","stringify","part","toUpperCase","arrayFilte","pseudo","getAttribute","hasAttribute","currentExpression","simpleExpCounter","filterSingle","matchs","uniq","concat","combine","bit","node1","op","prev","next","divided","single","currentBit","founds","found","currentItems","finder","removeAttribute","aria","attrName","_attributeData","store","deserializeValue","_store","confirm","_getData","camelName","capitalRE","_setData","data","dataAttrName","cleanData","removeData","pluck","propMap","removeAttr","removeProp","txt","textContent","val","multiple","selectedOptions","option","datax","readonly","for","class","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","compatible","event","source","isDefaultPrevented","eventMethods","predicate","sourceMethod","returnTrue","returnFalse","segs","ns","sort","createProxy","src","proxy","originalEvent","ignoreProperties","off","events","$this","isFunction","handler","findHandler","unregister","on","one","ready","register","stop","all","keyCode","preventDefault","stopPropagation","trigger","evented","Event","createEvent","_args","dispatchEvent","readyRE","readyState","defer","addEventListener","shortcuts","registry","run","shortcut","n","metaKey","ctrlKey","ctrl","alt","altKey","shift","shiftKey","charCode","target","add","pattern","shortcutKeys","shortcutKey","setting","charCodeAt","keyCodeLookup","regKey","eventer","uid","stopImmediatePropagation","getEventCtor","NativeEvents","EventCtors","compositionstart","compositionend","compositionupdate","beforecopy","beforecut","beforepaste","copy","cut","paste","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","abort","change","error","selectionchange","blur","focusin","focusout","keydown","keypress","keyup","message","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","mouseenter","mouseleave","textInput","touchstart","touchmove","touchend","load","resize","select","scroll","unload","wheel","bubbles","cancelable","namespace","ctor","safeMixin","specialEvents","focusinSupported","hover","realEvent","handlers","EventBindings","init","_target","_event","_bindings","options","bindings","binding","_listener","domEvt","isDefined","isImmediatePropagationStopped","currentTarget","liveFired","related","relatedTarget","result","matcherFor","matcher","removing","removeEventListener","EventsHandler","_handler","specialEvent","bindingEvent","bindType","bindEventName","listener","backspace","comma","delete","down","enter","escape","home","page_down","page_up","period","right","space","tab","up","create","keys","special","scrollbarWidth","cachedScrollbarWidth","w1","w2","innerDiv","clientWidth","borderExtents","s","px","borderLeftWidth","borderTopWidth","borderRightWidth","bottom","borderBottomWidth","boundingPosition","coords","getBoundingClientRect","parentOffset","mex","marginExtents","pbex","relativePosition","boundingRect","size","clientHeight","clientSize","dimension","isBorderBox","bex","pex","paddingExtents","contentRect","cs","getDocumentSize","max","Math","scrollWidth","scrollHeight","offsetHeight","marginLeft","marginTop","marginRight","marginBottom","marginRect","obj","relativeRect","me","paddingLeft","paddingTop","paddingRight","paddingBottom","pagePosition","pageXOffset","pageYOffset","pageRect","round","offset","scrollIntoView","align","getOffset","rootElm","x","y","offsetLeft","offsetTop","parentWidth","parentHeight","parentElm","pos","scrollLeft","scrollTop","hasScrollLeft","scrollTo","scrollY","hasScrollTop","scrollX","innerWidth","innerHeight","isDocument","geom","toPixel","animate","properties","duration","ease","delay","endEvent","wrappedCallback","cssValues","cssProperties","transforms","that","fired","easing","complete","fx","speeds","normal","eace","animationName","animationDuration","animationTiming","animationEnd","supportedTransforms","transitionEnd","transform","transitionProperty","transitionDuration","transitionDelay","transitionTiming","cssReset","debounce","clientLeft","scrollToTop","speed","scale","scrollFrom","parseInt","runEvery","freq","interval","setInterval","clearInterval","toggle","fadeTo","fadeIn","fadeOut","fadeToggle","ceasing","allback","slideDown","visibility","overflow","slideUp","queue","slideToggle","animationDelay","fast","slow","wrapper_map","func","context","wrapper_selector","wrapper_selector_until","util","wrapper_every_act","wrapper_every_act_firstArgFunc","oldValueFunc","arg1","funcArg","wrapper_some_chk","some","wrapper_name_value","newValue","wrapper_value","isQ","rquickExpr","isArray","isObject","NodeList","compact","klassName","charAt","exec","wrapper_node_operation","argType","arg","object","el","get","toArray","is","excludes","parents","parentsUntil","pushStack","elms","prevObject","replaceWith","newContent","wrap","structure","index","wrapAll","wrappingElement","wrapInner","prevAll","nextAll","detach","fnOver","fnOut","Dimension","m","margin","cb","mb","appendTo","prependTo","insertAfter","replaceAll","original","elems","insert","toogle","andSelf","addBack","place","addContent","content","template","substitute","replaceClass","newClass","oldClass","Orientation","layout","horz","vert","box","items","wspacing","hspacing","orientation","$items","bsgrid","DockStyle","none","client","dock","dim","l","t","w","h","region","childSize","bounds","flow","grid","MasonryLayouter","_measureColumns","_","calculated","columnWidth","firstItem","extraWidth","cols","gutter","containerWidth","excess","mathMethod","_positionItem","isInstant","relativePositionitem","animation","moveto","_getColGroup","colSpan","colYs","colGroup","groupCount","groupColYs","_getItemLayoutPosition","itemSize","marginSize","remainder","min","minimumY","shortColIndex","setHeight","setSpan","_filterItems","_resetLayout","maxY","_calcLayout","calcInfos","_postLayout","autoFit","domNode","calcInfo","masonry","layouter","rows","main"],"mappings":"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","file":"../skylark-utils-layout.js","sourcesContent":["define('skylark-utils/skylark',[\"skylark-langx/skylark\"], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylark-utils/langx',[\r\n    \"skylark-langx/langx\"\r\n], function(langx) {\r\n    return langx;\r\n});\r\n\ndefine('skylark-utils-layout/layouts',[\r\n    \"skylark-utils/skylark\",\r\n    \"skylark-utils/langx\"\r\n], function(skylark, langx) {\r\n\t\r\n\tvar layouts = skylark.layouts = {\r\n\t};\r\n\r\n\r\n\treturn layouts;\r\n});\ndefine('skylark-utils/styler',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark, langx) {\r\n    var every = Array.prototype.every,\r\n        forEach = Array.prototype.forEach,\r\n        camelCase = langx.camelCase,\r\n        dasherize = langx.dasherize;\r\n\r\n    function maybeAddPx(name, value) {\r\n        return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\r\n    }\r\n\r\n    var cssNumber = {\r\n            'column-count': 1,\r\n            'columns': 1,\r\n            'font-weight': 1,\r\n            'line-height': 1,\r\n            'opacity': 1,\r\n            'z-index': 1,\r\n            'zoom': 1\r\n        },\r\n        classReCache = {\r\n\r\n        };\r\n\r\n    function classRE(name) {\r\n        return name in classReCache ?\r\n            classReCache[name] : (classReCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'));\r\n    }\r\n\r\n    // access className property while respecting SVGAnimatedString\r\n    function className(node, value) {\r\n        var klass = node.className || '',\r\n            svg = klass && klass.baseVal !== undefined\r\n\r\n        if (value === undefined) return svg ? klass.baseVal : klass\r\n        svg ? (klass.baseVal = value) : (node.className = value)\r\n    }\r\n\r\n\r\n    var elementDisplay = {};\r\n\r\n    function defaultDisplay(nodeName) {\r\n        var element, display\r\n        if (!elementDisplay[nodeName]) {\r\n            element = document.createElement(nodeName)\r\n            document.body.appendChild(element)\r\n            display = getComputedStyle(element, '').getPropertyValue(\"display\")\r\n            element.parentNode.removeChild(element)\r\n            display == \"none\" && (display = \"block\")\r\n            elementDisplay[nodeName] = display\r\n        }\r\n        return elementDisplay[nodeName]\r\n    }\r\n\r\n    function show(elm) {\r\n        styler.css(elm, \"display\", \"\");\r\n        if (styler.css(elm, \"display\") == \"none\") {\r\n            styler.css(elm, \"display\", defaultDisplay(elm.nodeName));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isInvisible(elm) {\r\n        return styler.css(elm, \"display\") == \"none\" || styler.css(elm, \"opacity\") == 0;\r\n    }\r\n\r\n    function hide(elm) {\r\n        styler.css(elm, \"display\", \"none\");\r\n        return this;\r\n    }\r\n\r\n    function addClass(elm, name) {\r\n        if (!name) return this\r\n        var cls = className(elm),\r\n            names;\r\n        if (langx.isString(name)) {\r\n            names = name.split(/\\s+/g);\r\n        } else {\r\n            names = name;\r\n        }\r\n        names.forEach(function(klass) {\r\n            var re = classRE(klass);\r\n            if (!cls.match(re)) {\r\n                cls += (cls ? \" \" : \"\") + klass;\r\n            }\r\n        });\r\n\r\n        className(elm, cls);\r\n\r\n        return this;\r\n    }\r\n\r\n    function css(elm, property, value) {\r\n        if (arguments.length < 3) {\r\n            var computedStyle,\r\n                computedStyle = getComputedStyle(elm, '')\r\n            if (langx.isString(property)) {\r\n                return elm.style[camelCase(property)] || computedStyle.getPropertyValue(property)\r\n            } else if (langx.isArrayLike(property)) {\r\n                var props = {}\r\n                forEach.call(property, function(prop) {\r\n                    props[prop] = (elm.style[camelCase(prop)] || computedStyle.getPropertyValue(prop))\r\n                })\r\n                return props\r\n            }\r\n        }\r\n\r\n        var css = '';\r\n        if (typeof(property) == 'string') {\r\n            if (!value && value !== 0) {\r\n                elm.style.removeProperty(dasherize(property));\r\n            } else {\r\n                css = dasherize(property) + \":\" + maybeAddPx(property, value)\r\n            }\r\n        } else {\r\n            for (key in property) {\r\n                if (property[key] === undefined) {\r\n                    continue;\r\n                }\r\n                if (!property[key] && property[key] !== 0) {\r\n                    elm.style.removeProperty(dasherize(key));\r\n                } else {\r\n                    css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\r\n                }\r\n            }\r\n        }\r\n\r\n        elm.style.cssText += ';' + css;\r\n        return this;\r\n    }\r\n\r\n\r\n    function hasClass(elm, name) {\r\n        var re = classRE(name);\r\n        return elm.className && elm.className.match(re);\r\n    }\r\n\r\n    function removeClass(elm, name) {\r\n        if (name) {\r\n            var cls = className(elm),\r\n                names;\r\n\r\n            if (langx.isString(name)) {\r\n                names = name.split(/\\s+/g);\r\n            } else {\r\n                names = name;\r\n            }\r\n\r\n            names.forEach(function(klass) {\r\n                var re = classRE(klass);\r\n                if (cls.match(re)) {\r\n                    cls = cls.replace(re, \" \");\r\n                }\r\n            });\r\n\r\n            className(elm, cls.trim());\r\n        } else {\r\n            className(elm,\"\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function toggleClass(elm, name, when) {\r\n        var self = this;\r\n        name.split(/\\s+/g).forEach(function(klass) {\r\n            if (when === undefined) {\r\n                when = !self.hasClass(elm, klass);\r\n            }\r\n            if (when) {\r\n                self.addClass(elm, klass);\r\n            } else {\r\n                self.removeClass(elm, klass)\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    var styler = function() {\r\n        return styler;\r\n    };\r\n\r\n    langx.mixin(styler, {\r\n        autocssfix: false,\r\n        cssHooks : {\r\n\r\n        },\r\n        \r\n        addClass: addClass,\r\n        className: className,\r\n        css: css,\r\n        hasClass: hasClass,\r\n        hide: hide,\r\n        isInvisible: isInvisible,\r\n        removeClass: removeClass,\r\n        show: show,\r\n        toggleClass: toggleClass\r\n    });\r\n\r\n    return skylark.styler = styler;\r\n});\r\n\ndefine('skylark-utils/noder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./styler\"\r\n], function(skylark, langx, styler) {\r\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\r\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        rootNodeRE = /^(?:body|html)$/i,\r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    function ensureNodes(nodes, copyByClone) {\r\n        if (!langx.isArrayLike(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return langx.flatten(nodes);\r\n    }\r\n\r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\r\n    function after(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function append(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function before(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\r\n    function createElement(tag, props,parent) {\r\n        var node = document.createElement(tag);\r\n        if (props) {\r\n            for (var name in props) {\r\n                node.setAttribute(name, props[name]);\r\n            }\r\n        }\r\n        if (parent) {\r\n            append(parent,node);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        html = langx.trim(html);\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        }\r\n\r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = \"\" + html;\r\n        dom = slice.call(container.childNodes);\r\n\r\n        dom.forEach(function(node) {\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n    function clone(node, deep) {\r\n        var self = this,\r\n            clone;\r\n\r\n        // TODO: Add feature detection here in the future\r\n        if (!isIE || node.nodeType !== 1 || deep) {\r\n            return node.cloneNode(deep);\r\n        }\r\n\r\n        // Make a HTML5 safe shallow copy\r\n        if (!deep) {\r\n            clone = document.createElement(node.nodeName);\r\n\r\n            // Copy attribs\r\n            each(self.getAttribs(node), function(attr) {\r\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\r\n            });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            this.empty(node);\r\n            html = html || \"\";\r\n            if (langx.isString(html) || langx.isNumber(html)) {\r\n                node.innerHTML = html;\r\n            } else if (langx.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n        }\r\n    }\r\n\r\n    function isChildOf(node, parent,directly) {\r\n        if (directly) {\r\n            return node.parentNode === parent;\r\n        }\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    function isDoc(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n    function ownerWindow(elm) {\r\n        var doc = ownerDoc(elm);\r\n        return  doc.defaultView || doc.parentWindow;\r\n    } \r\n\r\n\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && styler.css(parent, \"position\") == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n    function overlay(elm, params) {\r\n        var overlayDiv = createElement(\"div\", params);\r\n        styler.css(overlayDiv, {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            zIndex: 0x7FFFFFFF,\r\n            opacity: 0.7\r\n        });\r\n        elm.appendChild(overlayDiv);\r\n        return overlayDiv;\r\n\r\n    }\r\n\r\n\r\n\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            try {\r\n               node.parentNode.removeChild(node);\r\n            } catch (e) {\r\n                console.warn(\"The node is already removed\",e);\r\n            }\r\n         }\r\n        return this;\r\n    }\r\n\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n    function throb(elm, params) {\r\n        params = params || {};\r\n        var self = this,\r\n            text = params.text,\r\n            style = params.style,\r\n            time = params.time,\r\n            callback = params.callback,\r\n            timer,\r\n            throbber = this.createElement(\"div\", {\r\n                className: params.className || \"throbber\",\r\n                style: style\r\n            }),\r\n            _overlay = overlay(throbber, {\r\n                className: 'overlay fade'\r\n            }),\r\n            throb = this.createElement(\"div\", {\r\n                className: \"throb\"\r\n            }),\r\n            textNode = this.createTextNode(text || \"\"),\r\n            remove = function() {\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                if (throbber) {\r\n                    self.remove(throbber);\r\n                    throbber = null;\r\n                }\r\n            },\r\n            update = function(params) {\r\n                if (params && params.text && throbber) {\r\n                    textNode.nodeValue = params.text;\r\n                }\r\n            };\r\n        throb.appendChild(textNode);\r\n        throbber.appendChild(throb);\r\n        elm.appendChild(throbber);\r\n        var end = function() {\r\n            remove();\r\n            if (callback) callback();\r\n        };\r\n        if (time) {\r\n            timer = setTimeout(end, time);\r\n        }\r\n\r\n        return {\r\n            remove: remove,\r\n            update: update\r\n        };\r\n    }\r\n\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper(node, wrapperNode) {\r\n        if (langx.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (this.isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    langx.mixin(noder, {\r\n        body : function() {\r\n            return document.body;\r\n        },\r\n\r\n        clone: clone,\r\n        contents: contents,\r\n\r\n        createElement: createElement,\r\n\r\n        createFragment: createFragment,\r\n\r\n        contains: contains,\r\n\r\n        createTextNode: createTextNode,\r\n\r\n        doc: doc,\r\n\r\n        empty: empty,\r\n\r\n        html: html,\r\n\r\n        isChildOf: isChildOf,\r\n\r\n        isDoc: isDoc,\r\n\r\n        isWindow : langx.isWindow,\r\n\r\n        offsetParent : offsetParent,\r\n        \r\n        ownerDoc: ownerDoc,\r\n\r\n        ownerWindow : ownerWindow,\r\n\r\n        after: after,\r\n\r\n        before: before,\r\n\r\n        prepend: prepend,\r\n\r\n        append: append,\r\n\r\n        remove: remove,\r\n\r\n        replace: replace,\r\n\r\n        throb: throb,\r\n\r\n        traverse: traverse,\r\n\r\n        reverse: reverse,\r\n\r\n        wrapper: wrapper,\r\n\r\n        wrapperInner: wrapperInner,\r\n\r\n        unwrap: unwrap\r\n    });\r\n\r\n    return skylark.noder = noder;\r\n});\r\n\ndefine('skylark-utils/browser',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark,langx) {\r\n    var checkedCssProperties = {\r\n        \"transitionproperty\": \"TransitionProperty\",\r\n    };\r\n\r\n    var css3PropPrefix = \"\",\r\n        css3StylePrefix = \"\",\r\n        css3EventPrefix = \"\",\r\n\r\n        cssStyles = {},\r\n        cssProps = {},\r\n\r\n        vendorPrefix,\r\n        vendorPrefixRE,\r\n        vendorPrefixesRE = /^(Webkit|webkit|O|Moz|moz|ms)(.*)$/,\r\n\r\n        document = window.document,\r\n        testEl = document.createElement(\"div\"),\r\n\r\n        matchesSelector = testEl.webkitMatchesSelector ||\r\n        testEl.mozMatchesSelector ||\r\n        testEl.oMatchesSelector ||\r\n        testEl.matchesSelector,\r\n\r\n        testStyle = testEl.style;\r\n\r\n    for (var name in testStyle) {\r\n        var matched = name.match(vendorPrefixRE || vendorPrefixesRE);\r\n        if (matched) {\r\n            if (!vendorPrefixRE) {\r\n                vendorPrefix = matched[1];\r\n                vendorPrefixRE = new RegExp(\"^(\" + vendorPrefix + \")(.*)$\");\r\n\r\n                css3StylePrefix = vendorPrefix;\r\n                css3PropPrefix = '-' + vendorPrefix.toLowerCase() + '-';\r\n                css3EventPrefix = vendorPrefix.toLowerCase();\r\n            }\r\n\r\n            cssStyles[langx.lowerFirst(matched[2])] = name;\r\n            var cssPropName = langx.dasherize(matched[2]);\r\n            cssProps[cssPropName] = css3PropPrefix + cssPropName;\r\n\r\n        }\r\n    }\r\n\r\n\r\n    function normalizeCssEvent(name) {\r\n        return css3EventPrefix ? css3EventPrefix + name : name.toLowerCase();\r\n    }\r\n\r\n    function normalizeCssProperty(name) {\r\n        return cssProps[name] || name;\r\n    }\r\n\r\n    function normalizeStyleProperty(name) {\r\n        return cssStyles[name] || name;\r\n    }\r\n\r\n    function browser() {\r\n        return browser;\r\n    }\r\n\r\n    langx.mixin(browser, {\r\n        css3PropPrefix: css3PropPrefix,\r\n\r\n        normalizeStyleProperty: normalizeStyleProperty,\r\n\r\n        normalizeCssProperty: normalizeCssProperty,\r\n\r\n        normalizeCssEvent: normalizeCssEvent,\r\n\r\n        matchesSelector: matchesSelector,\r\n\r\n        location: function() {\r\n            return window.location;\r\n        },\r\n\r\n        support : {}\r\n\r\n    });\r\n\r\n    testEl = null;\r\n\r\n    return skylark.browser = browser;\r\n});\r\n\ndefine('skylark-utils/finder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./noder\"\r\n], function(skylark, langx, browser, noder, velm) {\r\n    var local = {},\r\n        filter = Array.prototype.filter,\r\n        slice = Array.prototype.slice,\r\n        nativeMatchesSelector = browser.matchesSelector;\r\n\r\n    /*\r\n    ---\r\n    name: Slick.Parser\r\n    description: Standalone CSS3 Selector parser\r\n    provides: Slick.Parser\r\n    ...\r\n    */\r\n    ;\r\n    (function() {\r\n\r\n        var parsed,\r\n            separatorIndex,\r\n            combinatorIndex,\r\n            reversed,\r\n            cache = {},\r\n            reverseCache = {},\r\n            reUnescape = /\\\\/g;\r\n\r\n        var parse = function(expression, isReversed) {\r\n            if (expression == null) return null;\r\n            if (expression.Slick === true) return expression;\r\n            expression = ('' + expression).replace(/^\\s+|\\s+$/g, '');\r\n            reversed = !!isReversed;\r\n            var currentCache = (reversed) ? reverseCache : cache;\r\n            if (currentCache[expression]) return currentCache[expression];\r\n            parsed = {\r\n                Slick: true,\r\n                expressions: [],\r\n                raw: expression,\r\n                reverse: function() {\r\n                    return parse(this.raw, true);\r\n                }\r\n            };\r\n            separatorIndex = -1;\r\n            while (expression != (expression = expression.replace(regexp, parser)));\r\n            parsed.length = parsed.expressions.length;\r\n            return currentCache[parsed.raw] = (reversed) ? reverse(parsed) : parsed;\r\n        };\r\n\r\n        var reverseCombinator = function(combinator) {\r\n            if (combinator === '!') return ' ';\r\n            else if (combinator === ' ') return '!';\r\n            else if ((/^!/).test(combinator)) return combinator.replace(/^!/, '');\r\n            else return '!' + combinator;\r\n        };\r\n\r\n        var reverse = function(expression) {\r\n            var expressions = expression.expressions;\r\n            for (var i = 0; i < expressions.length; i++) {\r\n                var exp = expressions[i];\r\n                var last = {\r\n                    parts: [],\r\n                    tag: '*',\r\n                    combinator: reverseCombinator(exp[0].combinator)\r\n                };\r\n\r\n                for (var j = 0; j < exp.length; j++) {\r\n                    var cexp = exp[j];\r\n                    if (!cexp.reverseCombinator) cexp.reverseCombinator = ' ';\r\n                    cexp.combinator = cexp.reverseCombinator;\r\n                    delete cexp.reverseCombinator;\r\n                }\r\n\r\n                exp.reverse().push(last);\r\n            }\r\n            return expression;\r\n        };\r\n\r\n        var escapeRegExp = (function() {\r\n            // Credit: XRegExp 0.6.1 (c) 2007-2008 Steven Levithan <http://stevenlevithan.com/regex/xregexp/> MIT License\r\n            var from = /(?=[\\-\\[\\]{}()*+?.\\\\\\^$|,#\\s])/g,\r\n                to = '\\\\';\r\n            return function(string) {\r\n                return string.replace(from, to)\r\n            }\r\n        }())\r\n\r\n        var regexp = new RegExp(\r\n            \"^(?:\\\\s*(,)\\\\s*|\\\\s*(<combinator>+)\\\\s*|(\\\\s+)|(<unicode>+|\\\\*)|\\\\#(<unicode>+)|\\\\.(<unicode>+)|\\\\[\\\\s*(<unicode1>+)(?:\\\\s*([*^$!~|]?=)(?:\\\\s*(?:([\\\"']?)(.*?)\\\\9)))?\\\\s*\\\\](?!\\\\])|(:+)(<unicode>+)(?:\\\\((?:(?:([\\\"'])([^\\\\13]*)\\\\13)|((?:\\\\([^)]+\\\\)|[^()]*)+))\\\\))?)\"\r\n            .replace(/<combinator>/, '[' + escapeRegExp(\">+~`!@$%^&={}\\\\;</\") + ']')\r\n            .replace(/<unicode>/g, '(?:[\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n            .replace(/<unicode1>/g, '(?:[:\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n        );\r\n\r\n        function parser(\r\n            rawMatch,\r\n\r\n            separator,\r\n            combinator,\r\n            combinatorChildren,\r\n\r\n            tagName,\r\n            id,\r\n            className,\r\n\r\n            attributeKey,\r\n            attributeOperator,\r\n            attributeQuote,\r\n            attributeValue,\r\n\r\n            pseudoMarker,\r\n            pseudoClass,\r\n            pseudoQuote,\r\n            pseudoClassQuotedValue,\r\n            pseudoClassValue\r\n        ) {\r\n            if (separator || separatorIndex === -1) {\r\n                parsed.expressions[++separatorIndex] = [];\r\n                combinatorIndex = -1;\r\n                if (separator) return '';\r\n            }\r\n\r\n            if (combinator || combinatorChildren || combinatorIndex === -1) {\r\n                combinator = combinator || ' ';\r\n                var currentSeparator = parsed.expressions[separatorIndex];\r\n                if (reversed && currentSeparator[combinatorIndex])\r\n                    currentSeparator[combinatorIndex].reverseCombinator = reverseCombinator(combinator);\r\n                currentSeparator[++combinatorIndex] = {\r\n                    combinator: combinator,\r\n                    tag: '*'\r\n                };\r\n            }\r\n\r\n            var currentParsed = parsed.expressions[separatorIndex][combinatorIndex];\r\n\r\n            if (tagName) {\r\n                currentParsed.tag = tagName.replace(reUnescape, '');\r\n\r\n            } else if (id) {\r\n                currentParsed.id = id.replace(reUnescape, '');\r\n\r\n            } else if (className) {\r\n                className = className.replace(reUnescape, '');\r\n\r\n                if (!currentParsed.classList) currentParsed.classList = [];\r\n                if (!currentParsed.classes) currentParsed.classes = [];\r\n                currentParsed.classList.push(className);\r\n                currentParsed.classes.push({\r\n                    value: className,\r\n                    regexp: new RegExp('(^|\\\\s)' + escapeRegExp(className) + '(\\\\s|$)')\r\n                });\r\n\r\n            } else if (pseudoClass) {\r\n                pseudoClassValue = pseudoClassValue || pseudoClassQuotedValue;\r\n                pseudoClassValue = pseudoClassValue ? pseudoClassValue.replace(reUnescape, '') : null;\r\n\r\n                if (!currentParsed.pseudos) currentParsed.pseudos = [];\r\n                currentParsed.pseudos.push({\r\n                    key: pseudoClass.replace(reUnescape, ''),\r\n                    value: pseudoClassValue,\r\n                    type: pseudoMarker.length == 1 ? 'class' : 'element'\r\n                });\r\n\r\n            } else if (attributeKey) {\r\n                attributeKey = attributeKey.replace(reUnescape, '');\r\n                attributeValue = (attributeValue || '').replace(reUnescape, '');\r\n\r\n                var test, regexp;\r\n\r\n                switch (attributeOperator) {\r\n                    case '^=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue));\r\n                        break;\r\n                    case '$=':\r\n                        regexp = new RegExp(escapeRegExp(attributeValue) + '$');\r\n                        break;\r\n                    case '~=':\r\n                        regexp = new RegExp('(^|\\\\s)' + escapeRegExp(attributeValue) + '(\\\\s|$)');\r\n                        break;\r\n                    case '|=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue) + '(-|$)');\r\n                        break;\r\n                    case '=':\r\n                        test = function(value) {\r\n                            return attributeValue == value;\r\n                        };\r\n                        break;\r\n                    case '*=':\r\n                        test = function(value) {\r\n                            return value && value.indexOf(attributeValue) > -1;\r\n                        };\r\n                        break;\r\n                    case '!=':\r\n                        test = function(value) {\r\n                            return attributeValue != value;\r\n                        };\r\n                        break;\r\n                    default:\r\n                        test = function(value) {\r\n                            return !!value;\r\n                        };\r\n                }\r\n\r\n                if (attributeValue == '' && (/^[*$^]=$/).test(attributeOperator)) test = function() {\r\n                    return false;\r\n                };\r\n\r\n                if (!test) test = function(value) {\r\n                    return value && regexp.test(value);\r\n                };\r\n\r\n                if (!currentParsed.attributes) currentParsed.attributes = [];\r\n                currentParsed.attributes.push({\r\n                    key: attributeKey,\r\n                    operator: attributeOperator,\r\n                    value: attributeValue,\r\n                    test: test\r\n                });\r\n\r\n            }\r\n\r\n            return '';\r\n        };\r\n\r\n        // Slick NS\r\n\r\n        var Slick = (this.Slick || {});\r\n\r\n        Slick.parse = function(expression) {\r\n            return parse(expression);\r\n        };\r\n\r\n        Slick.escapeRegExp = escapeRegExp;\r\n\r\n        if (!this.Slick) this.Slick = Slick;\r\n\r\n    }).apply(local);\r\n\r\n\r\n    var simpleClassSelectorRE = /^\\.([\\w-]*)$/,\r\n        simpleIdSelectorRE = /^#([\\w-]*)$/,\r\n        rinputs = /^(?:input|select|textarea|button)$/i,\r\n        rheader = /^h\\d$/i,\r\n        slice = Array.prototype.slice;\r\n\r\n\r\n    local.parseSelector = local.Slick.parse;\r\n\r\n\r\n    var pseudos = local.pseudos = {\r\n        // custom pseudos\r\n        \"button\": function( elem ) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === \"button\" || name === \"button\";\r\n        },\r\n\r\n        'checked': function(elm) {\r\n            return !!elm.checked;\r\n        },\r\n\r\n        'contains': function(elm, idx, nodes, text) {\r\n            if ($(this).text().indexOf(text) > -1) return this\r\n        },\r\n\r\n        'disabled': function(elm) {\r\n            return !!elm.disabled;\r\n        },\r\n\r\n        'enabled': function(elm) {\r\n            return !elm.disabled;\r\n        },\r\n\r\n        'eq': function(elm, idx, nodes, value) {\r\n            return (idx == value);\r\n        },\r\n\r\n        'even' : function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 0;\r\n        },\r\n\r\n        'focus': function(elm) {\r\n            return document.activeElement === elm && (elm.href || elm.type || elm.tabindex);\r\n        },\r\n\r\n        'first': function(elm, idx) {\r\n            return (idx === 0);\r\n        },\r\n\r\n        'gt': function(elm, idx, nodes, value) {\r\n            return (idx > value);\r\n        },\r\n\r\n        'has': function(elm, idx, nodes, sel) {\r\n            return find(elm, sel);\r\n        },\r\n\r\n        // Element/input types\r\n        \"header\": function( elem ) {\r\n            return rheader.test( elem.nodeName );\r\n        },\r\n\r\n        'hidden': function(elm) {\r\n            return !local.pseudos[\"visible\"](elm);\r\n        },\r\n\r\n        \"input\": function( elem ) {\r\n            return rinputs.test( elem.nodeName );\r\n        },\r\n\r\n        'last': function(elm, idx, nodes) {\r\n            return (idx === nodes.length - 1);\r\n        },\r\n\r\n        'lt': function(elm, idx, nodes, value) {\r\n            return (idx < value);\r\n        },\r\n\r\n        'not': function(elm, idx, nodes, sel) {\r\n            return !matches(elm, sel);\r\n        },\r\n\r\n        'odd' : function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 1;\r\n        },\r\n\r\n        'parent': function(elm) {\r\n            return !!elm.parentNode;\r\n        },\r\n\r\n        'selected': function(elm) {\r\n            return !!elm.selected;\r\n        },\r\n\r\n        'text': function(elm){\r\n            return elm.type === \"text\";\r\n        },\r\n\r\n        'visible': function(elm) {\r\n            return elm.offsetWidth && elm.offsetWidth\r\n        }\r\n    };\r\n\r\n    [\"first\",\"eq\",\"last\"].forEach(function(item){\r\n        pseudos[item].isArrayFilter = true;\r\n    });\r\n\r\n\r\n\r\n    pseudos[\"nth\"] = pseudos[\"eq\"];\r\n\r\n    function createInputPseudo( type ) {\r\n        return function( elem ) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === type;\r\n        };\r\n    }\r\n\r\n    function createButtonPseudo( type ) {\r\n        return function( elem ) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return (name === \"input\" || name === \"button\") && elem.type === type;\r\n        };\r\n    }\r\n\r\n    // Add button/input type pseudos\r\n    for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\r\n        pseudos[ i ] = createInputPseudo( i );\r\n    }\r\n    for ( i in { submit: true, reset: true } ) {\r\n        pseudos[ i ] = createButtonPseudo( i );\r\n    }\r\n\r\n\r\n    local.divide = function(cond) {\r\n        var nativeSelector = \"\",\r\n            customPseudos = [],\r\n            tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos;\r\n\r\n\r\n        if (id = cond.id) {\r\n            nativeSelector += (\"#\" + id);\r\n        }\r\n        if (classes = cond.classes) {\r\n            for (var i = classes.length; i--;) {\r\n                nativeSelector += (\".\" + classes[i].value);\r\n            }\r\n        }\r\n        if (attributes = cond.attributes) {\r\n            for (var i = 0; i < attributes.length; i++) {\r\n                if (attributes[i].operator) {\r\n                    nativeSelector += (\"[\" + attributes[i].key + attributes[i].operator + JSON.stringify(attributes[i].value)  +\"]\");\r\n                } else {\r\n                    nativeSelector += (\"[\" + attributes[i].key + \"]\");\r\n                }\r\n            }\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (this.pseudos[part.key]) {\r\n                    customPseudos.push(part);\r\n                } else {\r\n                    if (part.value !== undefined) {\r\n                        nativeSelector += (\":\" + part.key + \"(\" + JSON.stringify(part))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (tag = cond.tag) {\r\n            nativeSelector = tag.toUpperCase() + nativeSelector;\r\n        }\r\n\r\n        if (!nativeSelector) {\r\n            nativeSelector = \"*\";\r\n        }\r\n\r\n        return {\r\n            nativeSelector: nativeSelector,\r\n            customPseudos: customPseudos\r\n        }\r\n\r\n    };\r\n\r\n    local.check = function(node, cond, idx, nodes,arrayFilte) {\r\n        var tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos,\r\n\r\n            i, part, cls, pseudo;\r\n\r\n        if (!arrayFilte) {\r\n            if (tag = cond.tag) {\r\n                var nodeName = node.nodeName.toUpperCase();\r\n                if (tag == '*') {\r\n                    if (nodeName < '@') return false; // Fix for comment nodes and closed nodes\r\n                } else {\r\n                    if (nodeName != (tag || \"\").toUpperCase()) return false;\r\n                }\r\n            }\r\n\r\n            if (id = cond.id) {\r\n                if (node.getAttribute('id') != id) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n\r\n            if (classes = cond.classes) {\r\n                for (i = classes.length; i--;) {\r\n                    cls = node.getAttribute('class');\r\n                    if (!(cls && classes[i].regexp.test(cls))) return false;\r\n                }\r\n            }\r\n\r\n            if (attributes = cond.attributes) {\r\n                 for (i = attributes.length; i--;) {\r\n                    part = attributes[i];\r\n                    if (part.operator ? !part.test(node.getAttribute(part.key)) : !node.hasAttribute(part.key)) return false;\r\n                }\r\n            }\r\n\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (pseudo = this.pseudos[part.key]) {\r\n                    if ((arrayFilte && pseudo.isArrayFilter) || (!arrayFilte && !pseudo.isArrayFilter)) {\r\n                        if (!pseudo(node, idx, nodes, part.value)) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (!arrayFilte && !nativeMatchesSelector.call(node, part.key)) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    local.match = function(node, selector) {\r\n\r\n        var parsed ;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            parsed = selector;            \r\n        }\r\n        \r\n        if (!parsed) {\r\n            return true;\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            simpleExpCounter = 0,\r\n            i,\r\n            currentExpression;\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n                if (this.check(node,exp)) {\r\n                    return true;\r\n                }\r\n                simpleExpCounter++;\r\n            }\r\n        }\r\n\r\n        if (simpleExpCounter == parsed.length) {\r\n            return false;\r\n        }\r\n\r\n        var nodes = this.query(document, parsed),\r\n            item;\r\n        for (i = 0; item = nodes[i++];) {\r\n            if (item === node) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    local.filterSingle = function(nodes, exp){\r\n        var matchs = filter.call(nodes, function(node, idx) {\r\n            return local.check(node, exp, idx, nodes,false);\r\n        });    \r\n\r\n        matchs = filter.call(matchs, function(node, idx) {\r\n            return local.check(node, exp, idx, matchs,true);\r\n        }); \r\n        return matchs;\r\n    };\r\n\r\n    local.filter = function(nodes, selector) {\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            return local.filterSingle(nodes,selector);           \r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            i,\r\n            currentExpression,\r\n            ret = [];\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n\r\n                var matchs = local.filterSingle(nodes,exp);  \r\n\r\n                ret = langx.uniq(ret.concat(matchs));\r\n            } else {\r\n                throw new Error(\"not supported selector:\" + selector);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n \r\n    };    \r\n\r\n    local.combine = function(elm, bit) {\r\n        var op = bit.combinator,\r\n            cond = bit,\r\n            node1,\r\n            nodes = [];\r\n\r\n        switch (op) {\r\n            case '>': // direct children\r\n                nodes = children(elm, cond);\r\n                break;\r\n            case '+': // next sibling\r\n                node1 = nextSibling(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '^': // first child\r\n                node1 = firstChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '~': // next siblings\r\n                nodes = nextSiblings(elm, cond);\r\n                break;\r\n            case '++': // next sibling and previous sibling\r\n                var prev = previousSibling(elm, cond, true),\r\n                    next = nextSibling(elm, cond, true);\r\n                if (prev) {\r\n                    nodes.push(prev);\r\n                }\r\n                if (next) {\r\n                    nodes.push(next);\r\n                }\r\n                break;\r\n            case '~~': // next siblings and previous siblings\r\n                nodes = siblings(elm, cond);\r\n                break;\r\n            case '!': // all parent nodes up to document\r\n                nodes = ancestors(elm, cond);\r\n                break;\r\n            case '!>': // direct parent (one level)\r\n                node1 = parent(elm, cond);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!+': // previous sibling\r\n                nodes = previousSibling(elm, cond, true);\r\n                break;\r\n            case '!^': // last child\r\n                node1 = lastChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!~': // previous siblings\r\n                nodes = previousSiblings(elm, cond);\r\n                break;\r\n            default:\r\n                var divided = this.divide(bit);\r\n                nodes = slice.call(elm.querySelectorAll(divided.nativeSelector));\r\n                if (divided.customPseudos) {\r\n                    for (var i = divided.customPseudos.length - 1; i >= 0; i--) {\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes,false)\r\n                        });\r\n\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes,true)\r\n                        });                        \r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    local.query = function(node, selector, single) {\r\n\r\n\r\n        var parsed = this.Slick.parse(selector);\r\n\r\n        var\r\n            founds = [],\r\n            currentExpression, currentBit,\r\n            expressions = parsed.expressions;\r\n\r\n        for (var i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            var currentItems = [node],\r\n                found;\r\n            for (var j = 0;\r\n                (currentBit = currentExpression[j]); j++) {\r\n                found = langx.map(currentItems, function(item, i) {\r\n                    return local.combine(item, currentBit)\r\n                });\r\n                if (found) {\r\n                    currentItems = found;\r\n                }\r\n            }\r\n            if (found) {\r\n                founds = founds.concat(found);\r\n            }\r\n        }\r\n\r\n        return founds;\r\n    }\r\n\r\n\r\n    function ancestor(node, selector, root) {\r\n        var rootIsSelector = root && langx.isString(root);\r\n        while (node = node.parentNode) {\r\n            if (matches(node, selector)) {\r\n                return node;\r\n            }\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node,root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            } \r\n        }\r\n        return null;\r\n    }\r\n\r\n    function ancestors(node, selector,root) {\r\n        var ret = [],\r\n            rootIsSelector = root && langx.isString(root);\r\n        while ((node = node.parentNode) && (node.nodeType !== 9)) {\r\n            ret.push(node);\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node,root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            } \r\n\r\n        }\r\n\r\n        if (selector) {\r\n            ret = local.filter(ret,selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function byId(id, doc) {\r\n        doc = doc || noder.doc();\r\n        return doc.getElementById(id);\r\n    }\r\n\r\n    function children(node, selector) {\r\n        var childNodes = node.childNodes,\r\n            ret = [];\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            var node = childNodes[i];\r\n            if (node.nodeType == 1) {\r\n                ret.push(node);\r\n            }\r\n        }\r\n        if (selector) {\r\n            ret = local.filter(ret,selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function closest(node, selector) {\r\n        while (node && !(matches(node, selector))) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    function descendants(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return slice.call(elm.querySelectorAll(selector));\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        return local.query(elm, selector);\r\n    }\r\n\r\n    function descendant(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return elm.querySelector(selector);\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        var nodes = local.query(elm, selector);\r\n        if (nodes.length > 0) {\r\n            return nodes[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function find(elm,selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        if (matches(elm,selector)) {\r\n            return elm;\r\n        } else {\r\n            return descendant(elm, selector);\r\n        }\r\n    }\r\n\r\n    function findAll(elm,selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        return descendants(elm, selector);\r\n    }\r\n\r\n    function firstChild(elm, selector, first) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[0];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (first) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function lastChild(elm, selector, last) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[childNodes.length - 1];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (last) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function matches(elm, selector) {\r\n        if (!selector || !elm || elm.nodeType !== 1) {\r\n            return false\r\n        }\r\n\r\n        if (langx.isString(selector)) {\r\n            try {\r\n                return nativeMatchesSelector.call(elm, selector.replace(/\\[([^=]+)=\\s*([^'\"\\]]+?)\\s*\\]/g, '[$1=\"$2\"]'));\r\n            } catch (matchError) {\r\n                //console.log(matchError);\r\n            }\r\n            return local.match(elm, selector);\r\n        } else if (langx.isArrayLike(selector)) {\r\n            return langx.inArray(elm,selector) > -1;\r\n        } else if (langx.isPlainObject(selector)){    \r\n            return local.check(elm, selector);\r\n        } else {\r\n            return elm === selector;\r\n        }\r\n\r\n    }\r\n\r\n    function nextSibling(elm, selector, adjacent) {\r\n        var node = elm.nextSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function nextSiblings(elm, selector) {\r\n        var node = elm.nextSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n\r\n    function parent(elm, selector) {\r\n        var node = elm.parentNode;\r\n        if (node && (!selector || matches(node, selector))) {\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function previousSibling(elm, selector, adjacent) {\r\n        var node = elm.previousSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function previousSiblings(elm, selector) {\r\n        var node = elm.previousSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function siblings(elm, selector) {\r\n        var node = elm.parentNode.firstChild,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1 && node !== elm) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    var finder = function() {\r\n        return finder;\r\n    };\r\n\r\n    langx.mixin(finder, {\r\n\r\n        ancestor: ancestor,\r\n\r\n        ancestors: ancestors,\r\n\r\n        byId: byId,\r\n\r\n        children: children,\r\n\r\n        closest: closest,\r\n\r\n        descendant: descendant,\r\n\r\n        descendants: descendants,\r\n\r\n        find: find,\r\n\r\n        findAll: findAll,\r\n\r\n        firstChild: firstChild,\r\n\r\n        lastChild: lastChild,\r\n\r\n        matches: matches,\r\n\r\n        nextSibling: nextSibling,\r\n\r\n        nextSiblings: nextSiblings,\r\n\r\n        parent: parent,\r\n\r\n        previousSibling: previousSibling,\r\n\r\n        previousSiblings: previousSiblings,\r\n\r\n        pseudos: local.pseudos,\r\n\r\n        siblings: siblings\r\n    });\r\n\r\n    return skylark.finder = finder;\r\n});\r\n\ndefine('skylark-utils/datax',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./finder\"\r\n], function(skylark, langx, finder) {\r\n    var map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        camelCase = langx.camelCase,\r\n        deserializeValue = langx.deserializeValue,\r\n\r\n        capitalRE = /([A-Z])/g,\r\n        propMap = {\r\n            'tabindex': 'tabIndex',\r\n            'readonly': 'readOnly',\r\n            'for': 'htmlFor',\r\n            'class': 'className',\r\n            'maxlength': 'maxLength',\r\n            'cellspacing': 'cellSpacing',\r\n            'cellpadding': 'cellPadding',\r\n            'rowspan': 'rowSpan',\r\n            'colspan': 'colSpan',\r\n            'usemap': 'useMap',\r\n            'frameborder': 'frameBorder',\r\n            'contenteditable': 'contentEditable'\r\n        };\r\n\r\n    function setAttribute(elm, name, value) {\r\n        if (value == null) {\r\n            elm.removeAttribute(name);\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n        }\r\n    }\r\n\r\n    function aria(elm,name,value) {\r\n        return this.attr(elm, \"aria-\"+name, value);\r\n    }\r\n\r\n    function attr(elm, name, value) {\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var attrName in name) {\r\n                    attr(elm, attrName, name[attrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                if (elm.hasAttribute && elm.hasAttribute(name)) {\r\n                    return elm.getAttribute(name);\r\n                }\r\n            }\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    // Read all \"data-*\" attributes from a node\r\n    function _attributeData(elm) {\r\n        var store = {}\r\n        langx.each(elm.attributes || [], function(i, attr) {\r\n            if (attr.name.indexOf('data-') == 0) {\r\n                store[camelCase(attr.name.replace('data-', ''))] = deserializeValue(attr.value);\r\n            }\r\n        })\r\n        return store;\r\n    }\r\n\r\n    function _store(elm, confirm) {\r\n        var store = elm[\"_$_store\"];\r\n        if (!store && confirm) {\r\n            store = elm[\"_$_store\"] = _attributeData(elm);\r\n        }\r\n        return store;\r\n    }\r\n\r\n    function _getData(elm, name) {\r\n        if (name === undefined) {\r\n            return _store(elm, true);\r\n        } else {\r\n            var store = _store(elm);\r\n            if (store) {\r\n                if (name in store) {\r\n                    return store[name];\r\n                }\r\n                var camelName = camelCase(name);\r\n                if (camelName in store) {\r\n                    return store[camelName];\r\n                }\r\n            }\r\n            var attrName = 'data-' + name.replace(capitalRE, \"-$1\").toLowerCase()\r\n            return attr(elm, attrName);\r\n        }\r\n\r\n    }\r\n\r\n    function _setData(elm, name, value) {\r\n        var store = _store(elm, true);\r\n        store[camelCase(name)] = value;\r\n    }\r\n\r\n\r\n    function data(elm, name, value) {\r\n\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var dataAttrName in name) {\r\n                    _setData(elm, dataAttrName, name[dataAttrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return _getData(elm, name);\r\n            }\r\n        } else {\r\n            _setData(elm, name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function cleanData(elm) {\r\n        if (elm[\"_$_store\"]) {\r\n            delete elm[\"_$_store\"];\r\n        }\r\n    }\r\n\r\n    function removeData(elm, names) {\r\n        if (langx.isString(names)) {\r\n            names = names.split(/\\s+/);\r\n        }\r\n        var store = _store(elm, true);\r\n        names.forEach(function(name) {\r\n            delete store[name];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function pluck(nodes, property) {\r\n        return map.call(nodes, function(elm) {\r\n            return elm[property];\r\n        });\r\n    }\r\n\r\n    function prop(elm, name, value) {\r\n        name = propMap[name] || name;\r\n        if (value === undefined) {\r\n            return elm[name];\r\n        } else {\r\n            elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function removeAttr(elm, name) {\r\n        name.split(' ').forEach(function(attr) {\r\n            setAttribute(elm, attr);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function removeProp(elm, name) {\r\n        name.split(' ').forEach(function(prop) {\r\n            delete elm[prop];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function text(elm, txt) {\r\n        if (txt === undefined) {\r\n            return elm.textContent;\r\n        } else {\r\n            elm.textContent = txt == null ? '' : '' + txt;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function val(elm, value) {\r\n        if (value === undefined) {\r\n            if (elm.multiple) {\r\n                // select multiple values\r\n                var selectedOptions = filter.call(finder.find(elm, \"option\"), (function(option) {\r\n                    return option.selected;\r\n                }));\r\n                return pluck(selectedOptions, \"value\");\r\n            } else {\r\n                return elm.value;\r\n            }\r\n        } else {\r\n            elm.value = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function datax() {\r\n        return datax;\r\n    }\r\n\r\n    langx.mixin(datax, {\r\n        aria: aria,\r\n        \r\n        attr: attr,\r\n\r\n        cleanData : cleanData,\r\n        \r\n        data: data,\r\n\r\n        pluck: pluck,\r\n\r\n        prop: prop,\r\n\r\n        removeAttr: removeAttr,\r\n\r\n        removeData: removeData,\r\n\r\n        removeProp: removeProp,\r\n\r\n        text: text,\r\n\r\n        val: val\r\n    });\r\n\r\n    return skylark.datax = datax;\r\n});\r\n\ndefine('skylark-utils/eventer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./finder\",\r\n    \"./noder\",\r\n    \"./datax\"\r\n], function(skylark, langx, browser, finder, noder, datax) {\r\n    var mixin = langx.mixin,\r\n        each = langx.each,\r\n        slice = Array.prototype.slice,\r\n        uid = langx.uid,\r\n        ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\r\n        eventMethods = {\r\n            preventDefault: \"isDefaultPrevented\",\r\n            stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n            stopPropagation: \"isPropagationStopped\"\r\n        },\r\n        readyRE = /complete|loaded|interactive/;\r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            langx.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = langx.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = langx.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            type: segs[0],\r\n            ns: segs.slice(1).sort().join(\" \")\r\n        };\r\n    }\r\n\r\n    //create a custom dom event\r\n    var createEvent = (function() {\r\n        var EventCtors = [\r\n                window[\"CustomEvent\"], // 0 default\r\n                window[\"CompositionEvent\"], // 1\r\n                window[\"DragEvent\"], // 2\r\n                window[\"Event\"], // 3\r\n                window[\"FocusEvent\"], // 4\r\n                window[\"KeyboardEvent\"], // 5\r\n                window[\"MessageEvent\"], // 6\r\n                window[\"MouseEvent\"], // 7\r\n                window[\"MouseScrollEvent\"], // 8\r\n                window[\"MouseWheelEvent\"], // 9\r\n                window[\"MutationEvent\"], // 10\r\n                window[\"ProgressEvent\"], // 11\r\n                window[\"TextEvent\"], // 12\r\n                window[\"TouchEvent\"], // 13\r\n                window[\"UIEvent\"], // 14\r\n                window[\"WheelEvent\"], // 15\r\n                window[\"ClipboardEvent\"] // 16\r\n            ],\r\n            NativeEvents = {\r\n                \"compositionstart\": 1, // CompositionEvent\r\n                \"compositionend\": 1, // CompositionEvent\r\n                \"compositionupdate\": 1, // CompositionEvent\r\n\r\n                \"beforecopy\": 16, // ClipboardEvent\r\n                \"beforecut\": 16, // ClipboardEvent\r\n                \"beforepaste\": 16, // ClipboardEvent\r\n                \"copy\": 16, // ClipboardEvent\r\n                \"cut\": 16, // ClipboardEvent\r\n                \"paste\": 16, // ClipboardEvent\r\n\r\n                \"drag\": 2, // DragEvent\r\n                \"dragend\": 2, // DragEvent\r\n                \"dragenter\": 2, // DragEvent\r\n                \"dragexit\": 2, // DragEvent\r\n                \"dragleave\": 2, // DragEvent\r\n                \"dragover\": 2, // DragEvent\r\n                \"dragstart\": 2, // DragEvent\r\n                \"drop\": 2, // DragEvent\r\n\r\n                \"abort\": 3, // Event\r\n                \"change\": 3, // Event\r\n                \"error\": 3, // Event\r\n                \"selectionchange\": 3, // Event\r\n                \"submit\": 3, // Event\r\n                \"reset\": 3, // Event\r\n\r\n                \"focus\": 4, // FocusEvent\r\n                \"blur\": 4, // FocusEvent\r\n                \"focusin\": 4, // FocusEvent\r\n                \"focusout\": 4, // FocusEvent\r\n\r\n                \"keydown\": 5, // KeyboardEvent\r\n                \"keypress\": 5, // KeyboardEvent\r\n                \"keyup\": 5, // KeyboardEvent\r\n\r\n                \"message\": 6, // MessageEvent\r\n\r\n                \"click\": 7, // MouseEvent\r\n                \"contextmenu\": 7, // MouseEvent\r\n                \"dblclick\": 7, // MouseEvent\r\n                \"mousedown\": 7, // MouseEvent\r\n                \"mouseup\": 7, // MouseEvent\r\n                \"mousemove\": 7, // MouseEvent\r\n                \"mouseover\": 7, // MouseEvent\r\n                \"mouseout\": 7, // MouseEvent\r\n                \"mouseenter\": 7, // MouseEvent\r\n                \"mouseleave\": 7, // MouseEvent\r\n\r\n\r\n                \"textInput\": 12, // TextEvent\r\n\r\n                \"touchstart\": 13, // TouchEvent\r\n                \"touchmove\": 13, // TouchEvent\r\n                \"touchend\": 13, // TouchEvent\r\n\r\n                \"load\": 14, // UIEvent\r\n                \"resize\": 14, // UIEvent\r\n                \"select\": 14, // UIEvent\r\n                \"scroll\": 14, // UIEvent\r\n                \"unload\": 14, // UIEvent,\r\n\r\n                \"wheel\": 15 // WheelEvent\r\n            }\r\n        ;\r\n\r\n        function getEventCtor(type) {\r\n            var idx = NativeEvents[type];\r\n            if (!idx) {\r\n                idx = 0;\r\n            }\r\n            return EventCtors[idx];\r\n        }\r\n\r\n        return function(type, props) {\r\n            //create a custom dom event\r\n\r\n            if (langx.isString(type)) {\r\n                props = props || {};\r\n            } else {\r\n                props = type || {};\r\n                type = props.type || \"\";\r\n            }\r\n            var parsed = parse(type);\r\n            type = parsed.type;\r\n\r\n            props = langx.mixin({\r\n                bubbles: true,\r\n                cancelable: true\r\n            }, props);\r\n\r\n            if (parsed.ns) {\r\n                props.namespace = parsed.ns;\r\n            }\r\n\r\n            var ctor = getEventCtor(type),\r\n                e = new ctor(type, props);\r\n\r\n            langx.safeMixin(e, props);\r\n\r\n            return compatible(e);\r\n        };\r\n    })();\r\n\r\n    function createProxy(src,props) {\r\n        var key,\r\n            proxy = {\r\n                originalEvent: src\r\n            };\r\n        for (key in src) {\r\n            if (key !== \"keyIdentifier\" && !ignoreProperties.test(key) && src[key] !== undefined) {\r\n                proxy[key] = src[key];\r\n            }\r\n        }\r\n        if (props) {\r\n            langx.mixin(proxy,props);\r\n        }\r\n        return compatible(proxy, src);\r\n    }\r\n\r\n    var\r\n        specialEvents = {},\r\n        focusinSupported = \"onfocusin\" in window,\r\n        focus = { focus: \"focusin\", blur: \"focusout\" },\r\n        hover = { mouseenter: \"mouseover\", mouseleave: \"mouseout\" },\r\n        realEvent = function(type) {\r\n            return hover[type] || (focusinSupported && focus[type]) || type;\r\n        },\r\n        handlers = {},\r\n        EventBindings = langx.klass({\r\n            init: function(target, event) {\r\n                this._target = target;\r\n                this._event = event;\r\n                this._bindings = [];\r\n            },\r\n\r\n            add: function(fn, options) {\r\n                var bindings = this._bindings,\r\n                    binding = {\r\n                        fn: fn,\r\n                        options: langx.mixin({}, options)\r\n                    };\r\n\r\n                bindings.push(binding);\r\n\r\n                var self = this;\r\n                if (!self._listener) {\r\n                    self._listener = function(domEvt) {\r\n                        var elm = this,\r\n                            e = createProxy(domEvt),\r\n                            args = domEvt._args,\r\n                            bindings = self._bindings,\r\n                            ns = e.namespace;\r\n\r\n                        if (langx.isDefined(args)) {\r\n                            args = [e].concat(args);\r\n                        } else {\r\n                            args = [e];\r\n                        }\r\n\r\n                        langx.each(bindings,function(idx,binding) {\r\n                            var match = elm;\r\n                            if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                                return false;\r\n                            }\r\n                            var fn = binding.fn,\r\n                                options = binding.options || {},\r\n                                selector = options.selector,\r\n                                one = options.one,\r\n                                data = options.data;\r\n\r\n                            if (ns && ns != options.ns && options.ns.indexOf(ns)===-1) {\r\n                                return ;\r\n                            }\r\n                            if (selector) {\r\n                                match = finder.closest(e.target, selector);\r\n                                if (match && match !== elm) {\r\n                                    langx.mixin(e, {\r\n                                        currentTarget: match,\r\n                                        liveFired: elm\r\n                                    });\r\n                                } else {\r\n                                    return ;\r\n                                }\r\n                            }\r\n\r\n                            var originalEvent = self._event;\r\n                            if (originalEvent in hover) {\r\n                                var related = e.relatedTarget;\r\n                                if (related && (related === match || noder.contains(match, related))) {\r\n                                    return;\r\n                                }\r\n                            }                           \r\n\r\n                            if (langx.isDefined(data)) {\r\n                                e.data = data;\r\n                            }\r\n\r\n                            if (one) {\r\n                                self.remove(fn, options);\r\n                            }\r\n\r\n                            var result = fn.apply(match, args);\r\n\r\n                            if (result === false) {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                            }\r\n                        });;\r\n                    };\r\n\r\n                    var event = self._event;\r\n/*\r\n                    if (event in hover) {\r\n                        var l = self._listener;\r\n                        self._listener = function(e) {\r\n                            var related = e.relatedTarget;\r\n                            if (!related || (related !== this && !noder.contains(this, related))) {\r\n                                return l.apply(this, arguments);\r\n                            }\r\n                        }\r\n                    }\r\n*/\r\n\r\n                    if (self._target.addEventListener) {\r\n                        self._target.addEventListener(realEvent(event), self._listener, false);\r\n                    } else {\r\n                        console.warn(\"invalid eventer object\", self._target);\r\n                    }\r\n                }\r\n\r\n            },\r\n            remove: function(fn, options) {\r\n                options = langx.mixin({}, options);\r\n\r\n                function matcherFor(ns) {\r\n                    return new RegExp(\"(?:^| )\" + ns.replace(\" \", \" .* ?\") + \"(?: |$)\");\r\n                }\r\n                var matcher;\r\n                if (options.ns) {\r\n                    matcher = matcherFor(options.ns);\r\n                }\r\n\r\n                this._bindings = this._bindings.filter(function(binding) {\r\n                    var removing = (!fn || fn === binding.fn) &&\r\n                        (!matcher || matcher.test(binding.options.ns)) &&\r\n                        (!options.selector || options.selector == binding.options.selector);\r\n\r\n                    return !removing;\r\n                });\r\n                if (this._bindings.length == 0) {\r\n                    if (this._target.removeEventListener) {\r\n                        this._target.removeEventListener(realEvent(this._event), this._listener, false);\r\n                    }\r\n                    this._listener = null;\r\n                }\r\n            }\r\n        }),\r\n        EventsHandler = langx.klass({\r\n            init: function(elm) {\r\n                this._target = elm;\r\n                this._handler = {};\r\n            },\r\n\r\n            // add a event listener\r\n            // selector Optional\r\n            register: function(event, callback, options) {\r\n                // Seperate the event from the namespace\r\n                var parsed = parse(event),\r\n                    event = parsed.type,\r\n                    specialEvent = specialEvents[event],\r\n                    bindingEvent = specialEvent && (specialEvent.bindType || specialEvent.bindEventName);\r\n\r\n                var events = this._handler;\r\n\r\n                // Check if there is already a handler for this event\r\n                if (events[event] === undefined) {\r\n                    events[event] = new EventBindings(this._target, bindingEvent || event);\r\n                }\r\n\r\n                // Register the new callback function\r\n                events[event].add(callback, langx.mixin({\r\n                    ns: parsed.ns\r\n                }, options)); // options:{selector:xxx}\r\n            },\r\n\r\n            // remove a event listener\r\n            unregister: function(event, fn, options) {\r\n                // Check for parameter validtiy\r\n                var events = this._handler,\r\n                    parsed = parse(event);\r\n                event = parsed.type;\r\n\r\n                if (event) {\r\n                    var listener = events[event];\r\n\r\n                    if (listener) {\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                } else {\r\n                    //remove all events\r\n                    for (event in events) {\r\n                        var listener = events[event];\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                }\r\n            }\r\n        }),\r\n\r\n        findHandler = function(elm) {\r\n            var id = uid(elm),\r\n                handler = handlers[id];\r\n            if (!handler) {\r\n                handler = handlers[id] = new EventsHandler(elm);\r\n            }\r\n            return handler;\r\n        };\r\n\r\n    function off(elm, events, selector, callback) {\r\n        var $this = this\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                off(elm, type, selector, fn);\r\n            })\r\n            return $this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback) && callback !== false) {\r\n            callback = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        if (events) events.forEach(function(event) {\r\n\r\n            handler.unregister(event, callback, {\r\n                selector: selector,\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function on(elm, events, selector, data, callback, one) {\r\n\r\n        var autoRemove, delegator;\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                on(elm, type, selector, data, fn, one);\r\n            });\r\n            return this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        events.forEach(function(event) {\r\n            if (event == \"ready\") {\r\n                return ready(callback);\r\n            }\r\n            handler.register(event, callback, {\r\n                data: data,\r\n                selector: selector,\r\n                one: !!one\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function one(elm, events, selector, data, callback) {\r\n        on(elm, events, selector, data, callback, 1);\r\n\r\n        return this;\r\n    }\r\n\r\n    function stop(event) {\r\n        if (window.document.all) {\r\n            event.keyCode = 0;\r\n        }\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function trigger(evented, type, args) {\r\n        var e;\r\n        if (type instanceof Event) {\r\n            e = type;\r\n        } else {\r\n            e = createEvent(type, args);\r\n        }\r\n        e._args = args;\r\n\r\n        var fn = (evented.dispatchEvent || evented.trigger);\r\n        if (fn) {\r\n            fn.call(evented, e);\r\n        } else {\r\n            console.warn(\"The evented parameter is not a eventable object\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function ready(callback) {\r\n        // need to check if document.body exists for IE as that browser reports\r\n        // document ready when it hasn't yet created the body elm\r\n        if (readyRE.test(document.readyState) && document.body) {\r\n            langx.defer(callback);\r\n        } else {\r\n            document.addEventListener('DOMContentLoaded', callback, false);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    var keyCodeLookup = {\r\n        \"backspace\": 8,\r\n        \"comma\": 188,\r\n        \"delete\": 46,\r\n        \"down\": 40,\r\n        \"end\": 35,\r\n        \"enter\": 13,\r\n        \"escape\": 27,\r\n        \"home\": 36,\r\n        \"left\": 37,\r\n        \"page_down\": 34,\r\n        \"page_up\": 33,\r\n        \"period\": 190,\r\n        \"right\": 39,\r\n        \"space\": 32,\r\n        \"tab\": 9,\r\n        \"up\": 38        \r\n    };\r\n    //example:\r\n    //shortcuts(elm).add(\"CTRL+ALT+SHIFT+X\",function(){console.log(\"test!\")});\r\n    function shortcuts(elm) {\r\n\r\n        var registry = datax.data(elm, \"shortcuts\");\r\n        if (!registry) {\r\n            registry = {};\r\n            datax.data(elm, \"shortcuts\", registry);\r\n            var run = function(shortcut, event) {\r\n                var n = event.metaKey || event.ctrlKey;\r\n                if (shortcut.ctrl == n && shortcut.alt == event.altKey && shortcut.shift == event.shiftKey) {\r\n                    if (event.keyCode == shortcut.keyCode || event.charCode && event.charCode == shortcut.charCode) {\r\n                        event.preventDefault();\r\n                        if (\"keydown\" == event.type) {\r\n                            shortcut.fn(event);\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n            };\r\n            on(elm, \"keyup keypress keydown\", function(event) {\r\n                if (!(/INPUT|TEXTAREA/.test(event.target.nodeName))) {\r\n                    for (var key in registry) {\r\n                        run(registry[key], event);\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        return {\r\n            add: function(pattern, fn) {\r\n                var shortcutKeys;\r\n                if (pattern.indexOf(\",\") > -1) {\r\n                    shortcutKeys = pattern.toLowerCase().split(\",\");\r\n                } else {\r\n                    shortcutKeys = pattern.toLowerCase().split(\" \");\r\n                }\r\n                shortcutKeys.forEach(function(shortcutKey) {\r\n                    var setting = {\r\n                        fn: fn,\r\n                        alt: false,\r\n                        ctrl: false,\r\n                        shift: false\r\n                    };\r\n                    shortcutKey.split(\"+\").forEach(function(key) {\r\n                        switch (key) {\r\n                            case \"alt\":\r\n                            case \"ctrl\":\r\n                            case \"shift\":\r\n                                setting[key] = true;\r\n                                break;\r\n                            default:\r\n                                setting.charCode = key.charCodeAt(0);\r\n                                setting.keyCode = keyCodeLookup[key] || key.toUpperCase().charCodeAt(0);\r\n                        }\r\n                    });\r\n                    var regKey = (setting.ctrl ? \"ctrl\" : \"\") + \",\" + (setting.alt ? \"alt\" : \"\") + \",\" + (setting.shift ? \"shift\" : \"\") + \",\" + setting.keyCode;\r\n                    registry[regKey] = setting;\r\n                })\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    function eventer() {\r\n        return eventer;\r\n    }\r\n\r\n    langx.mixin(eventer, {\r\n        create: createEvent,\r\n\r\n        keys : keyCodeLookup,\r\n\r\n        off: off,\r\n\r\n        on: on,\r\n\r\n        one: one,\r\n\r\n        proxy: createProxy,\r\n\r\n        ready: ready,\r\n\r\n        shortcuts: shortcuts,\r\n\r\n        special : specialEvents,\r\n\r\n        stop: stop,\r\n\r\n        trigger: trigger\r\n\r\n    });\r\n\r\n    return skylark.eventer = eventer;\r\n});\r\n\ndefine('skylark-utils/geom',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./styler\"\r\n], function(skylark, langx, noder,styler) {\r\n    var rootNodeRE = /^(?:body|html)$/i,\r\n        px = langx.toPixel,\r\n        offsetParent = noder.offsetParent,\r\n        cachedScrollbarWidth;\r\n\r\n\r\n    function scrollbarWidth() {\r\n        if ( cachedScrollbarWidth !== undefined ) {\r\n            return cachedScrollbarWidth;\r\n        }\r\n        var w1, w2,\r\n            div = noder.createFragment( \"<div style=\" +\r\n                \"'display:block;position:absolute;width:200px;height:200px;overflow:hidden;'>\" +\r\n                \"<div style='height:300px;width:auto;'></div></div>\" )[0],\r\n            innerDiv = div.childNodes[0];\r\n\r\n        noder.append(document.body,div);\r\n\r\n        w1 = innerDiv.offsetWidth;\r\n        \r\n        styler.css( div, \"overflow\", \"scroll\" );\r\n\r\n        w2 = innerDiv.offsetWidth;\r\n\r\n        if ( w1 === w2 ) {\r\n            w2 = div[0].clientWidth;\r\n        }\r\n\r\n        noder.remove(div);\r\n\r\n        return ( cachedScrollbarWidth = w1 - w2 );\r\n    }\r\n\r\n    function borderExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.borderLeftWidth , elm),\r\n            top: px(s.borderTopWidth, elm),\r\n            right: px(s.borderRightWidth, elm),\r\n            bottom: px(s.borderBottomWidth, elm)\r\n        }\r\n    }\r\n\r\n    //viewport coordinate\r\n    function boundingPosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            return rootNodeRE.test(elm.nodeName) ? { top: 0, left: 0 } : elm.getBoundingClientRect();\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function boundingRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            return elm.getBoundingClientRect()\r\n        } else {\r\n            boundingPosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function clientHeight(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).height;\r\n        } else {\r\n            return clientSize(elm, {\r\n                height: value\r\n            });\r\n        }\r\n    }\r\n\r\n    function clientSize(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            return {\r\n                width: elm.clientWidth,\r\n                height: elm.clientHeight\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom;\r\n                }\r\n            } else {\r\n                var bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width + bex.left + bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height + bex.top + bex.bottom;\r\n                }\r\n\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n        return {\r\n            width: elm.clientWidth,\r\n            height: elm.clientHeight\r\n        };\r\n    }\r\n\r\n    function clientWidth(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).width;\r\n        } else {\r\n            clientSize(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function contentRect(elm) {\r\n        var cs = clientSize(elm),\r\n            pex = paddingExtents(elm);\r\n\r\n\r\n        //// On Opera, offsetLeft includes the parent's border\r\n        //if(has(\"opera\")){\r\n        //    pe.l += be.l;\r\n        //    pe.t += be.t;\r\n        //}\r\n        return {\r\n            left: pex.left,\r\n            top: pex.top,\r\n            width: cs.width - pex.left - pex.right,\r\n            height: cs.height - pex.top - pex.bottom\r\n        };\r\n    }\r\n\r\n    function getDocumentSize(doc) {\r\n        var documentElement = doc.documentElement,\r\n            body = doc.body,\r\n            max = Math.max,\r\n            scrollWidth = max(documentElement.scrollWidth, body.scrollWidth),\r\n            clientWidth = max(documentElement.clientWidth, body.clientWidth),\r\n            offsetWidth = max(documentElement.offsetWidth, body.offsetWidth),\r\n            scrollHeight = max(documentElement.scrollHeight, body.scrollHeight),\r\n            clientHeight = max(documentElement.clientHeight, body.clientHeight),\r\n            offsetHeight = max(documentElement.offsetHeight, body.offsetHeight);\r\n\r\n        return {\r\n            width: scrollWidth < offsetWidth ? clientWidth : scrollWidth,\r\n            height: scrollHeight < offsetHeight ? clientHeight : scrollHeight\r\n        };\r\n    }\r\n\r\n    function height(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).height;\r\n        } else {\r\n            size(elm, {\r\n                height: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function marginExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.marginLeft),\r\n            top: px(s.marginTop),\r\n            right: px(s.marginRight),\r\n            bottom: px(s.marginBottom),\r\n        }\r\n    }\r\n\r\n    function marginRect(elm) {\r\n        var obj = this.relativeRect(elm),\r\n            me = this.marginExtents(elm);\r\n\r\n        return {\r\n                left: obj.left,\r\n                top: obj.top,\r\n                width: obj.width + me.left + me.right,\r\n                height: obj.height + me.top + me.bottom\r\n            };\r\n    }\r\n\r\n\r\n    function paddingExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.paddingLeft),\r\n            top: px(s.paddingTop),\r\n            right: px(s.paddingRight),\r\n            bottom: px(s.paddingBottom),\r\n        }\r\n    }\r\n\r\n    //coordinate to the document\r\n    function pagePosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset\r\n            }\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = pagePosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function pageRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset,\r\n                width: Math.round(obj.width),\r\n                height: Math.round(obj.height)\r\n            }\r\n        } else {\r\n            pagePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    // coordinate relative to it's parent\r\n    function relativePosition(elm, coords) {\r\n        if (coords == undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingPosition(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top,// - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left,// - mex.left\r\n            }\r\n        } else {\r\n            var props = {\r\n                top: coords.top,\r\n                left: coords.left\r\n            }\r\n\r\n            if (styler.css(elm, \"position\") == \"static\") {\r\n                props['position'] = \"relative\";\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function relativeRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingRect(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left,\r\n                width: offset.width,\r\n                height: offset.height\r\n            }\r\n        } else {\r\n            relativePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function scrollIntoView(elm, align) {\r\n        function getOffset(elm, rootElm) {\r\n            var x, y, parent = elm;\r\n\r\n            x = y = 0;\r\n            while (parent && parent != rootElm && parent.nodeType) {\r\n                x += parent.offsetLeft || 0;\r\n                y += parent.offsetTop || 0;\r\n                parent = parent.offsetParent;\r\n            }\r\n\r\n            return { x: x, y: y };\r\n        }\r\n\r\n        var parentElm = elm.parentNode;\r\n        var x, y, width, height, parentWidth, parentHeight;\r\n        var pos = getOffset(elm, parentElm);\r\n\r\n        x = pos.x;\r\n        y = pos.y;\r\n        width = elm.offsetWidth;\r\n        height = elm.offsetHeight;\r\n        parentWidth = parentElm.clientWidth;\r\n        parentHeight = parentElm.clientHeight;\r\n\r\n        if (align == \"end\") {\r\n            x -= parentWidth - width;\r\n            y -= parentHeight - height;\r\n        } else if (align == \"center\") {\r\n            x -= (parentWidth / 2) - (width / 2);\r\n            y -= (parentHeight / 2) - (height / 2);\r\n        }\r\n\r\n        parentElm.scrollLeft = x;\r\n        parentElm.scrollTop = y;\r\n\r\n        return this;\r\n    }\r\n\r\n    function scrollLeft(elm, value) {\r\n        var hasScrollLeft = \"scrollLeft\" in elm;\r\n        if (value === undefined) {\r\n            return hasScrollLeft ? elm.scrollLeft : elm.pageXOffset\r\n        } else {\r\n            if (hasScrollLeft) {\r\n                elm.scrollLeft = value;\r\n            } else {\r\n                elm.scrollTo(value, elm.scrollY);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function scrollTop(elm, value) {\r\n        var hasScrollTop = \"scrollTop\" in elm;\r\n\r\n        if (value === undefined) {\r\n            return hasScrollTop ? elm.scrollTop : elm.pageYOffset\r\n        } else {\r\n            if (hasScrollTop) {\r\n                elm.scrollTop = value;\r\n            } else {\r\n                elm.scrollTo(elm.scrollX, value);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function size(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            if (langx.isWindow(elm)) {\r\n                return {\r\n                    width: elm.innerWidth,\r\n                    height: elm.innerHeight\r\n                }\r\n\r\n            } else if (langx.isDocument(elm)) {\r\n                return getDocumentSize(document);\r\n            } else {\r\n                return {\r\n                    width: elm.offsetWidth,\r\n                    height: elm.offsetHeight\r\n                }\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm),\r\n                    bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined && props.width !== \"\" && props.width !== null) {\r\n                    props.width = props.width - pex.left - pex.right - bex.left - bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined && props.height !== \"\" && props.height !== null) {\r\n                    props.height = props.height - pex.top - pex.bottom - bex.top - bex.bottom;\r\n                }\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function width(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).width;\r\n        } else {\r\n            size(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function geom() {\r\n        return geom;\r\n    }\r\n\r\n    langx.mixin(geom, {\r\n        borderExtents: borderExtents,\r\n        //viewport coordinate\r\n        boundingPosition: boundingPosition,\r\n\r\n        boundingRect: boundingRect,\r\n\r\n        clientHeight: clientHeight,\r\n\r\n        clientSize: clientSize,\r\n\r\n        clientWidth: clientWidth,\r\n\r\n        contentRect: contentRect,\r\n\r\n        getDocumentSize: getDocumentSize,\r\n\r\n        height: height,\r\n\r\n        marginExtents: marginExtents,\r\n\r\n        marginRect : marginRect,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        paddingExtents: paddingExtents,\r\n\r\n        //coordinate to the document\r\n        pagePosition: pagePosition,\r\n\r\n        pageRect: pageRect,\r\n\r\n        // coordinate relative to it's parent\r\n        relativePosition: relativePosition,\r\n\r\n        relativeRect: relativeRect,\r\n\r\n        scrollbarWidth : scrollbarWidth,\r\n\r\n        scrollIntoView: scrollIntoView,\r\n\r\n        scrollLeft: scrollLeft,\r\n\r\n        scrollTop: scrollTop,\r\n\r\n        size: size,\r\n\r\n        width: width\r\n    });\r\n\r\n    return skylark.geom = geom;\r\n});\r\n\ndefine('skylark-utils/fx',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./eventer\"\r\n], function(skylark, langx, browser, geom, styler, eventer) {\r\n    var animationName,\r\n        animationDuration,\r\n        animationTiming,\r\n        animationDelay,\r\n        transitionProperty,\r\n        transitionDuration,\r\n        transitionTiming,\r\n        transitionDelay,\r\n\r\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\r\n        transitionEnd = browser.normalizeCssEvent('TransitionEnd'),\r\n\r\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\r\n        transform = browser.css3PropPrefix + \"transform\",\r\n        cssReset = {};\r\n\r\n\r\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\r\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\r\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\r\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\r\n\r\n    cssReset[transitionProperty = browser.normalizeCssProperty(\"transition-property\")] =\r\n        cssReset[transitionDuration = browser.normalizeCssProperty(\"transition-duration\")] =\r\n        cssReset[transitionDelay = browser.normalizeCssProperty(\"transition-delay\")] =\r\n        cssReset[transitionTiming = browser.normalizeCssProperty(\"transition-timing-function\")] = \"\";\r\n\r\n\r\n\r\n    function animate(elm, properties, duration, ease, callback, delay) {\r\n        var key,\r\n            cssValues = {},\r\n            cssProperties = [],\r\n            transforms = \"\",\r\n            that = this,\r\n            endEvent,\r\n            wrappedCallback,\r\n            fired = false,\r\n            hasScrollTop = false;\r\n\r\n        if (langx.isPlainObject(duration)) {\r\n            ease = duration.easing;\r\n            callback = duration.complete;\r\n            delay = duration.delay;\r\n            duration = duration.duration;\r\n        }\r\n\r\n        if (langx.isString(duration)) {\r\n            duration = fx.speeds[duration];\r\n        }\r\n        if (duration === undefined) {\r\n            duration = fx.speeds.normal;\r\n        }\r\n        duration = duration / 1000;\r\n        if (fx.off) {\r\n            duration = 0;\r\n        }\r\n\r\n        if (langx.isFunction(ease)) {\r\n            callback = ease;\r\n            eace = \"swing\";\r\n        } else {\r\n            ease = ease || \"swing\";\r\n        }\r\n\r\n        if (delay) {\r\n            delay = delay / 1000;\r\n        } else {\r\n            delay = 0;\r\n        }\r\n\r\n        if (langx.isString(properties)) {\r\n            // keyframe animation\r\n            cssValues[animationName] = properties;\r\n            cssValues[animationDuration] = duration + \"s\";\r\n            cssValues[animationTiming] = ease;\r\n            endEvent = animationEnd;\r\n        } else {\r\n            // CSS transitions\r\n            for (key in properties) {\r\n                if (supportedTransforms.test(key)) {\r\n                    transforms += key + \"(\" + properties[key] + \") \";\r\n                } else {\r\n                    if (key === \"scrollTop\") {\r\n                        hasScrollTop = true;\r\n                    }\r\n                    cssValues[key] = properties[key];\r\n                    cssProperties.push(langx.dasherize(key));\r\n                }\r\n            }\r\n            endEvent = transitionEnd;\r\n        }\r\n\r\n        if (transforms) {\r\n            cssValues[transform] = transforms;\r\n            cssProperties.push(transform);\r\n        }\r\n\r\n        if (duration > 0 && langx.isPlainObject(properties)) {\r\n            cssValues[transitionProperty] = cssProperties.join(\", \");\r\n            cssValues[transitionDuration] = duration + \"s\";\r\n            cssValues[transitionDelay] = delay + \"s\";\r\n            cssValues[transitionTiming] = ease;\r\n        }\r\n\r\n        wrappedCallback = function(event) {\r\n            fired = true;\r\n            if (event) {\r\n                if (event.target !== event.currentTarget) {\r\n                    return // makes sure the event didn't bubble from \"below\"\r\n                }\r\n                eventer.off(event.target, endEvent, wrappedCallback)\r\n            } else {\r\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\r\n            }\r\n            styler.css(elm, cssReset);\r\n            callback && callback.call(this);\r\n        };\r\n\r\n        if (duration > 0) {\r\n            eventer.on(elm, endEvent, wrappedCallback);\r\n            // transitionEnd is not always firing on older Android phones\r\n            // so make sure it gets fired\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, ((duration + delay) * 1000) + 25)();\r\n        }\r\n\r\n        // trigger page reflow so new elements can animate\r\n        elm.clientLeft;\r\n\r\n        styler.css(elm, cssValues);\r\n\r\n        if (duration <= 0) {\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, 0)();\r\n        }\r\n\r\n        if (hasScrollTop) {\r\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function show(elm, speed, callback) {\r\n        styler.show(elm);\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            styler.css(elm, \"opacity\", 0)\r\n            animate(elm, { opacity: 1, scale: \"1,1\" }, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    function hide(elm, speed, callback) {\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            animate(elm, { opacity: 0, scale: \"0,0\" }, speed, function() {\r\n                styler.hide(elm);\r\n                if (callback) {\r\n                    callback.call(elm);\r\n                }\r\n            });\r\n        } else {\r\n            styler.hide(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function scrollToTop(elm, pos, speed, callback) {\r\n        var scrollFrom = parseInt(elm.scrollTop),\r\n            i = 0,\r\n            runEvery = 5, // run every 5ms\r\n            freq = speed * 1000 / runEvery,\r\n            scrollTo = parseInt(pos);\r\n\r\n        var interval = setInterval(function() {\r\n            i++;\r\n\r\n            if (i <= freq) elm.scrollTop = (scrollTo - scrollFrom) / freq * i + scrollFrom;\r\n\r\n            if (i >= freq + 1) {\r\n                clearInterval(interval);\r\n                if (callback) langx.debounce(callback, 1000)();\r\n            }\r\n        }, runEvery);\r\n    }\r\n\r\n    function toggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            show(elm, speed, callback);\r\n        } else {\r\n            hide(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function fadeTo(elm, speed, opacity, easing, callback) {\r\n        animate(elm, { opacity: opacity }, speed, easing, callback);\r\n        return this;\r\n    }\r\n\r\n    function fadeIn(elm, speed, easing, callback) {\r\n        var target = styler.css(elm, \"opacity\");\r\n        if (target > 0) {\r\n            styler.css(elm, \"opacity\", 0);\r\n        } else {\r\n            target = 1;\r\n        }\r\n        styler.show(elm);\r\n\r\n        fadeTo(elm, speed, target, easing, callback);\r\n\r\n        return this;\r\n    }\r\n\r\n    function fadeOut(elm, speed, easing, callback) {\r\n        var _elm = elm,\r\n            complete,\r\n            options = {};\r\n\r\n        if (langx.isPlainObject(speed)) {\r\n            options.easing = speed.easing;\r\n            options.duration = speed.duration;\r\n            complete = speed.complete;\r\n        } else {\r\n            options.duration = speed;\r\n            if (callback) {\r\n                complete = callback;\r\n                options.easing = easing;\r\n            } else {\r\n                complete = easing;\r\n            }\r\n        }\r\n        options.complete = function() {\r\n            styler.hide(elm);\r\n            if (complete) {\r\n                complete.call(elm);\r\n            }\r\n        }\r\n\r\n        fadeTo(elm, options, 0);\r\n\r\n        return this;\r\n    }\r\n\r\n    function fadeToggle(elm, speed, ceasing, allback) {\r\n        if (styler.isInvisible(elm)) {\r\n            fadeIn(elm, speed, easing, callback);\r\n        } else {\r\n            fadeOut(elm, speed, easing, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function slideDown(elm,duration,callback) {    \r\n    \r\n        // get the element position to restore it then\r\n        var position = styler.css(elm,'position');\r\n        \r\n        // show element if it is hidden\r\n        show(elm);\r\n        \r\n        // place it so it displays as usually but hidden\r\n        styler.css(elm,{\r\n            position: 'absolute',\r\n            visibility: 'hidden'\r\n        });\r\n        \r\n        // get naturally height, margin, padding\r\n        var marginTop = styler.css(elm,'margin-top');\r\n        var marginBottom = styler.css(elm,'margin-bottom');\r\n        var paddingTop = styler.css(elm,'padding-top');\r\n        var paddingBottom = styler.css(elm,'padding-bottom');\r\n        var height = styler.css(elm,'height');\r\n        \r\n        // set initial css for animation\r\n        styler.css(elm,{\r\n            position: position,\r\n            visibility: 'visible',\r\n            overflow: 'hidden',\r\n            height: 0,\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0\r\n        });\r\n        \r\n        // animate to gotten height, margin and padding\r\n        animate(elm,{\r\n            height: height,\r\n            marginTop: marginTop,\r\n            marginBottom: marginBottom,\r\n            paddingTop: paddingTop,\r\n            paddingBottom: paddingBottom\r\n        }, {\r\n            duration : duration,\r\n            complete: function(){\r\n                if (callback) {\r\n                    callback.apply(elm); \r\n                }\r\n            }    \r\n        }\r\n    );\r\n        \r\n        return this;\r\n    };\r\n\r\n    function slideUp(elm,duration,callback) {\r\n        // active the function only if the element is visible\r\n        if (geom.height(elm) > 0) {\r\n                   \r\n            // get the element position to restore it then\r\n            var position = styler.css(elm,'position');\r\n            \r\n            // get the element height, margin and padding to restore them then\r\n            var height = styler.css(elm,'height');\r\n            var marginTop = styler.css(elm,'margin-top');\r\n            var marginBottom = styler.css(elm,'margin-bottom');\r\n            var paddingTop = styler.css(elm,'padding-top');\r\n            var paddingBottom = styler.css(elm,'padding-bottom');\r\n            \r\n            // set initial css for animation\r\n            styler.css(elm,{\r\n                visibility: 'visible',\r\n                overflow: 'hidden',\r\n                height: height,\r\n                marginTop: marginTop,\r\n                marginBottom: marginBottom,\r\n                paddingTop: paddingTop,\r\n                paddingBottom: paddingBottom\r\n            });\r\n            \r\n            // animate element height, margin and padding to zero\r\n            animate(elm,{\r\n                height: 0,\r\n                marginTop: 0,\r\n                marginBottom: 0,\r\n                paddingTop: 0,\r\n                paddingBottom: 0\r\n            }, { \r\n                // callback : restore the element position, height, margin and padding to original values\r\n                duration: duration,\r\n                queue: false,\r\n                complete: function(){\r\n                    hide(elm);\r\n                    styler.css(elm,{\r\n                        visibility: 'visible',\r\n                        overflow: 'hidden',\r\n                        height: height,\r\n                        marginTop: marginTop,\r\n                        marginBottom: marginBottom,\r\n                        paddingTop: paddingTop,\r\n                        paddingBottom: paddingBottom\r\n                    });\r\n                    if (callback) {\r\n                        callback.apply(elm); \r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    };\r\n    \r\n    /* SlideToggle */\r\n    function slideToggle(elm,duration,callback) {\r\n    \r\n        // if the element is hidden, slideDown !\r\n        if (geom.height(elm) == 0) {\r\n            slideDown(elm,duration,callback);\r\n        } \r\n        // if the element is visible, slideUp !\r\n        else {\r\n            slideUp(elm,duration,callback);\r\n        }\r\n        return this;\r\n    };\r\n\r\n\r\n    function fx() {\r\n        return fx;\r\n    }\r\n\r\n    langx.mixin(fx, {\r\n        off: false,\r\n\r\n        speeds: {\r\n            normal: 400,\r\n            fast: 200,\r\n            slow: 600\r\n        },\r\n\r\n        animate: animate,\r\n        fadeIn: fadeIn,\r\n        fadeOut: fadeOut,\r\n        fadeTo: fadeTo,\r\n        fadeToggle: fadeToggle,\r\n        hide: hide,\r\n        scrollToTop: scrollToTop,\r\n\r\n        slideDown : slideDown,\r\n        slideToggle : slideToggle,\r\n        slideUp : slideUp,\r\n        show: show,\r\n        toggle: toggle\r\n    });\r\n\r\n    return skylark.fx = fx;\r\n});\ndefine('skylark-utils/query',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./fx\"\r\n], function(skylark, langx, noder, datax, eventer, finder, geom, styler, fx) {\r\n    var some = Array.prototype.some,\r\n        push = Array.prototype.push,\r\n        every = Array.prototype.every,\r\n        concat = Array.prototype.concat,\r\n        slice = Array.prototype.slice,\r\n        map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        forEach = Array.prototype.forEach,\r\n        indexOf = Array.prototype.indexOf,\r\n        isQ;\r\n\r\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\r\n\r\n    var funcArg = langx.funcArg,\r\n        isArrayLike = langx.isArrayLike,\r\n        isString = langx.isString,\r\n        uniq = langx.uniq,\r\n        isFunction = langx.isFunction;\r\n\r\n    var type = langx.type,\r\n        isArray = langx.isArray,\r\n\r\n        isWindow = langx.isWindow,\r\n\r\n        isDocument = langx.isDocument,\r\n\r\n        isObject = langx.isObject,\r\n\r\n        isPlainObject = langx.isPlainObject,\r\n\r\n        compact = langx.compact,\r\n\r\n        flatten = langx.flatten,\r\n\r\n        camelCase = langx.camelCase,\r\n\r\n        dasherize = langx.dasherize,\r\n        children = finder.children;\r\n\r\n    function wrapper_map(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = $.map(self, function(elem, idx) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n            return $(uniq(result));\r\n        }\r\n    }\r\n\r\n    function wrapper_selector(func, context, last) {\r\n        return function(selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem] : [elem, selector]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper_selector_until(func, context, last) {\r\n        return function(util, selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            if (selector === undefined) {\r\n                selector = util;\r\n                util = undefined;\r\n            }\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem, util] : [elem, selector, util]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function wrapper_every_act(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            this.each(function(idx) {\r\n                func.apply(context, [this].concat(params));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\r\n        return function(arg1) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            forEach.call(self, function(elem, idx) {\r\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\r\n                func.apply(context, [elem, arg1].concat(params.slice(1)));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_some_chk(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            return some.call(self, function(elem) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapper_name_value(func, context, oldValueFunc) {\r\n        return function(name, value) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n\r\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem, name));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem].concat(params));\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0], name]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function wrapper_value(func, context, oldValueFunc) {\r\n        return function(value) {\r\n            var self = this;\r\n\r\n            if (langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem, newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0]]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var NodeList = langx.klass({\r\n        klassName: \"SkNodeList\",\r\n        init: function(selector, context) {\r\n            var self = this,\r\n                match, nodes, node, props;\r\n\r\n            if (selector) {\r\n                self.context = context = context || noder.doc();\r\n\r\n                if (isString(selector)) {\r\n                    // a html string or a css selector is expected\r\n                    self.selector = selector;\r\n\r\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\r\n                        match = [null, selector, null];\r\n                    } else {\r\n                        match = rquickExpr.exec(selector);\r\n                    }\r\n\r\n                    if (match) {\r\n                        if (match[1]) {\r\n                            // if selector is html\r\n                            nodes = noder.createFragment(selector);\r\n\r\n                            if (langx.isPlainObject(context)) {\r\n                                props = context;\r\n                            }\r\n\r\n                        } else {\r\n                            node = finder.byId(match[2], noder.ownerDoc(context));\r\n\r\n                            if (node) {\r\n                                // if selector is id\r\n                                nodes = [node];\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        // if selector is css selector\r\n                        if (langx.isString(context)) {\r\n                            context = finder.find(context);\r\n                        }\r\n\r\n                        nodes = finder.descendants(context, selector);\r\n                    }\r\n                } else {\r\n                    if (isArray(selector)) {\r\n                        // a dom node array is expected\r\n                        nodes = selector;\r\n                    } else {\r\n                        // a dom node is expected\r\n                        nodes = [selector];\r\n                    }\r\n                    //self.add(selector, false);\r\n                }\r\n            }\r\n\r\n\r\n            if (nodes) {\r\n\r\n                push.apply(self, nodes);\r\n\r\n                if (props) {\r\n                    for ( var name  in props ) {\r\n                        // Properties of context are called as methods if possible\r\n                        if ( langx.isFunction( this[ name ] ) ) {\r\n                            this[ name ]( props[ name ] );\r\n                        } else {\r\n                            this.attr( name, props[ name ] );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return self;\r\n        }\r\n    });\r\n\r\n    var query = (function() {\r\n        isQ = function(object) {\r\n            return object instanceof NodeList;\r\n        }\r\n        init = function(selector, context) {\r\n            return new NodeList(selector, context);\r\n        }\r\n\r\n        var $ = function(selector, context) {\r\n            if (isFunction(selector)) {\r\n                eventer.ready(function() {\r\n                    selector($);\r\n                });\r\n            } else if (isQ(selector)) {\r\n                return selector;\r\n            } else {\r\n                if (context && isQ(context) && isString(selector)) {\r\n                    return context.find(selector);\r\n                }\r\n                return init(selector, context);\r\n            }\r\n        };\r\n\r\n        $.fn = NodeList.prototype;\r\n        langx.mixin($.fn, {\r\n            // `map` and `slice` in the jQuery API work differently\r\n            // from their array counterparts\r\n            length : 0,\r\n\r\n            map: function(fn) {\r\n                return $(uniq(langx.map(this, function(el, i) {\r\n                    return fn.call(el, i, el)\r\n                })));\r\n            },\r\n\r\n            slice: function() {\r\n                return $(slice.apply(this, arguments))\r\n            },\r\n\r\n            forEach: function() {\r\n                return forEach.apply(this,arguments);\r\n            },\r\n\r\n            get: function(idx) {\r\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n            },\r\n\r\n            indexOf: function() {\r\n                return indexOf.apply(this,arguments);\r\n            },\r\n\r\n            toArray: function() {\r\n                return slice.call(this);\r\n            },\r\n\r\n            size: function() {\r\n                return this.length\r\n            },\r\n\r\n            remove: wrapper_every_act(noder.remove, noder),\r\n\r\n            each: function(callback) {\r\n                langx.each(this, callback);\r\n                return this;\r\n            },\r\n\r\n            filter: function(selector) {\r\n                if (isFunction(selector)) return this.not(this.not(selector))\r\n                return $(filter.call(this, function(element) {\r\n                    return finder.matches(element, selector)\r\n                }))\r\n            },\r\n\r\n            add: function(selector, context) {\r\n                return $(uniq(this.toArray().concat($(selector, context).toArray())));\r\n            },\r\n\r\n            is: function(selector) {\r\n                return this.length > 0 && finder.matches(this[0], selector)\r\n            },\r\n\r\n            not: function(selector) {\r\n                var nodes = []\r\n                if (isFunction(selector) && selector.call !== undefined)\r\n                    this.each(function(idx) {\r\n                        if (!selector.call(this, idx)) nodes.push(this)\r\n                    })\r\n                else {\r\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n                    this.forEach(function(el) {\r\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\r\n                    })\r\n                }\r\n                return $(nodes)\r\n            },\r\n\r\n            has: function(selector) {\r\n                return this.filter(function() {\r\n                    return isObject(selector) ?\r\n                        noder.contains(this, selector) :\r\n                        $(this).find(selector).size()\r\n                })\r\n            },\r\n\r\n            eq: function(idx) {\r\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\r\n            },\r\n\r\n            first: function() {\r\n                return this.eq(0);\r\n            },\r\n\r\n            last: function() {\r\n                return this.eq(-1);\r\n            },\r\n\r\n            find: wrapper_selector(finder.descendants, finder),\r\n\r\n            closest: wrapper_selector(finder.closest, finder),\r\n            /*\r\n                        closest: function(selector, context) {\r\n                            var node = this[0],\r\n                                collection = false\r\n                            if (typeof selector == 'object') collection = $(selector)\r\n                            while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\r\n                                node = node !== context && !isDocument(node) && node.parentNode\r\n                            return $(node)\r\n                        },\r\n            */\r\n\r\n\r\n            parents: wrapper_selector(finder.ancestors, finder),\r\n\r\n            parentsUntil: wrapper_selector_until(finder.ancestors, finder),\r\n\r\n\r\n            parent: wrapper_selector(finder.parent, finder),\r\n\r\n            children: wrapper_selector(finder.children, finder),\r\n\r\n            contents: wrapper_map(noder.contents, noder),\r\n\r\n            empty: wrapper_every_act(noder.empty, noder),\r\n\r\n            // `pluck` is borrowed from Prototype.js\r\n            pluck: function(property) {\r\n                return langx.map(this, function(el) {\r\n                    return el[property]\r\n                })\r\n            },\r\n\r\n            pushStack : function(elms) {\r\n                var ret = $(elms);\r\n                ret.prevObject = this;\r\n                return ret;\r\n            },\r\n            show: wrapper_every_act(fx.show, fx),\r\n\r\n            replaceWith: function(newContent) {\r\n                return this.before(newContent).remove();\r\n            },\r\n\r\n            wrap: function(structure) {\r\n                var func = isFunction(structure)\r\n                if (this[0] && !func)\r\n                    var dom = $(structure).get(0),\r\n                        clone = dom.parentNode || this.length > 1\r\n\r\n                return this.each(function(index) {\r\n                    $(this).wrapAll(\r\n                        func ? structure.call(this, index) :\r\n                        clone ? dom.cloneNode(true) : dom\r\n                    )\r\n                })\r\n            },\r\n\r\n            wrapAll: function(wrappingElement) {\r\n                if (this[0]) {\r\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\r\n                    var children;\r\n                    // drill down to the inmost element\r\n                    while ((children = wrappingElement.children()).length) {\r\n                        wrappingElement = children.first();\r\n                    }\r\n                    $(wrappingElement).append(this);\r\n                }\r\n                return this\r\n            },\r\n\r\n            wrapInner: function(wrappingElement) {\r\n                var func = isFunction(wrappingElement)\r\n                return this.each(function(index) {\r\n                    var self = $(this),\r\n                        contents = self.contents(),\r\n                        dom = func ? wrappingElement.call(this, index) : wrappingElement\r\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n                })\r\n            },\r\n\r\n            unwrap: function(selector) {\r\n                if (this.parent().children().length === 0) {\r\n                    // remove dom without text\r\n                    this.parent(selector).not(\"body\").each(function() {\r\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\r\n                    });\r\n                } else {\r\n                    this.parent().each(function() {\r\n                        $(this).replaceWith($(this).children())\r\n                    });\r\n                }\r\n                return this\r\n            },\r\n\r\n            clone: function() {\r\n                return this.map(function() {\r\n                    return this.cloneNode(true)\r\n                })\r\n            },\r\n\r\n            hide: wrapper_every_act(fx.hide, fx),\r\n\r\n            toggle: function(setting) {\r\n                return this.each(function() {\r\n                    var el = $(this);\r\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show(): el.hide()\r\n                })\r\n            },\r\n\r\n            prev: function(selector) {\r\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            prevAll: wrapper_selector(finder.previousSibling, finder),\r\n\r\n            next: function(selector) {\r\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            nextAll: wrapper_selector(finder.nextSiblings, finder),\r\n\r\n            siblings: wrapper_selector(finder.siblings, finder),\r\n\r\n            html: wrapper_value(noder.html, noder, noder.html),\r\n\r\n            text: wrapper_value(datax.text, datax, datax.text),\r\n\r\n            attr: wrapper_name_value(datax.attr, datax, datax.attr),\r\n\r\n            removeAttr: wrapper_every_act(datax.removeAttr, datax),\r\n\r\n            prop: wrapper_name_value(datax.prop, datax, datax.prop),\r\n\r\n            removeProp: wrapper_every_act(datax.removeProp, datax),\r\n\r\n            data: wrapper_name_value(datax.data, datax, datax.data),\r\n\r\n            removeData: wrapper_every_act(datax.removeData, datax),\r\n\r\n            val: wrapper_value(datax.val, datax, datax.val),\r\n\r\n            offset: wrapper_value(geom.pagePosition, geom, geom.pagePosition),\r\n\r\n            style: wrapper_name_value(styler.css, styler),\r\n\r\n            css: wrapper_name_value(styler.css, styler),\r\n\r\n            index: function(elem) {\r\n                if (elem) {\r\n                    return this.indexOf($(elem)[0]);\r\n                } else {\r\n                    return this.parent().children().indexOf(this[0]);\r\n                }\r\n            },\r\n\r\n            //hasClass(name)\r\n            hasClass: wrapper_some_chk(styler.hasClass, styler),\r\n\r\n            //addClass(name)\r\n            addClass: wrapper_every_act_firstArgFunc(styler.addClass, styler, styler.className),\r\n\r\n            //removeClass(name)\r\n            removeClass: wrapper_every_act_firstArgFunc(styler.removeClass, styler, styler.className),\r\n\r\n            //toogleClass(name,when)\r\n            toggleClass: wrapper_every_act_firstArgFunc(styler.toggleClass, styler, styler.className),\r\n\r\n            scrollTop: wrapper_value(geom.scrollTop, geom),\r\n\r\n            scrollLeft: wrapper_value(geom.scrollLeft, geom),\r\n\r\n            position: function() {\r\n                if (!this.length) return\r\n\r\n                var elem = this[0];\r\n\r\n                return geom.relativePosition(elem);\r\n            },\r\n\r\n            offsetParent: wrapper_map(geom.offsetParent, geom)\r\n        });\r\n\r\n        // for now\r\n        $.fn.detach = $.fn.remove;\r\n\r\n        $.fn.hover = function(fnOver, fnOut) {\r\n            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\r\n        };\r\n\r\n        $.fn.size = wrapper_value(geom.size, geom);\r\n\r\n        $.fn.width = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.height = wrapper_value(geom.height, geom, geom.height);\r\n\r\n        ['width', 'height'].forEach(function(dimension) {\r\n            var offset, Dimension = dimension.replace(/./, function(m) {\r\n                return m[0].toUpperCase()\r\n            });\r\n\r\n            $.fn['outer' + Dimension] = function(margin, value) {\r\n                if (arguments.length) {\r\n                    if (typeof margin !== 'boolean') {\r\n                        value = margin;\r\n                        margin = false;\r\n                    }\r\n                } else {\r\n                    margin = false;\r\n                    value = undefined;\r\n                }\r\n\r\n                if (value === undefined) {\r\n                    var el = this[0];\r\n                    if (!el) {\r\n                        return undefined;\r\n                    }\r\n                    var cb = geom.size(el);\r\n                    if (margin) {\r\n                        var me = geom.marginExtents(el);\r\n                        cb.width = cb.width + me.left + me.right;\r\n                        cb.height = cb.height + me.top + me.bottom;\r\n                    }\r\n                    return dimension === \"width\" ? cb.width : cb.height;\r\n                } else {\r\n                    return this.each(function(idx, el) {\r\n                        var mb = {};\r\n                        var me = geom.marginExtents(el);\r\n                        if (dimension === \"width\") {\r\n                            mb.width = value;\r\n                            if (margin) {\r\n                                mb.width = mb.width - me.left - me.right\r\n                            }\r\n                        } else {\r\n                            mb.height = value;\r\n                            if (margin) {\r\n                                mb.height = mb.height - me.top - me.bottom;\r\n                            }\r\n                        }\r\n                        geom.size(el, mb);\r\n                    })\r\n\r\n                }\r\n            };\r\n        })\r\n\r\n        $.fn.innerWidth = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.innerHeight = wrapper_value(geom.height, geom, geom.height);\r\n\r\n\r\n        var traverseNode = noder.traverse;\r\n\r\n        function wrapper_node_operation(func, context, oldValueFunc) {\r\n            return function(html) {\r\n                var argType, nodes = langx.map(arguments, function(arg) {\r\n                    argType = type(arg)\r\n                    return argType == \"object\" || argType == \"array\" || arg == null ?\r\n                        arg : noder.createFragment(arg)\r\n                });\r\n                if (nodes.length < 1) {\r\n                    return this\r\n                }\r\n                this.each(function(idx) {\r\n                    func.apply(context, [this, nodes, idx > 0]);\r\n                });\r\n                return this;\r\n            }\r\n        }\r\n\r\n\r\n        $.fn.after = wrapper_node_operation(noder.after, noder);\r\n\r\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\r\n\r\n        $.fn.before = wrapper_node_operation(noder.before, noder);\r\n\r\n        $.fn.append = wrapper_node_operation(noder.append, noder);\r\n\r\n\r\n        langx.each( {\r\n            appendTo: \"append\",\r\n            prependTo: \"prepend\",\r\n            insertBefore: \"before\",\r\n            insertAfter: \"after\",\r\n            replaceAll: \"replaceWith\"\r\n        }, function( name, original ) {\r\n            $.fn[ name ] = function( selector ) {\r\n                var elems,\r\n                    ret = [],\r\n                    insert = $( selector ),\r\n                    last = insert.length - 1,\r\n                    i = 0;\r\n\r\n                for ( ; i <= last; i++ ) {\r\n                    elems = i === last ? this : this.clone( true );\r\n                    $( insert[ i ] )[ original ]( elems );\r\n\r\n                    // Support: Android <=4.0 only, PhantomJS 1 only\r\n                    // .get() because push.apply(_, arraylike) throws on ancient WebKit\r\n                    push.apply( ret, elems.get() );\r\n                }\r\n\r\n                return this.pushStack( ret );\r\n            };\r\n        } );\r\n\r\n/*\r\n        $.fn.insertAfter = function(html) {\r\n            $(html).after(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.insertBefore = function(html) {\r\n            $(html).before(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.appendTo = function(html) {\r\n            $(html).append(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.prependTo = function(html) {\r\n            $(html).prepend(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceAll = function(selector) {\r\n            $(selector).replaceWith(this);\r\n            return this;\r\n        };\r\n*/\r\n        return $;\r\n    })();\r\n\r\n    (function($) {\r\n        $.fn.on = wrapper_every_act(eventer.on, eventer);\r\n\r\n        $.fn.off = wrapper_every_act(eventer.off, eventer);\r\n\r\n        $.fn.trigger = wrapper_every_act(eventer.trigger, eventer);\r\n\r\n\r\n        ('focusin focusout focus blur load resize scroll unload click dblclick ' +\r\n            'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\r\n            'change select keydown keypress keyup error').split(' ').forEach(function(event) {\r\n            $.fn[event] = function(data, callback) {\r\n                return (0 in arguments) ?\r\n                    this.on(event, data, callback) :\r\n                    this.trigger(event)\r\n            }\r\n        });\r\n\r\n\r\n        $.fn.one = function(event, selector, data, callback) {\r\n            if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n                callback = data;\r\n                data = selector;\r\n                selector = null;\r\n            }\r\n\r\n            if (langx.isFunction(data)) {\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            return this.on(event, selector, data, callback, 1)\r\n        };\r\n\r\n        $.fn.animate = wrapper_every_act(fx.animate, fx);\r\n\r\n        $.fn.show = wrapper_every_act(fx.show, fx);\r\n        $.fn.hide = wrapper_every_act(fx.hide, fx);\r\n        $.fn.toogle = wrapper_every_act(fx.toogle, fx);\r\n        $.fn.fadeTo = wrapper_every_act(fx.fadeTo, fx);\r\n        $.fn.fadeIn = wrapper_every_act(fx.fadeIn, fx);\r\n        $.fn.fadeOut = wrapper_every_act(fx.fadeOut, fx);\r\n        $.fn.fadeToggle = wrapper_every_act(fx.fadeToggle, fx);\r\n\r\n        $.fn.slideDown = wrapper_every_act(fx.slideDown, fx);\r\n        $.fn.slideToggle = wrapper_every_act(fx.slideToggle, fx);\r\n        $.fn.slideUp = wrapper_every_act(fx.slideUp, fx);\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.end = function() {\r\n            return this.prevObject || $()\r\n        }\r\n\r\n        $.fn.andSelf = function() {\r\n            return this.add(this.prevObject || $())\r\n        }\r\n\r\n        $.fn.addBack = function(selector) {\r\n            if (this.prevObject) {\r\n                if (selector) {\r\n                    return this.add(this.prevObject.filter(selector));\r\n                } else {\r\n                    return this.add(this.prevObject);\r\n                }\r\n            } else {\r\n                return this;\r\n            }\r\n        }\r\n\r\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings'.split(',').forEach(function(property) {\r\n            var fn = $.fn[property]\r\n            $.fn[property] = function() {\r\n                var ret = fn.apply(this, arguments)\r\n                ret.prevObject = this\r\n                return ret\r\n            }\r\n        })\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.query = $.fn.find;\r\n\r\n        $.fn.place = function(refNode, position) {\r\n            // summary:\r\n            //      places elements of this node list relative to the first element matched\r\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\r\n            // queryOrNode:\r\n            //      may be a string representing any valid CSS3 selector or a DOM node.\r\n            //      In the selector case, only the first matching element will be used\r\n            //      for relative positioning.\r\n            // position:\r\n            //      can be one of:\r\n            //\r\n            //      -   \"last\" (default)\r\n            //      -   \"first\"\r\n            //      -   \"before\"\r\n            //      -   \"after\"\r\n            //      -   \"only\"\r\n            //      -   \"replace\"\r\n            //\r\n            //      or an offset in the childNodes\r\n            if (langx.isString(refNode)) {\r\n                refNode = finder.descendant(refNode);\r\n            } else if (isQ(refNode)) {\r\n                refNode = refNode[0];\r\n            }\r\n            return this.each(function(i, node) {\r\n                switch (position) {\r\n                    case \"before\":\r\n                        noder.before(refNode, node);\r\n                        break;\r\n                    case \"after\":\r\n                        noder.after(refNode, node);\r\n                        break;\r\n                    case \"replace\":\r\n                        noder.replace(refNode, node);\r\n                        break;\r\n                    case \"only\":\r\n                        noder.empty(refNode);\r\n                        noder.append(refNode, node);\r\n                        break;\r\n                    case \"first\":\r\n                        noder.prepend(refNode, node);\r\n                        break;\r\n                        // else fallthrough...\r\n                    default: // aka: last\r\n                        noder.append(refNode, node);\r\n                }\r\n            });\r\n        };\r\n\r\n        $.fn.addContent = function(content, position) {\r\n            if (content.template) {\r\n                content = langx.substitute(content.template, content);\r\n            }\r\n            return this.append(content);\r\n        };\r\n\r\n        $.fn.replaceClass = function(newClass, oldClass) {\r\n            this.removeClass(oldClass);\r\n            this.addClass(newClass);\r\n            return this;\r\n        };\r\n\r\n    })(query);\r\n\r\n\r\n    return skylark.query = query;\r\n\r\n});\ndefine('skylark-utils-layout/Orientation',[\r\n    \"skylark-langx/langx\",\r\n    \"./layouts\"\r\n], function(langx,layouts) {\r\n\r\n    var Orientation = layout.Orientation = {\r\n    \t\"horz\" : 1, \r\n    \t\"vert\" : 2\r\n    };\r\n    return Orientation;\r\n});\r\n\ndefine('skylark-utils-layout/box',[\r\n    \"skylark-langx/langx\",\r\n    \"skylark-utils/query\",\r\n    \"./layouts\",\r\n    \"./Orientation\"\r\n], function(langx, $, layouts, Orientation) {\r\n    // TODO : This module will be deleted.\r\n    var box = layouts.box = function(container,options) {\r\n        var options = langx.mixin({\r\n            items : \".item\", // children element selector for item\r\n            wspacing : 100, // width for spacing a child element\r\n            hspacing : 100, // height for spacing a child element\r\n            orientation : Orientation.vert // Laid out elements direction,\r\n        },options)\r\n\r\n\r\n        var size = $(container).clientSize(),\r\n            width = size.width,\r\n            height = size.height,\r\n            x = 0, \r\n            y = 0;\r\n            \r\n        var $items = $(container).children(options.items);        \r\n\r\n        $items.each(function(i){\r\n            // layouts inited item child\r\n            $(this).css({\r\n                \"left\" : x,\r\n                \"top\" : y,\r\n                \"position\" : \"absolute\",\r\n                \"display\" : \"inline-block\"\r\n            });\r\n\r\n            // 垂直排列\r\n            if (options.orientation == Orientation.vert) {\r\n                y += options.hspacing;\r\n                if (y >= (height - options.hspacing)) {\r\n                    y = 0; \r\n                    x += options.wspacing;\r\n                }\r\n            } else {\r\n                x += options.wspacing;\r\n                if (x >= (width - options.wspacing)) {\r\n                    x = 0; \r\n                    y += options.hspacing;\r\n                }\r\n            }\r\n\r\n        });\r\n    };\r\n    \r\n    return box;        \r\n    \r\n});\r\n\ndefine('skylark-utils-layout/bsgrid',[\r\n    \"skylark-langx/langx\",\r\n    \"./layouts\"\r\n], function(langx,layouts) {\r\n    // summary:\r\n    //  The bsgrid layouter is a bootstrap grid layout manager. \r\n\r\n    //TODO: \r\n    var bsgrid = layouts.bsgrid = function(container,options) {\r\n        throw new Error (\"This method is not implemented!\");\r\n    };\r\n\r\n    return bsgrid;\r\n});\r\n\ndefine('skylark-utils-layout/columns',[\r\n    \"skylark-langx/langx\",\r\n    \"skylark-utils/query\",\r\n    \"./layouts\",\r\n], function(langx,$,layouts) {\r\n    // summary:\r\n    //  The bsgrid layouter is a layout manager that adds each child item to a separate column. \r\n\r\n    var columns = layouts.columns = function(container,options) {\r\n        var options = langx.mixin({\r\n            items : \".item\" // children element selector for item\r\n        },options)       \r\n        var $items = $(container).children(options.items);     \r\n        $items.css({\r\n            \"left\" : \"0px\",\r\n            \"top\" : \"0px\",\r\n            \"position\" : \"relative\",\r\n            \"display\" : \"table-cell\"\r\n        });\r\n    };\r\n    \r\n    return columns;    \r\n    \r\n});\r\n\ndefine('skylark-utils-layout/DockStyle',[\r\n    \"skylark-langx/langx\",\r\n    \"./layouts\",\r\n],function(langx,layouts) {\r\n\r\n\tvar DockStyle = layouts.DockStyle = {\r\n\t\t\"none\" : 1, \r\n\t\t\"left\" : 2, \r\n\t\t\"top\" : 3, \r\n\t\t\"right\" : 4, \r\n\t\t\"bottom\" : 5, \r\n\t\t\"client\" : 6\r\n\t};\r\n\r\n\treturn DockStyle;\r\n\r\n});\r\n\ndefine('skylark-utils-layout/dock',[\r\n    \"skylark-langx/langx\",\r\n    \"skylark-utils/datax\",\r\n    \"skylark-utils/finder\",\r\n    \"skylark-utils/geom\",\r\n    \"./layouts\",\r\n\t\"./DockStyle\",\r\n], function(langx,datax,finder,geom,layouts,geom,DockStyle) {\r\n\r\n    var dock = layouts.dock = function(container,options) {\r\n        var options = langx.mixin({\r\n            items : \"[data-region]\" // children element selector for item\r\n        },options)       \r\n\r\n        var size = geom.clientSize(container),\r\n        \tdim = {\r\n        \t\tl : 0,\r\n        \t\tt : 0,\r\n        \t\tw : size.width,\r\n        \t\th : size.height,\r\n        \t},\r\n        \tchildren = finder.children(container,options.items);\r\n\r\n\t\tchildren = children.filter(function(item){ return datax.data(item,\"region\") != \"client\"; })\r\n\t\t\t.concat(children.filter(function(item){ return datax.data(item,\"region\") == \"client\"; }));\r\n\r\n\t\t// set positions/sizes\r\n\t\tchildren.forEach(function(item){\r\n\t\t\tvar region = datax.data(item,\"region\"),\r\n\t\t\t    childSize = geom.size(item);\r\n\r\n\t\t\tif(!region){\r\n\t\t\t\tthrow new Error(\"No dock setting for \" + item.id)\r\n\t\t\t}\r\n\r\n\t\t\t// set elem to upper left corner of unused space; may move it later\r\n\r\n\t\t\tstyler.css(elm,{\r\n\t\t\t\tposition : \"absolute\"\r\n\t\t\t});\r\n\r\n\t\t\t// Size adjustments to make to this child widget\r\n\t\t\tvar bounds = {\r\n\t\t\t\tleft : dim.l,\r\n\t\t\t\ttop : dim.t\r\n\t\t\t};\r\n\r\n\t\t\t// set size && adjust record of remaining space.\r\n\t\t\t// note that setting the width of a <div> may affect its height.\r\n\t\t\tif(region == \"top\" || region == \"bottom\"){\r\n\t\t\t\tbounds.width = dim.w;\r\n\t\t\t\tdim.h -= childSize.height;\r\n\t\t\t\tif(\"region\" == \"top\"){\r\n\t\t\t\t\tdim.t += childSize.height;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tbounds.top = dim.t + dim.h;\r\n\t\t\t\t}\r\n\t\t\t}else if(region == \"left\" || region == \"right\"){\r\n\t\t\t\tbounds.height = dim.h;\r\n\t\t\t\tdim.w -= childSize.width;\r\n\t\t\t\tif(pos == \"left\"){\r\n\t\t\t\t\tdim.l += childSize.width;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tbounds.left = dim.l + dim.w;\r\n\t\t\t\t}\r\n\t\t\t}else if(region == \"client\"){\r\n\t\t\t\tbounds.width = dim.w;\r\n\t\t\t\tbounds.height = dim.h;\r\n\t\t\t}\r\n\r\n\t\t\tgeom.relativeRect(item,bounds);\r\n\t\t});\r\n\r\n\r\n    };\r\n    \r\n    return dock;    \r\n\r\n});\r\n\ndefine('skylark-utils-layout/flow',[\r\n    \"skylark-langx/langx\",\r\n    \"skylark-utils/query\",\r\n    \"./layouts\",\r\n], function(langx,$,layouts) {\r\n    // summary:\r\n    //  The flow layouter is a layout manager that adds items to the right sequentially from the left. \r\n    //  If it can not be added to the right side, it will be added back to the left one position to the left.\r\n    //  It does not change the size of the item added as a big feature of the flow layouter at all. \r\n    //  Therefore, it is placed as it is with the recommended size that the added item has or the explicitly specified size.\r\n\r\n    var flow = layouts.flow = function(container,options) {\r\n        var options = langx.mixin({\r\n            items : \".item\" // children element selector for item\r\n        },options)       \r\n        var $items = $(container).children(options.items);        \r\n        $items.css({\r\n            \"left\" : \"0px\",\r\n            \"top\" : \"0px\",\r\n            \"position\" : \"relative\",\r\n            \"display\" : \"inline-block\"\r\n        });\r\n    };\r\n    \r\n    return flow;\r\n    \r\n});\r\n\ndefine('skylark-utils-layout/grid',[\r\n    \"skylark-langx/langx\",\r\n    \"./layouts\"\r\n], function(langx,layouts) {\r\n    //TODO: \r\n    var grid = layouts.grid = function(container,options) {\r\n        throw new Error (\"This method is not implemented!\");\r\n    };\r\n\r\n    return grid;\r\n});\r\n\ndefine('skylark-utils-layout/masonry',[\r\n    \"skylark-langx/langx\",\r\n    \"skylark-utils/finder\",\r\n    \"skylark-utils/geom\",\r\n    \"skylark-utils/styler\",\r\n    \"./layouts\"\r\n],function(langx,finder,geom,styler,layouts) {\r\n    // summary:\r\n    //  The masnory layouter is a masonry grid layout manager. \r\n   \r\n    var MasonryLayouter = langx.klass({\r\n        _measureColumns: function(children, bounds, container) {\r\n\r\n            var _ = this._,\r\n                calculated = _.calculated;\r\n            // if columnWidth is 0, default to outerWidth of first item\r\n            if (!_.columnWidth) {\r\n                var firstItem = children[0];\r\n                // columnWidth fall back to item of first element\r\n                calculated.columnWidth = firstItem && firstItem.bounds().extraWidth() || bounds.width;\r\n            } else {\r\n                calculated.columnWidth = _.columnWidth;\r\n            }\r\n\r\n            var columnWidth = calculated.columnWidth += _.gutter;\r\n\r\n            // calculate columns\r\n            var containerWidth = bounds.width + _.gutter;\r\n            var cols;\r\n            if (_.cols) {\r\n                cols = _.cols;\r\n            } else {\r\n                var cols = containerWidth / columnWidth;\r\n                // fix rounding errors, typically with gutters\r\n                var excess = columnWidth - containerWidth % columnWidth;\r\n                // if overshoot is less than a pixel, round up, otherwise floor it\r\n                var mathMethod = excess && excess < 1 ? 'round' : 'floor';\r\n                cols = Math[mathMethod](cols);\r\n            }\r\n            calculated.cols = Math.max(cols, 1);\r\n        },\r\n\r\n        _positionItem: function(item, x, y, isInstant) {\r\n            styler.css(item, {\r\n                position: \"absolute\" \r\n            });\r\n            if (isInstant) {\r\n                // if not transition, just set CSS\r\n                geom.relativePositionitem(item,{\r\n                    left : x,\r\n                    top : y\r\n                });\r\n            } else {\r\n                item[this._.animation] ? item[this._.animation](x, y) : item.moveto(x, y);\r\n            }\r\n        },\r\n        _getColGroup: function(colSpan) {\r\n            var _ = this._,\r\n                calculated = _.calculated;\r\n\r\n            if (colSpan < 2) {\r\n                // if brick spans only one column, use all the column Ys\r\n                return calculated.colYs;\r\n            }\r\n\r\n            var colGroup = [];\r\n            // how many different places could this brick fit horizontally\r\n            var groupCount = calculated.cols + 1 - colSpan;\r\n            // for each group potential horizontal position\r\n            for (var i = 0; i < groupCount; i++) {\r\n                // make an array of colY values for that one group\r\n                var groupColYs = calculated.colYs.slice(i, i + colSpan);\r\n                // and get the max value of the array\r\n                colGroup[i] = Math.max.apply(Math, groupColYs);\r\n            }\r\n            return colGroup;\r\n        },\r\n\r\n        _getItemLayoutPosition: function(item) {\r\n            var _ = this._,\r\n                calculated = _.calculated;\r\n\r\n            var itemSize = geom.marginSize(item);\r\n            // how many columns does this brick span\r\n            var remainder = itemSize.width % calculated.columnWidth;\r\n            var mathMethod = remainder && remainder < 1 ? 'round' : 'ceil';\r\n            // round if off by 1 pixel, otherwise use ceil\r\n            var colSpan = Math[mathMethod](itemSize.width / calculated.columnWidth);\r\n            colSpan = Math.min(colSpan, calculated.cols);\r\n\r\n            var colGroup = this._getColGroup(colSpan);\r\n            // get the minimum Y value from the columns\r\n            var minimumY = Math.min.apply(Math, colGroup);\r\n            var shortColIndex = colGroup.indexOf(minimumY);\r\n\r\n            // position the brick\r\n            var position = {\r\n                x: calculated.columnWidth * shortColIndex,\r\n                y: minimumY\r\n            };\r\n\r\n            // apply setHeight to necessary columns\r\n            var setHeight = minimumY + itemSize.height;\r\n            var setSpan = calculated.cols + 1 - colGroup.length;\r\n            for (var i = 0; i < setSpan; i++) {\r\n                calculated.colYs[shortColIndex + i] = setHeight;\r\n            }\r\n            return position;\r\n        },\r\n\r\n        \"_filterItems\": function(items) {\r\n            return items;\r\n        },\r\n\r\n        \"_resetLayout\": function(children, bounds, container) {\r\n            var _ = this._,\r\n                calculated = _.calculated;\r\n            this._measureColumns(children, bounds, container);\r\n\r\n            // reset column Y\r\n            calculated.colYs = [];\r\n            for (var i = 0; i < calculated.cols; i++) {\r\n                calculated.colYs.push(0);\r\n            }\r\n            calculated.maxY = 0;\r\n        },\r\n\r\n        \"_calcLayout\": function(children, bounds, container) {\r\n            this._resetLayout(children, bounds, container);\r\n            var calcInfos = [];\r\n\r\n            children.forEach(function(item) {\r\n                // get x/y object from method\r\n                var position = this._getItemLayoutPosition(item);\r\n                // enqueue\r\n                position.item = item;\r\n                //position.isInstant = isInstant || item.isLayoutInstant;\r\n                calcInfos.push(position);\r\n            }, this);\r\n            return calcInfos;\r\n        },\r\n\r\n        \"_postLayout\": function(calcInfos, container) {\r\n            var _ = this._;\r\n            if (_.autoFit) {\r\n                //var size = container.size;\r\n                //size.height = _.calculated.maxY;\r\n                //container.size = size;\r\n                //TODO: needs a better implementation\r\n                var calculated = _.calculated,\r\n                    maxY = Math.max.apply(Math, calculated.colYs);\r\n\r\n                container.domNode.style.height = maxY + \"px\";\r\n            }\r\n            calcInfos.forEach(function(calcInfo) {\r\n                this._positionItem(calcInfo.item, calcInfo.x, calcInfo.y, calcInfo.isInstant);\r\n            }, this);\r\n            //return children;\r\n        },\r\n\r\n        \"layout\": function() {\r\n            var _ = this._,\r\n                container = _.container,\r\n                children = finder.children(container,_.items),\r\n                bounds = geom.clientSize(container);\r\n                \r\n            var calcInfos = this._calcLayout(children,bounds,container);\r\n            this._postLayout(calcInfos,container);\r\n        },\r\n\r\n        \"init\": function(container,options) {\r\n            var _ = this._ =  langx.mixin ({\r\n                autoFit: true, //dd\r\n                columnWidth: 0, //dd\r\n                cols: 0, //d\r\n                gutter: 0, //\r\n                animation: \"moveto\", //dd\r\n                calculated: {\r\n                    colYs: null,\r\n                    columnWidth: 0,\r\n                    cols: 0\r\n                }\r\n            },options);\r\n            _.container = container;\r\n        }\r\n    });\r\n\r\n    \r\n    var masonry  = layouts.masonry = function(container,options) {\r\n        var layouter = new MasonryLayouter(container,options);\r\n        layouter.layout();\r\n    };\r\n\r\n    return masonry;\r\n});\r\n\ndefine('skylark-utils-layout/rows',[\r\n    \"skylark-langx/langx\",\r\n    \"skylark-utils/query\",\r\n    \"./layouts\",\r\n], function(langx,$,layouts) {\r\n    // summary:\r\n    //  The bsgrid layouter is a layout manager that adds each child item to a separate row. \r\n\r\n    var rows = layouts.rows = function(container,options) {\r\n        var options = langx.mixin({\r\n            items : \".item\" // children element selector for item\r\n        },options)       \r\n        var $items = $(container).children(options.items);     \r\n        $items.css({\r\n            \"left\" : \"0px\",\r\n            \"top\" : \"0px\",\r\n            \"position\" : \"relative\",\r\n            \"display\" : \"list-item\"\r\n        });\r\n    };\r\n    \r\n    return rows;\r\n    \r\n});\r\n\ndefine('skylark-utils-layout/table',[\r\n    \"skylark-langx/langx\",\r\n    \"skylark-utils/query\",\r\n    \"./layouts\",\r\n], function(langx,$,layouts) {\r\n\r\n    var table = layouts.table = function(container,options) {\r\n        var options = langx.mixin({\r\n            items : \".item\" // children element selector for item\r\n        },options)       \r\n        var $items = $(container).children(options.items);             \r\n\r\n        $items.css({\r\n            \"width\" : \"100%\",\r\n            \"display\" : \"table-row\"\r\n        });\r\n\r\n        $items.each(function(){\r\n            $(this).children().css({\r\n                \"display\" : \"table-cell\"\r\n            });\r\n        })\r\n    };\r\n    \r\n    return table;    \r\n\r\n});\r\n\ndefine('skylark-utils-layout/main',[\r\n    \"./layouts\",\r\n    \"./box\",\r\n    \"./bsgrid\",\r\n    \"./columns\",\r\n    \"./dock\",\r\n    \"./DockStyle\",\r\n    \"./flow\",\r\n    \"./grid\",\r\n    \"./masonry\",\r\n    \"./rows\",\r\n    \"./table\"\r\n], function(layouts) {\r\n\r\n\treturn layouts;\r\n});\ndefine('skylark-utils-layout', ['skylark-utils-layout/main'], function (main) { return main; });\n\n"]}