{"version":3,"sources":["oriented.js"],"names":["define","geom","styler","finder","Orientation","el","options","elCSS","css","elWidth","contentRect","width","child1","childAt","child2","firstChildCSS","secondChildCSS","firstChildWidth","marginSize","secondChildWidth","display","flexDirection","Vertical","Horizontal","gridTemplateColumns","split","length","float","touchingSideChild2","clear"],"mappings":";;;;;;;AAAAA,QACC,oBACA,sBACA,sBACA,iBACC,SACDC,EACAC,EACAC,EACAC,GAmDA,OA7CA,SAAkBC,EAAIC,GACrB,IAAIC,EAAQL,EAAOM,IAAIH,GAEtBI,EAAUR,EAAKS,YAAYL,GAAIM,MAE/BC,EAAST,EAAOU,QAAQR,EAAI,EAAGC,GAC/BQ,EAASX,EAAOU,QAAQR,EAAI,EAAGC,GAC/BS,EAAgBH,GAAUV,EAAOM,IAAII,GACrCI,EAAiBF,GAAUZ,EAAOM,IAAIM,GAEtCG,EAAkBL,GAAUX,EAAKiB,WAAWN,GAAQD,MACpDQ,EAAmBL,GAAUb,EAAKiB,WAAWJ,GAAQH,MAEtD,GAAsB,SAAlBJ,EAAMa,QACT,MAA+B,WAAxBb,EAAMc,eAAsD,mBAAxBd,EAAMc,cAC/CjB,EAAYkB,SAAWlB,EAAYmB,WAGtC,GAAsB,SAAlBhB,EAAMa,QACT,OAAOb,EAAMiB,oBAAoBC,MAAM,KAAKC,QAAU,EAAItB,EAAYkB,SAAWlB,EAAYmB,WAG9F,GAAIX,GAAkC,SAAxBG,EAAcY,MAAkB,CAC7C,IAAIC,EAA6C,SAAxBb,EAAcY,MAAmB,OAAS,QAEnE,OAAOb,GAAoC,SAAzBE,EAAea,OAAoBb,EAAea,QAAUD,EACtDxB,EAAYmB,WAAnCnB,EAAYkB,SAGd,OAAQV,IAEoB,UAA1BG,EAAcK,SACY,SAA1BL,EAAcK,SACY,UAA1BL,EAAcK,SACY,SAA1BL,EAAcK,SACdH,GAAmBR,GACH,SAAhBF,EAAMoB,OACNb,GACgB,SAAhBP,EAAMoB,OACNV,EAAkBE,EAAmBV,GAEtCL,EAAYkB,SAAWlB,EAAYmB","file":"../oriented.js","sourcesContent":["define([\r\n\t\"skylark-domx-geom\",\r\n\t\"skylark-domx-styler\",\r\n\t\"skylark-domx-finder\",\r\n\t\"./Orientation\"\r\n],function(\r\n\tgeom,\r\n\tstyler,\r\n\tfinder,\r\n\tOrientation\r\n){\r\n\r\n\t/**\r\n\t * Detects children orientation.\r\n\t */\r\n\tfunction oriented(el, options) {\r\n\t\tvar elCSS = styler.css(el),\r\n\r\n\t\t\telWidth = geom.contentRect(el).width,\r\n\r\n\t\t\tchild1 = finder.childAt(el, 0, options),\r\n\t\t\tchild2 = finder.childAt(el, 1, options),\r\n\t\t\tfirstChildCSS = child1 && styler.css(child1),\r\n\t\t\tsecondChildCSS = child2 && styler.css(child2),\r\n\r\n\t\t\tfirstChildWidth = child1 && geom.marginSize(child1).width,\r\n\t\t\tsecondChildWidth = child2 && geom.marginSize(child2).width;\r\n\r\n\t\tif (elCSS.display === 'flex') {\r\n\t\t\treturn elCSS.flexDirection === 'column' || elCSS.flexDirection === 'column-reverse'\r\n\t\t\t? Orientation.Vertical : Orientation.Horizontal;\r\n\t\t}\r\n\r\n\t\tif (elCSS.display === 'grid') {\r\n\t\t\treturn elCSS.gridTemplateColumns.split(' ').length <= 1 ? Orientation.Vertical : Orientation.Horizontal;\r\n\t\t}\r\n\r\n\t\tif (child1 && firstChildCSS.float !== 'none') {\r\n\t\t\tvar touchingSideChild2 = firstChildCSS.float === 'left' ? 'left' : 'right';\r\n\r\n\t\t\treturn child2 && (secondChildCSS.clear === 'both' || secondChildCSS.clear === touchingSideChild2) ?\r\n\t\t\t\tOrientation.Vertical : Orientation.Horizontal;\r\n\t\t}\r\n\r\n\t\treturn (child1 &&\r\n\t\t\t(\r\n\t\t\t\tfirstChildCSS.display === 'block' ||\r\n\t\t\t\tfirstChildCSS.display === 'flex' ||\r\n\t\t\t\tfirstChildCSS.display === 'table' ||\r\n\t\t\t\tfirstChildCSS.display === 'grid' ||\r\n\t\t\t\tfirstChildWidth >= elWidth &&\r\n\t\t\t\telCSS.float === 'none' ||\r\n\t\t\t\tchild2 &&\r\n\t\t\t\telCSS.float === 'none' &&\r\n\t\t\t\tfirstChildWidth + secondChildWidth > elWidth\r\n\t\t\t) ?\r\n\t\t\tOrientation.Vertical : Orientation.Horizontal\r\n\t\t);\r\n\t}\r\n\r\n\treturn oriented;\r\n});"]}